### YamlMime:XRefMap
sorted: true
references:
- uid: Wrap
  name: Wrap
  href: api/Wrap.html
  commentId: N:Wrap
  fullName: Wrap
  nameWithType: Wrap
- uid: Wrap.DictionaryExtensions
  name: DictionaryExtensions
  href: api/Wrap.DictionaryExtensions.html
  commentId: T:Wrap.DictionaryExtensions
  fullName: Wrap.DictionaryExtensions
  nameWithType: DictionaryExtensions
- uid: Wrap.DictionaryExtensions.GetValueOrNone*
  name: GetValueOrNone
  href: api/Wrap.DictionaryExtensions.GetValueOrNone.html
  commentId: Overload:Wrap.DictionaryExtensions.GetValueOrNone
  fullName: Wrap.DictionaryExtensions.GetValueOrNone
  nameWithType: DictionaryExtensions.GetValueOrNone
- uid: Wrap.DictionaryExtensions.GetValueOrNone``2(System.Collections.Generic.IDictionary{``0,``1},``0)
  name: GetValueOrNone<TKey, TValue>(IDictionary<TKey, TValue>, TKey)
  href: api/Wrap.DictionaryExtensions.GetValueOrNone.html#Wrap_DictionaryExtensions_GetValueOrNone__2_System_Collections_Generic_IDictionary___0___1____0_
  commentId: M:Wrap.DictionaryExtensions.GetValueOrNone``2(System.Collections.Generic.IDictionary{``0,``1},``0)
  name.vb: GetValueOrNone(Of TKey, TValue)(IDictionary(Of TKey, TValue), TKey)
  fullName: Wrap.DictionaryExtensions.GetValueOrNone<TKey, TValue>(System.Collections.Generic.IDictionary<TKey, TValue>, TKey)
  fullName.vb: Wrap.DictionaryExtensions.GetValueOrNone(Of TKey, TValue)(System.Collections.Generic.IDictionary(Of TKey, TValue), TKey)
  nameWithType: DictionaryExtensions.GetValueOrNone<TKey, TValue>(IDictionary<TKey, TValue>, TKey)
  nameWithType.vb: DictionaryExtensions.GetValueOrNone(Of TKey, TValue)(IDictionary(Of TKey, TValue), TKey)
- uid: Wrap.E
  name: E
  href: api/Wrap.E.html
  commentId: T:Wrap.E
  fullName: Wrap.E
  nameWithType: E
- uid: Wrap.E.Match*
  name: Match
  href: api/Wrap.E.Match.html
  commentId: Overload:Wrap.E.Match
  fullName: Wrap.E.Match
  nameWithType: E.Match
- uid: Wrap.E.MatchAsync*
  name: MatchAsync
  href: api/Wrap.E.MatchAsync.html
  commentId: Overload:Wrap.E.MatchAsync
  fullName: Wrap.E.MatchAsync
  nameWithType: E.MatchAsync
- uid: Wrap.E.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task},System.Func{``1,System.Threading.Tasks.Task})
  name: MatchAsync<TLeft, TRight>(Task<Either<TLeft, TRight>>, Func<TLeft, Task>, Func<TRight, Task>)
  href: api/Wrap.E.MatchAsync.html#Wrap_E_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Either___0___1___System_Func___0_System_Threading_Tasks_Task__System_Func___1_System_Threading_Tasks_Task__
  commentId: M:Wrap.E.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task},System.Func{``1,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of TLeft, TRight)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, Task), Func(Of TRight, Task))
  fullName: Wrap.E.MatchAsync<TLeft, TRight>(System.Threading.Tasks.Task<Wrap.Either<TLeft, TRight>>, System.Func<TLeft, System.Threading.Tasks.Task>, System.Func<TRight, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.E.MatchAsync(Of TLeft, TRight)(System.Threading.Tasks.Task(Of Wrap.Either(Of TLeft, TRight)), System.Func(Of TLeft, System.Threading.Tasks.Task), System.Func(Of TRight, System.Threading.Tasks.Task))
  nameWithType: E.MatchAsync<TLeft, TRight>(Task<Either<TLeft, TRight>>, Func<TLeft, Task>, Func<TRight, Task>)
  nameWithType.vb: E.MatchAsync(Of TLeft, TRight)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, Task), Func(Of TRight, Task))
- uid: Wrap.E.MatchAsync``2(Wrap.Either{``0,``1},System.Action{``0},System.Func{``1,System.Threading.Tasks.Task})
  name: MatchAsync<TLeft, TRight>(Either<TLeft, TRight>, Action<TLeft>, Func<TRight, Task>)
  href: api/Wrap.E.MatchAsync.html#Wrap_E_MatchAsync__2_Wrap_Either___0___1__System_Action___0__System_Func___1_System_Threading_Tasks_Task__
  commentId: M:Wrap.E.MatchAsync``2(Wrap.Either{``0,``1},System.Action{``0},System.Func{``1,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of TLeft, TRight)(Either(Of TLeft, TRight), Action(Of TLeft), Func(Of TRight, Task))
  fullName: Wrap.E.MatchAsync<TLeft, TRight>(Wrap.Either<TLeft, TRight>, System.Action<TLeft>, System.Func<TRight, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.E.MatchAsync(Of TLeft, TRight)(Wrap.Either(Of TLeft, TRight), System.Action(Of TLeft), System.Func(Of TRight, System.Threading.Tasks.Task))
  nameWithType: E.MatchAsync<TLeft, TRight>(Either<TLeft, TRight>, Action<TLeft>, Func<TRight, Task>)
  nameWithType.vb: E.MatchAsync(Of TLeft, TRight)(Either(Of TLeft, TRight), Action(Of TLeft), Func(Of TRight, Task))
- uid: Wrap.E.MatchAsync``2(Wrap.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task},System.Action{``1})
  name: MatchAsync<TLeft, TRight>(Either<TLeft, TRight>, Func<TLeft, Task>, Action<TRight>)
  href: api/Wrap.E.MatchAsync.html#Wrap_E_MatchAsync__2_Wrap_Either___0___1__System_Func___0_System_Threading_Tasks_Task__System_Action___1__
  commentId: M:Wrap.E.MatchAsync``2(Wrap.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task},System.Action{``1})
  name.vb: MatchAsync(Of TLeft, TRight)(Either(Of TLeft, TRight), Func(Of TLeft, Task), Action(Of TRight))
  fullName: Wrap.E.MatchAsync<TLeft, TRight>(Wrap.Either<TLeft, TRight>, System.Func<TLeft, System.Threading.Tasks.Task>, System.Action<TRight>)
  fullName.vb: Wrap.E.MatchAsync(Of TLeft, TRight)(Wrap.Either(Of TLeft, TRight), System.Func(Of TLeft, System.Threading.Tasks.Task), System.Action(Of TRight))
  nameWithType: E.MatchAsync<TLeft, TRight>(Either<TLeft, TRight>, Func<TLeft, Task>, Action<TRight>)
  nameWithType.vb: E.MatchAsync(Of TLeft, TRight)(Either(Of TLeft, TRight), Func(Of TLeft, Task), Action(Of TRight))
- uid: Wrap.E.MatchAsync``2(Wrap.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task},System.Func{``1,System.Threading.Tasks.Task})
  name: MatchAsync<TLeft, TRight>(Either<TLeft, TRight>, Func<TLeft, Task>, Func<TRight, Task>)
  href: api/Wrap.E.MatchAsync.html#Wrap_E_MatchAsync__2_Wrap_Either___0___1__System_Func___0_System_Threading_Tasks_Task__System_Func___1_System_Threading_Tasks_Task__
  commentId: M:Wrap.E.MatchAsync``2(Wrap.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task},System.Func{``1,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of TLeft, TRight)(Either(Of TLeft, TRight), Func(Of TLeft, Task), Func(Of TRight, Task))
  fullName: Wrap.E.MatchAsync<TLeft, TRight>(Wrap.Either<TLeft, TRight>, System.Func<TLeft, System.Threading.Tasks.Task>, System.Func<TRight, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.E.MatchAsync(Of TLeft, TRight)(Wrap.Either(Of TLeft, TRight), System.Func(Of TLeft, System.Threading.Tasks.Task), System.Func(Of TRight, System.Threading.Tasks.Task))
  nameWithType: E.MatchAsync<TLeft, TRight>(Either<TLeft, TRight>, Func<TLeft, Task>, Func<TRight, Task>)
  nameWithType.vb: E.MatchAsync(Of TLeft, TRight)(Either(Of TLeft, TRight), Func(Of TLeft, Task), Func(Of TRight, Task))
- uid: Wrap.E.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name: MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, Task<TReturn>>, Func<TRight, Task<TReturn>>)
  href: api/Wrap.E.MatchAsync.html#Wrap_E_MatchAsync__3_System_Threading_Tasks_Task_Wrap_Either___0___1___System_Func___0_System_Threading_Tasks_Task___2___System_Func___1_System_Threading_Tasks_Task___2___
  commentId: M:Wrap.E.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name.vb: MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, Task(Of TReturn)))
  fullName: Wrap.E.MatchAsync<TLeft, TRight, TReturn>(System.Threading.Tasks.Task<Wrap.Either<TLeft, TRight>>, System.Func<TLeft, System.Threading.Tasks.Task<TReturn>>, System.Func<TRight, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.E.MatchAsync(Of TLeft, TRight, TReturn)(System.Threading.Tasks.Task(Of Wrap.Either(Of TLeft, TRight)), System.Func(Of TLeft, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of TRight, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: E.MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, Task<TReturn>>, Func<TRight, Task<TReturn>>)
  nameWithType.vb: E.MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, Task(Of TReturn)))
- uid: Wrap.E.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,``2})
  name: MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, Task<TReturn>>, Func<TRight, TReturn>)
  href: api/Wrap.E.MatchAsync.html#Wrap_E_MatchAsync__3_System_Threading_Tasks_Task_Wrap_Either___0___1___System_Func___0_System_Threading_Tasks_Task___2___System_Func___1___2__
  commentId: M:Wrap.E.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,``2})
  name.vb: MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, TReturn))
  fullName: Wrap.E.MatchAsync<TLeft, TRight, TReturn>(System.Threading.Tasks.Task<Wrap.Either<TLeft, TRight>>, System.Func<TLeft, System.Threading.Tasks.Task<TReturn>>, System.Func<TRight, TReturn>)
  fullName.vb: Wrap.E.MatchAsync(Of TLeft, TRight, TReturn)(System.Threading.Tasks.Task(Of Wrap.Either(Of TLeft, TRight)), System.Func(Of TLeft, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of TRight, TReturn))
  nameWithType: E.MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, Task<TReturn>>, Func<TRight, TReturn>)
  nameWithType.vb: E.MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, TReturn))
- uid: Wrap.E.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,``2},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name: MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, TReturn>, Func<TRight, Task<TReturn>>)
  href: api/Wrap.E.MatchAsync.html#Wrap_E_MatchAsync__3_System_Threading_Tasks_Task_Wrap_Either___0___1___System_Func___0___2__System_Func___1_System_Threading_Tasks_Task___2___
  commentId: M:Wrap.E.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,``2},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name.vb: MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, TReturn), Func(Of TRight, Task(Of TReturn)))
  fullName: Wrap.E.MatchAsync<TLeft, TRight, TReturn>(System.Threading.Tasks.Task<Wrap.Either<TLeft, TRight>>, System.Func<TLeft, TReturn>, System.Func<TRight, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.E.MatchAsync(Of TLeft, TRight, TReturn)(System.Threading.Tasks.Task(Of Wrap.Either(Of TLeft, TRight)), System.Func(Of TLeft, TReturn), System.Func(Of TRight, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: E.MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, TReturn>, Func<TRight, Task<TReturn>>)
  nameWithType.vb: E.MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, TReturn), Func(Of TRight, Task(Of TReturn)))
- uid: Wrap.E.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,``2},System.Func{``1,``2})
  name: MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, TReturn>, Func<TRight, TReturn>)
  href: api/Wrap.E.MatchAsync.html#Wrap_E_MatchAsync__3_System_Threading_Tasks_Task_Wrap_Either___0___1___System_Func___0___2__System_Func___1___2__
  commentId: M:Wrap.E.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,``2},System.Func{``1,``2})
  name.vb: MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, TReturn), Func(Of TRight, TReturn))
  fullName: Wrap.E.MatchAsync<TLeft, TRight, TReturn>(System.Threading.Tasks.Task<Wrap.Either<TLeft, TRight>>, System.Func<TLeft, TReturn>, System.Func<TRight, TReturn>)
  fullName.vb: Wrap.E.MatchAsync(Of TLeft, TRight, TReturn)(System.Threading.Tasks.Task(Of Wrap.Either(Of TLeft, TRight)), System.Func(Of TLeft, TReturn), System.Func(Of TRight, TReturn))
  nameWithType: E.MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, TReturn>, Func<TRight, TReturn>)
  nameWithType.vb: E.MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, TReturn), Func(Of TRight, TReturn))
- uid: Wrap.E.MatchAsync``3(Wrap.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name: MatchAsync<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, Task<TReturn>>, Func<TRight, Task<TReturn>>)
  href: api/Wrap.E.MatchAsync.html#Wrap_E_MatchAsync__3_Wrap_Either___0___1__System_Func___0_System_Threading_Tasks_Task___2___System_Func___1_System_Threading_Tasks_Task___2___
  commentId: M:Wrap.E.MatchAsync``3(Wrap.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name.vb: MatchAsync(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, Task(Of TReturn)))
  fullName: Wrap.E.MatchAsync<TLeft, TRight, TReturn>(Wrap.Either<TLeft, TRight>, System.Func<TLeft, System.Threading.Tasks.Task<TReturn>>, System.Func<TRight, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.E.MatchAsync(Of TLeft, TRight, TReturn)(Wrap.Either(Of TLeft, TRight), System.Func(Of TLeft, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of TRight, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: E.MatchAsync<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, Task<TReturn>>, Func<TRight, Task<TReturn>>)
  nameWithType.vb: E.MatchAsync(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, Task(Of TReturn)))
- uid: Wrap.E.MatchAsync``3(Wrap.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,``2})
  name: MatchAsync<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, Task<TReturn>>, Func<TRight, TReturn>)
  href: api/Wrap.E.MatchAsync.html#Wrap_E_MatchAsync__3_Wrap_Either___0___1__System_Func___0_System_Threading_Tasks_Task___2___System_Func___1___2__
  commentId: M:Wrap.E.MatchAsync``3(Wrap.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,``2})
  name.vb: MatchAsync(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, TReturn))
  fullName: Wrap.E.MatchAsync<TLeft, TRight, TReturn>(Wrap.Either<TLeft, TRight>, System.Func<TLeft, System.Threading.Tasks.Task<TReturn>>, System.Func<TRight, TReturn>)
  fullName.vb: Wrap.E.MatchAsync(Of TLeft, TRight, TReturn)(Wrap.Either(Of TLeft, TRight), System.Func(Of TLeft, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of TRight, TReturn))
  nameWithType: E.MatchAsync<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, Task<TReturn>>, Func<TRight, TReturn>)
  nameWithType.vb: E.MatchAsync(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, TReturn))
- uid: Wrap.E.MatchAsync``3(Wrap.Either{``0,``1},System.Func{``0,``2},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name: MatchAsync<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, TReturn>, Func<TRight, Task<TReturn>>)
  href: api/Wrap.E.MatchAsync.html#Wrap_E_MatchAsync__3_Wrap_Either___0___1__System_Func___0___2__System_Func___1_System_Threading_Tasks_Task___2___
  commentId: M:Wrap.E.MatchAsync``3(Wrap.Either{``0,``1},System.Func{``0,``2},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name.vb: MatchAsync(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, TReturn), Func(Of TRight, Task(Of TReturn)))
  fullName: Wrap.E.MatchAsync<TLeft, TRight, TReturn>(Wrap.Either<TLeft, TRight>, System.Func<TLeft, TReturn>, System.Func<TRight, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.E.MatchAsync(Of TLeft, TRight, TReturn)(Wrap.Either(Of TLeft, TRight), System.Func(Of TLeft, TReturn), System.Func(Of TRight, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: E.MatchAsync<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, TReturn>, Func<TRight, Task<TReturn>>)
  nameWithType.vb: E.MatchAsync(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, TReturn), Func(Of TRight, Task(Of TReturn)))
- uid: Wrap.E.Match``2(Wrap.Either{``0,``1},System.Action{``0},System.Action{``1})
  name: Match<TLeft, TRight>(Either<TLeft, TRight>, Action<TLeft>, Action<TRight>)
  href: api/Wrap.E.Match.html#Wrap_E_Match__2_Wrap_Either___0___1__System_Action___0__System_Action___1__
  commentId: M:Wrap.E.Match``2(Wrap.Either{``0,``1},System.Action{``0},System.Action{``1})
  name.vb: Match(Of TLeft, TRight)(Either(Of TLeft, TRight), Action(Of TLeft), Action(Of TRight))
  fullName: Wrap.E.Match<TLeft, TRight>(Wrap.Either<TLeft, TRight>, System.Action<TLeft>, System.Action<TRight>)
  fullName.vb: Wrap.E.Match(Of TLeft, TRight)(Wrap.Either(Of TLeft, TRight), System.Action(Of TLeft), System.Action(Of TRight))
  nameWithType: E.Match<TLeft, TRight>(Either<TLeft, TRight>, Action<TLeft>, Action<TRight>)
  nameWithType.vb: E.Match(Of TLeft, TRight)(Either(Of TLeft, TRight), Action(Of TLeft), Action(Of TRight))
- uid: Wrap.E.Match``3(Wrap.Either{``0,``1},System.Func{``0,``2},System.Func{``1,``2})
  name: Match<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, TReturn>, Func<TRight, TReturn>)
  href: api/Wrap.E.Match.html#Wrap_E_Match__3_Wrap_Either___0___1__System_Func___0___2__System_Func___1___2__
  commentId: M:Wrap.E.Match``3(Wrap.Either{``0,``1},System.Func{``0,``2},System.Func{``1,``2})
  name.vb: Match(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, TReturn), Func(Of TRight, TReturn))
  fullName: Wrap.E.Match<TLeft, TRight, TReturn>(Wrap.Either<TLeft, TRight>, System.Func<TLeft, TReturn>, System.Func<TRight, TReturn>)
  fullName.vb: Wrap.E.Match(Of TLeft, TRight, TReturn)(Wrap.Either(Of TLeft, TRight), System.Func(Of TLeft, TReturn), System.Func(Of TRight, TReturn))
  nameWithType: E.Match<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, TReturn>, Func<TRight, TReturn>)
  nameWithType.vb: E.Match(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, TReturn), Func(Of TRight, TReturn))
- uid: Wrap.E.WrapLeft*
  name: WrapLeft
  href: api/Wrap.E.WrapLeft.html
  commentId: Overload:Wrap.E.WrapLeft
  fullName: Wrap.E.WrapLeft
  nameWithType: E.WrapLeft
- uid: Wrap.E.WrapLeft``2(``0)
  name: WrapLeft<TLeft, TRight>(TLeft)
  href: api/Wrap.E.WrapLeft.html#Wrap_E_WrapLeft__2___0_
  commentId: M:Wrap.E.WrapLeft``2(``0)
  name.vb: WrapLeft(Of TLeft, TRight)(TLeft)
  fullName: Wrap.E.WrapLeft<TLeft, TRight>(TLeft)
  fullName.vb: Wrap.E.WrapLeft(Of TLeft, TRight)(TLeft)
  nameWithType: E.WrapLeft<TLeft, TRight>(TLeft)
  nameWithType.vb: E.WrapLeft(Of TLeft, TRight)(TLeft)
- uid: Wrap.E.WrapRight*
  name: WrapRight
  href: api/Wrap.E.WrapRight.html
  commentId: Overload:Wrap.E.WrapRight
  fullName: Wrap.E.WrapRight
  nameWithType: E.WrapRight
- uid: Wrap.E.WrapRight``2(``1)
  name: WrapRight<TLeft, TRight>(TRight)
  href: api/Wrap.E.WrapRight.html#Wrap_E_WrapRight__2___1_
  commentId: M:Wrap.E.WrapRight``2(``1)
  name.vb: WrapRight(Of TLeft, TRight)(TRight)
  fullName: Wrap.E.WrapRight<TLeft, TRight>(TRight)
  fullName.vb: Wrap.E.WrapRight(Of TLeft, TRight)(TRight)
  nameWithType: E.WrapRight<TLeft, TRight>(TRight)
  nameWithType.vb: E.WrapRight(Of TLeft, TRight)(TRight)
- uid: Wrap.EitherExtensions
  name: EitherExtensions
  href: api/Wrap.EitherExtensions.html
  commentId: T:Wrap.EitherExtensions
  fullName: Wrap.EitherExtensions
  nameWithType: EitherExtensions
- uid: Wrap.EitherExtensions.Match*
  name: Match
  href: api/Wrap.EitherExtensions.Match.html
  commentId: Overload:Wrap.EitherExtensions.Match
  fullName: Wrap.EitherExtensions.Match
  nameWithType: EitherExtensions.Match
- uid: Wrap.EitherExtensions.MatchAsync*
  name: MatchAsync
  href: api/Wrap.EitherExtensions.MatchAsync.html
  commentId: Overload:Wrap.EitherExtensions.MatchAsync
  fullName: Wrap.EitherExtensions.MatchAsync
  nameWithType: EitherExtensions.MatchAsync
- uid: Wrap.EitherExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task},System.Func{``1,System.Threading.Tasks.Task})
  name: MatchAsync<TLeft, TRight>(Task<Either<TLeft, TRight>>, Func<TLeft, Task>, Func<TRight, Task>)
  href: api/Wrap.EitherExtensions.MatchAsync.html#Wrap_EitherExtensions_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Either___0___1___System_Func___0_System_Threading_Tasks_Task__System_Func___1_System_Threading_Tasks_Task__
  commentId: M:Wrap.EitherExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task},System.Func{``1,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of TLeft, TRight)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, Task), Func(Of TRight, Task))
  fullName: Wrap.EitherExtensions.MatchAsync<TLeft, TRight>(System.Threading.Tasks.Task<Wrap.Either<TLeft, TRight>>, System.Func<TLeft, System.Threading.Tasks.Task>, System.Func<TRight, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.EitherExtensions.MatchAsync(Of TLeft, TRight)(System.Threading.Tasks.Task(Of Wrap.Either(Of TLeft, TRight)), System.Func(Of TLeft, System.Threading.Tasks.Task), System.Func(Of TRight, System.Threading.Tasks.Task))
  nameWithType: EitherExtensions.MatchAsync<TLeft, TRight>(Task<Either<TLeft, TRight>>, Func<TLeft, Task>, Func<TRight, Task>)
  nameWithType.vb: EitherExtensions.MatchAsync(Of TLeft, TRight)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, Task), Func(Of TRight, Task))
- uid: Wrap.EitherExtensions.MatchAsync``2(Wrap.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task},System.Func{``1,System.Threading.Tasks.Task})
  name: MatchAsync<TLeft, TRight>(Either<TLeft, TRight>, Func<TLeft, Task>, Func<TRight, Task>)
  href: api/Wrap.EitherExtensions.MatchAsync.html#Wrap_EitherExtensions_MatchAsync__2_Wrap_Either___0___1__System_Func___0_System_Threading_Tasks_Task__System_Func___1_System_Threading_Tasks_Task__
  commentId: M:Wrap.EitherExtensions.MatchAsync``2(Wrap.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task},System.Func{``1,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of TLeft, TRight)(Either(Of TLeft, TRight), Func(Of TLeft, Task), Func(Of TRight, Task))
  fullName: Wrap.EitherExtensions.MatchAsync<TLeft, TRight>(Wrap.Either<TLeft, TRight>, System.Func<TLeft, System.Threading.Tasks.Task>, System.Func<TRight, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.EitherExtensions.MatchAsync(Of TLeft, TRight)(Wrap.Either(Of TLeft, TRight), System.Func(Of TLeft, System.Threading.Tasks.Task), System.Func(Of TRight, System.Threading.Tasks.Task))
  nameWithType: EitherExtensions.MatchAsync<TLeft, TRight>(Either<TLeft, TRight>, Func<TLeft, Task>, Func<TRight, Task>)
  nameWithType.vb: EitherExtensions.MatchAsync(Of TLeft, TRight)(Either(Of TLeft, TRight), Func(Of TLeft, Task), Func(Of TRight, Task))
- uid: Wrap.EitherExtensions.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name: MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, Task<TReturn>>, Func<TRight, Task<TReturn>>)
  href: api/Wrap.EitherExtensions.MatchAsync.html#Wrap_EitherExtensions_MatchAsync__3_System_Threading_Tasks_Task_Wrap_Either___0___1___System_Func___0_System_Threading_Tasks_Task___2___System_Func___1_System_Threading_Tasks_Task___2___
  commentId: M:Wrap.EitherExtensions.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name.vb: MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, Task(Of TReturn)))
  fullName: Wrap.EitherExtensions.MatchAsync<TLeft, TRight, TReturn>(System.Threading.Tasks.Task<Wrap.Either<TLeft, TRight>>, System.Func<TLeft, System.Threading.Tasks.Task<TReturn>>, System.Func<TRight, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.EitherExtensions.MatchAsync(Of TLeft, TRight, TReturn)(System.Threading.Tasks.Task(Of Wrap.Either(Of TLeft, TRight)), System.Func(Of TLeft, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of TRight, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EitherExtensions.MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, Task<TReturn>>, Func<TRight, Task<TReturn>>)
  nameWithType.vb: EitherExtensions.MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, Task(Of TReturn)))
- uid: Wrap.EitherExtensions.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,``2})
  name: MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, Task<TReturn>>, Func<TRight, TReturn>)
  href: api/Wrap.EitherExtensions.MatchAsync.html#Wrap_EitherExtensions_MatchAsync__3_System_Threading_Tasks_Task_Wrap_Either___0___1___System_Func___0_System_Threading_Tasks_Task___2___System_Func___1___2__
  commentId: M:Wrap.EitherExtensions.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,``2})
  name.vb: MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, TReturn))
  fullName: Wrap.EitherExtensions.MatchAsync<TLeft, TRight, TReturn>(System.Threading.Tasks.Task<Wrap.Either<TLeft, TRight>>, System.Func<TLeft, System.Threading.Tasks.Task<TReturn>>, System.Func<TRight, TReturn>)
  fullName.vb: Wrap.EitherExtensions.MatchAsync(Of TLeft, TRight, TReturn)(System.Threading.Tasks.Task(Of Wrap.Either(Of TLeft, TRight)), System.Func(Of TLeft, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of TRight, TReturn))
  nameWithType: EitherExtensions.MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, Task<TReturn>>, Func<TRight, TReturn>)
  nameWithType.vb: EitherExtensions.MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, TReturn))
- uid: Wrap.EitherExtensions.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,``2},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name: MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, TReturn>, Func<TRight, Task<TReturn>>)
  href: api/Wrap.EitherExtensions.MatchAsync.html#Wrap_EitherExtensions_MatchAsync__3_System_Threading_Tasks_Task_Wrap_Either___0___1___System_Func___0___2__System_Func___1_System_Threading_Tasks_Task___2___
  commentId: M:Wrap.EitherExtensions.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,``2},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name.vb: MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, TReturn), Func(Of TRight, Task(Of TReturn)))
  fullName: Wrap.EitherExtensions.MatchAsync<TLeft, TRight, TReturn>(System.Threading.Tasks.Task<Wrap.Either<TLeft, TRight>>, System.Func<TLeft, TReturn>, System.Func<TRight, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.EitherExtensions.MatchAsync(Of TLeft, TRight, TReturn)(System.Threading.Tasks.Task(Of Wrap.Either(Of TLeft, TRight)), System.Func(Of TLeft, TReturn), System.Func(Of TRight, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EitherExtensions.MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, TReturn>, Func<TRight, Task<TReturn>>)
  nameWithType.vb: EitherExtensions.MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, TReturn), Func(Of TRight, Task(Of TReturn)))
- uid: Wrap.EitherExtensions.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,``2},System.Func{``1,``2})
  name: MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, TReturn>, Func<TRight, TReturn>)
  href: api/Wrap.EitherExtensions.MatchAsync.html#Wrap_EitherExtensions_MatchAsync__3_System_Threading_Tasks_Task_Wrap_Either___0___1___System_Func___0___2__System_Func___1___2__
  commentId: M:Wrap.EitherExtensions.MatchAsync``3(System.Threading.Tasks.Task{Wrap.Either{``0,``1}},System.Func{``0,``2},System.Func{``1,``2})
  name.vb: MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, TReturn), Func(Of TRight, TReturn))
  fullName: Wrap.EitherExtensions.MatchAsync<TLeft, TRight, TReturn>(System.Threading.Tasks.Task<Wrap.Either<TLeft, TRight>>, System.Func<TLeft, TReturn>, System.Func<TRight, TReturn>)
  fullName.vb: Wrap.EitherExtensions.MatchAsync(Of TLeft, TRight, TReturn)(System.Threading.Tasks.Task(Of Wrap.Either(Of TLeft, TRight)), System.Func(Of TLeft, TReturn), System.Func(Of TRight, TReturn))
  nameWithType: EitherExtensions.MatchAsync<TLeft, TRight, TReturn>(Task<Either<TLeft, TRight>>, Func<TLeft, TReturn>, Func<TRight, TReturn>)
  nameWithType.vb: EitherExtensions.MatchAsync(Of TLeft, TRight, TReturn)(Task(Of Either(Of TLeft, TRight)), Func(Of TLeft, TReturn), Func(Of TRight, TReturn))
- uid: Wrap.EitherExtensions.MatchAsync``3(Wrap.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name: MatchAsync<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, Task<TReturn>>, Func<TRight, Task<TReturn>>)
  href: api/Wrap.EitherExtensions.MatchAsync.html#Wrap_EitherExtensions_MatchAsync__3_Wrap_Either___0___1__System_Func___0_System_Threading_Tasks_Task___2___System_Func___1_System_Threading_Tasks_Task___2___
  commentId: M:Wrap.EitherExtensions.MatchAsync``3(Wrap.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name.vb: MatchAsync(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, Task(Of TReturn)))
  fullName: Wrap.EitherExtensions.MatchAsync<TLeft, TRight, TReturn>(Wrap.Either<TLeft, TRight>, System.Func<TLeft, System.Threading.Tasks.Task<TReturn>>, System.Func<TRight, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.EitherExtensions.MatchAsync(Of TLeft, TRight, TReturn)(Wrap.Either(Of TLeft, TRight), System.Func(Of TLeft, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of TRight, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EitherExtensions.MatchAsync<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, Task<TReturn>>, Func<TRight, Task<TReturn>>)
  nameWithType.vb: EitherExtensions.MatchAsync(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, Task(Of TReturn)))
- uid: Wrap.EitherExtensions.MatchAsync``3(Wrap.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,``2})
  name: MatchAsync<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, Task<TReturn>>, Func<TRight, TReturn>)
  href: api/Wrap.EitherExtensions.MatchAsync.html#Wrap_EitherExtensions_MatchAsync__3_Wrap_Either___0___1__System_Func___0_System_Threading_Tasks_Task___2___System_Func___1___2__
  commentId: M:Wrap.EitherExtensions.MatchAsync``3(Wrap.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Func{``1,``2})
  name.vb: MatchAsync(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, TReturn))
  fullName: Wrap.EitherExtensions.MatchAsync<TLeft, TRight, TReturn>(Wrap.Either<TLeft, TRight>, System.Func<TLeft, System.Threading.Tasks.Task<TReturn>>, System.Func<TRight, TReturn>)
  fullName.vb: Wrap.EitherExtensions.MatchAsync(Of TLeft, TRight, TReturn)(Wrap.Either(Of TLeft, TRight), System.Func(Of TLeft, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of TRight, TReturn))
  nameWithType: EitherExtensions.MatchAsync<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, Task<TReturn>>, Func<TRight, TReturn>)
  nameWithType.vb: EitherExtensions.MatchAsync(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, Task(Of TReturn)), Func(Of TRight, TReturn))
- uid: Wrap.EitherExtensions.MatchAsync``3(Wrap.Either{``0,``1},System.Func{``0,``2},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name: MatchAsync<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, TReturn>, Func<TRight, Task<TReturn>>)
  href: api/Wrap.EitherExtensions.MatchAsync.html#Wrap_EitherExtensions_MatchAsync__3_Wrap_Either___0___1__System_Func___0___2__System_Func___1_System_Threading_Tasks_Task___2___
  commentId: M:Wrap.EitherExtensions.MatchAsync``3(Wrap.Either{``0,``1},System.Func{``0,``2},System.Func{``1,System.Threading.Tasks.Task{``2}})
  name.vb: MatchAsync(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, TReturn), Func(Of TRight, Task(Of TReturn)))
  fullName: Wrap.EitherExtensions.MatchAsync<TLeft, TRight, TReturn>(Wrap.Either<TLeft, TRight>, System.Func<TLeft, TReturn>, System.Func<TRight, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.EitherExtensions.MatchAsync(Of TLeft, TRight, TReturn)(Wrap.Either(Of TLeft, TRight), System.Func(Of TLeft, TReturn), System.Func(Of TRight, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EitherExtensions.MatchAsync<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, TReturn>, Func<TRight, Task<TReturn>>)
  nameWithType.vb: EitherExtensions.MatchAsync(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, TReturn), Func(Of TRight, Task(Of TReturn)))
- uid: Wrap.EitherExtensions.Match``2(Wrap.Either{``0,``1},System.Action{``0},System.Action{``1})
  name: Match<TLeft, TRight>(Either<TLeft, TRight>, Action<TLeft>, Action<TRight>)
  href: api/Wrap.EitherExtensions.Match.html#Wrap_EitherExtensions_Match__2_Wrap_Either___0___1__System_Action___0__System_Action___1__
  commentId: M:Wrap.EitherExtensions.Match``2(Wrap.Either{``0,``1},System.Action{``0},System.Action{``1})
  name.vb: Match(Of TLeft, TRight)(Either(Of TLeft, TRight), Action(Of TLeft), Action(Of TRight))
  fullName: Wrap.EitherExtensions.Match<TLeft, TRight>(Wrap.Either<TLeft, TRight>, System.Action<TLeft>, System.Action<TRight>)
  fullName.vb: Wrap.EitherExtensions.Match(Of TLeft, TRight)(Wrap.Either(Of TLeft, TRight), System.Action(Of TLeft), System.Action(Of TRight))
  nameWithType: EitherExtensions.Match<TLeft, TRight>(Either<TLeft, TRight>, Action<TLeft>, Action<TRight>)
  nameWithType.vb: EitherExtensions.Match(Of TLeft, TRight)(Either(Of TLeft, TRight), Action(Of TLeft), Action(Of TRight))
- uid: Wrap.EitherExtensions.Match``3(Wrap.Either{``0,``1},System.Func{``0,``2},System.Func{``1,``2})
  name: Match<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, TReturn>, Func<TRight, TReturn>)
  href: api/Wrap.EitherExtensions.Match.html#Wrap_EitherExtensions_Match__3_Wrap_Either___0___1__System_Func___0___2__System_Func___1___2__
  commentId: M:Wrap.EitherExtensions.Match``3(Wrap.Either{``0,``1},System.Func{``0,``2},System.Func{``1,``2})
  name.vb: Match(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, TReturn), Func(Of TRight, TReturn))
  fullName: Wrap.EitherExtensions.Match<TLeft, TRight, TReturn>(Wrap.Either<TLeft, TRight>, System.Func<TLeft, TReturn>, System.Func<TRight, TReturn>)
  fullName.vb: Wrap.EitherExtensions.Match(Of TLeft, TRight, TReturn)(Wrap.Either(Of TLeft, TRight), System.Func(Of TLeft, TReturn), System.Func(Of TRight, TReturn))
  nameWithType: EitherExtensions.Match<TLeft, TRight, TReturn>(Either<TLeft, TRight>, Func<TLeft, TReturn>, Func<TRight, TReturn>)
  nameWithType.vb: EitherExtensions.Match(Of TLeft, TRight, TReturn)(Either(Of TLeft, TRight), Func(Of TLeft, TReturn), Func(Of TRight, TReturn))
- uid: Wrap.Either`2
  name: Either<TLeft, TRight>
  href: api/Wrap.Either-2.html
  commentId: T:Wrap.Either`2
  name.vb: Either(Of TLeft, TRight)
  fullName: Wrap.Either<TLeft, TRight>
  fullName.vb: Wrap.Either(Of TLeft, TRight)
  nameWithType: Either<TLeft, TRight>
  nameWithType.vb: Either(Of TLeft, TRight)
- uid: Wrap.Either`2.#ctor
  name: Either()
  href: api/Wrap.Either-2.-ctor.html#Wrap_Either_2__ctor
  commentId: M:Wrap.Either`2.#ctor
  name.vb: New()
  fullName: Wrap.Either<TLeft, TRight>.Either()
  fullName.vb: Wrap.Either(Of TLeft, TRight).New()
  nameWithType: Either<TLeft, TRight>.Either()
  nameWithType.vb: Either(Of TLeft, TRight).New()
- uid: Wrap.Either`2.#ctor(Wrap.Either{`0,`1})
  name: Either(Either<TLeft, TRight>)
  href: api/Wrap.Either-2.-ctor.html#Wrap_Either_2__ctor_Wrap_Either__0__1__
  commentId: M:Wrap.Either`2.#ctor(Wrap.Either{`0,`1})
  name.vb: New(Either(Of TLeft, TRight))
  fullName: Wrap.Either<TLeft, TRight>.Either(Wrap.Either<TLeft, TRight>)
  fullName.vb: Wrap.Either(Of TLeft, TRight).New(Wrap.Either(Of TLeft, TRight))
  nameWithType: Either<TLeft, TRight>.Either(Either<TLeft, TRight>)
  nameWithType.vb: Either(Of TLeft, TRight).New(Either(Of TLeft, TRight))
- uid: Wrap.Either`2.#ctor*
  name: Either
  href: api/Wrap.Either-2.-ctor.html
  commentId: Overload:Wrap.Either`2.#ctor
  name.vb: New
  fullName: Wrap.Either<TLeft, TRight>.Either
  fullName.vb: Wrap.Either(Of TLeft, TRight).New
  nameWithType: Either<TLeft, TRight>.Either
  nameWithType.vb: Either(Of TLeft, TRight).New
- uid: Wrap.Either`2.AsTask
  name: AsTask()
  href: api/Wrap.Either-2.AsTask.html#Wrap_Either_2_AsTask
  commentId: M:Wrap.Either`2.AsTask
  fullName: Wrap.Either<TLeft, TRight>.AsTask()
  fullName.vb: Wrap.Either(Of TLeft, TRight).AsTask()
  nameWithType: Either<TLeft, TRight>.AsTask()
  nameWithType.vb: Either(Of TLeft, TRight).AsTask()
- uid: Wrap.Either`2.AsTask*
  name: AsTask
  href: api/Wrap.Either-2.AsTask.html
  commentId: Overload:Wrap.Either`2.AsTask
  fullName: Wrap.Either<TLeft, TRight>.AsTask
  fullName.vb: Wrap.Either(Of TLeft, TRight).AsTask
  nameWithType: Either<TLeft, TRight>.AsTask
  nameWithType.vb: Either(Of TLeft, TRight).AsTask
- uid: Wrap.Either`2.EqualityContract
  name: EqualityContract
  href: api/Wrap.Either-2.EqualityContract.html#Wrap_Either_2_EqualityContract
  commentId: P:Wrap.Either`2.EqualityContract
  fullName: Wrap.Either<TLeft, TRight>.EqualityContract
  fullName.vb: Wrap.Either(Of TLeft, TRight).EqualityContract
  nameWithType: Either<TLeft, TRight>.EqualityContract
  nameWithType.vb: Either(Of TLeft, TRight).EqualityContract
- uid: Wrap.Either`2.EqualityContract*
  name: EqualityContract
  href: api/Wrap.Either-2.EqualityContract.html
  commentId: Overload:Wrap.Either`2.EqualityContract
  fullName: Wrap.Either<TLeft, TRight>.EqualityContract
  fullName.vb: Wrap.Either(Of TLeft, TRight).EqualityContract
  nameWithType: Either<TLeft, TRight>.EqualityContract
  nameWithType.vb: Either(Of TLeft, TRight).EqualityContract
- uid: Wrap.Either`2.Equals(System.Object)
  name: Equals(object?)
  href: api/Wrap.Either-2.Equals.html#Wrap_Either_2_Equals_System_Object_
  commentId: M:Wrap.Either`2.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.Either<TLeft, TRight>.Equals(object?)
  fullName.vb: Wrap.Either(Of TLeft, TRight).Equals(Object)
  nameWithType: Either<TLeft, TRight>.Equals(object?)
  nameWithType.vb: Either(Of TLeft, TRight).Equals(Object)
- uid: Wrap.Either`2.Equals(Wrap.Either{`0,`1})
  name: Equals(Either<TLeft, TRight>?)
  href: api/Wrap.Either-2.Equals.html#Wrap_Either_2_Equals_Wrap_Either__0__1__
  commentId: M:Wrap.Either`2.Equals(Wrap.Either{`0,`1})
  name.vb: Equals(Either(Of TLeft, TRight))
  fullName: Wrap.Either<TLeft, TRight>.Equals(Wrap.Either<TLeft, TRight>?)
  fullName.vb: Wrap.Either(Of TLeft, TRight).Equals(Wrap.Either(Of TLeft, TRight))
  nameWithType: Either<TLeft, TRight>.Equals(Either<TLeft, TRight>?)
  nameWithType.vb: Either(Of TLeft, TRight).Equals(Either(Of TLeft, TRight))
- uid: Wrap.Either`2.Equals*
  name: Equals
  href: api/Wrap.Either-2.Equals.html
  commentId: Overload:Wrap.Either`2.Equals
  fullName: Wrap.Either<TLeft, TRight>.Equals
  fullName.vb: Wrap.Either(Of TLeft, TRight).Equals
  nameWithType: Either<TLeft, TRight>.Equals
  nameWithType.vb: Either(Of TLeft, TRight).Equals
- uid: Wrap.Either`2.GetEnumerator
  name: GetEnumerator()
  href: api/Wrap.Either-2.GetEnumerator.html#Wrap_Either_2_GetEnumerator
  commentId: M:Wrap.Either`2.GetEnumerator
  fullName: Wrap.Either<TLeft, TRight>.GetEnumerator()
  fullName.vb: Wrap.Either(Of TLeft, TRight).GetEnumerator()
  nameWithType: Either<TLeft, TRight>.GetEnumerator()
  nameWithType.vb: Either(Of TLeft, TRight).GetEnumerator()
- uid: Wrap.Either`2.GetEnumerator*
  name: GetEnumerator
  href: api/Wrap.Either-2.GetEnumerator.html
  commentId: Overload:Wrap.Either`2.GetEnumerator
  fullName: Wrap.Either<TLeft, TRight>.GetEnumerator
  fullName.vb: Wrap.Either(Of TLeft, TRight).GetEnumerator
  nameWithType: Either<TLeft, TRight>.GetEnumerator
  nameWithType.vb: Either(Of TLeft, TRight).GetEnumerator
- uid: Wrap.Either`2.GetHashCode
  name: GetHashCode()
  href: api/Wrap.Either-2.GetHashCode.html#Wrap_Either_2_GetHashCode
  commentId: M:Wrap.Either`2.GetHashCode
  fullName: Wrap.Either<TLeft, TRight>.GetHashCode()
  fullName.vb: Wrap.Either(Of TLeft, TRight).GetHashCode()
  nameWithType: Either<TLeft, TRight>.GetHashCode()
  nameWithType.vb: Either(Of TLeft, TRight).GetHashCode()
- uid: Wrap.Either`2.GetHashCode*
  name: GetHashCode
  href: api/Wrap.Either-2.GetHashCode.html
  commentId: Overload:Wrap.Either`2.GetHashCode
  fullName: Wrap.Either<TLeft, TRight>.GetHashCode
  fullName.vb: Wrap.Either(Of TLeft, TRight).GetHashCode
  nameWithType: Either<TLeft, TRight>.GetHashCode
  nameWithType.vb: Either(Of TLeft, TRight).GetHashCode
- uid: Wrap.Either`2.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Wrap.Either-2.PrintMembers.html#Wrap_Either_2_PrintMembers_System_Text_StringBuilder_
  commentId: M:Wrap.Either`2.PrintMembers(System.Text.StringBuilder)
  fullName: Wrap.Either<TLeft, TRight>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Wrap.Either(Of TLeft, TRight).PrintMembers(System.Text.StringBuilder)
  nameWithType: Either<TLeft, TRight>.PrintMembers(StringBuilder)
  nameWithType.vb: Either(Of TLeft, TRight).PrintMembers(StringBuilder)
- uid: Wrap.Either`2.PrintMembers*
  name: PrintMembers
  href: api/Wrap.Either-2.PrintMembers.html
  commentId: Overload:Wrap.Either`2.PrintMembers
  fullName: Wrap.Either<TLeft, TRight>.PrintMembers
  fullName.vb: Wrap.Either(Of TLeft, TRight).PrintMembers
  nameWithType: Either<TLeft, TRight>.PrintMembers
  nameWithType.vb: Either(Of TLeft, TRight).PrintMembers
- uid: Wrap.Either`2.ToString
  name: ToString()
  href: api/Wrap.Either-2.ToString.html#Wrap_Either_2_ToString
  commentId: M:Wrap.Either`2.ToString
  fullName: Wrap.Either<TLeft, TRight>.ToString()
  fullName.vb: Wrap.Either(Of TLeft, TRight).ToString()
  nameWithType: Either<TLeft, TRight>.ToString()
  nameWithType.vb: Either(Of TLeft, TRight).ToString()
- uid: Wrap.Either`2.ToString*
  name: ToString
  href: api/Wrap.Either-2.ToString.html
  commentId: Overload:Wrap.Either`2.ToString
  fullName: Wrap.Either<TLeft, TRight>.ToString
  fullName.vb: Wrap.Either(Of TLeft, TRight).ToString
  nameWithType: Either<TLeft, TRight>.ToString
  nameWithType.vb: Either(Of TLeft, TRight).ToString
- uid: Wrap.Either`2.op_Equality(Wrap.Either{`0,`1},Wrap.Either{`0,`1})
  name: operator ==(Either<TLeft, TRight>?, Either<TLeft, TRight>?)
  href: api/Wrap.Either-2.op_Equality.html#Wrap_Either_2_op_Equality_Wrap_Either__0__1__Wrap_Either__0__1__
  commentId: M:Wrap.Either`2.op_Equality(Wrap.Either{`0,`1},Wrap.Either{`0,`1})
  name.vb: =(Either(Of TLeft, TRight), Either(Of TLeft, TRight))
  fullName: Wrap.Either<TLeft, TRight>.operator ==(Wrap.Either<TLeft, TRight>?, Wrap.Either<TLeft, TRight>?)
  fullName.vb: Wrap.Either(Of TLeft, TRight).=(Wrap.Either(Of TLeft, TRight), Wrap.Either(Of TLeft, TRight))
  nameWithType: Either<TLeft, TRight>.operator ==(Either<TLeft, TRight>?, Either<TLeft, TRight>?)
  nameWithType.vb: Either(Of TLeft, TRight).=(Either(Of TLeft, TRight), Either(Of TLeft, TRight))
- uid: Wrap.Either`2.op_Equality*
  name: operator ==
  href: api/Wrap.Either-2.op_Equality.html
  commentId: Overload:Wrap.Either`2.op_Equality
  name.vb: =
  fullName: Wrap.Either<TLeft, TRight>.operator ==
  fullName.vb: Wrap.Either(Of TLeft, TRight).=
  nameWithType: Either<TLeft, TRight>.operator ==
  nameWithType.vb: Either(Of TLeft, TRight).=
- uid: Wrap.Either`2.op_Inequality(Wrap.Either{`0,`1},Wrap.Either{`0,`1})
  name: operator !=(Either<TLeft, TRight>?, Either<TLeft, TRight>?)
  href: api/Wrap.Either-2.op_Inequality.html#Wrap_Either_2_op_Inequality_Wrap_Either__0__1__Wrap_Either__0__1__
  commentId: M:Wrap.Either`2.op_Inequality(Wrap.Either{`0,`1},Wrap.Either{`0,`1})
  name.vb: <>(Either(Of TLeft, TRight), Either(Of TLeft, TRight))
  fullName: Wrap.Either<TLeft, TRight>.operator !=(Wrap.Either<TLeft, TRight>?, Wrap.Either<TLeft, TRight>?)
  fullName.vb: Wrap.Either(Of TLeft, TRight).<>(Wrap.Either(Of TLeft, TRight), Wrap.Either(Of TLeft, TRight))
  nameWithType: Either<TLeft, TRight>.operator !=(Either<TLeft, TRight>?, Either<TLeft, TRight>?)
  nameWithType.vb: Either(Of TLeft, TRight).<>(Either(Of TLeft, TRight), Either(Of TLeft, TRight))
- uid: Wrap.Either`2.op_Inequality*
  name: operator !=
  href: api/Wrap.Either-2.op_Inequality.html
  commentId: Overload:Wrap.Either`2.op_Inequality
  name.vb: <>
  fullName: Wrap.Either<TLeft, TRight>.operator !=
  fullName.vb: Wrap.Either(Of TLeft, TRight).<>
  nameWithType: Either<TLeft, TRight>.operator !=
  nameWithType.vb: Either(Of TLeft, TRight).<>
- uid: Wrap.EnumerableExtensions
  name: EnumerableExtensions
  href: api/Wrap.EnumerableExtensions.html
  commentId: T:Wrap.EnumerableExtensions
  fullName: Wrap.EnumerableExtensions
  nameWithType: EnumerableExtensions
- uid: Wrap.EnumerableExtensions.Bind*
  name: Bind
  href: api/Wrap.EnumerableExtensions.Bind.html
  commentId: Overload:Wrap.EnumerableExtensions.Bind
  fullName: Wrap.EnumerableExtensions.Bind
  nameWithType: EnumerableExtensions.Bind
- uid: Wrap.EnumerableExtensions.BindAsync*
  name: BindAsync
  href: api/Wrap.EnumerableExtensions.BindAsync.html
  commentId: Overload:Wrap.EnumerableExtensions.BindAsync
  fullName: Wrap.EnumerableExtensions.BindAsync
  nameWithType: EnumerableExtensions.BindAsync
- uid: Wrap.EnumerableExtensions.BindAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name: BindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Wrap.EnumerableExtensions.BindAsync.html#Wrap_EnumerableExtensions_BindAsync__2_System_Collections_Generic_IAsyncEnumerable_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_Wrap_Maybe___1____
  commentId: M:Wrap.EnumerableExtensions.BindAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name.vb: BindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Wrap.EnumerableExtensions.BindAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<Wrap.Maybe<TReturn>>>)
  fullName.vb: Wrap.EnumerableExtensions.BindAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Wrap.Maybe(Of TReturn))))
  nameWithType: EnumerableExtensions.BindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: EnumerableExtensions.BindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Wrap.EnumerableExtensions.BindAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,Wrap.Maybe{``1}})
  name: BindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Maybe<TReturn>>)
  href: api/Wrap.EnumerableExtensions.BindAsync.html#Wrap_EnumerableExtensions_BindAsync__2_System_Collections_Generic_IAsyncEnumerable_Wrap_Maybe___0___System_Func___0_Wrap_Maybe___1___
  commentId: M:Wrap.EnumerableExtensions.BindAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,Wrap.Maybe{``1}})
  name.vb: BindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Maybe(Of TReturn)))
  fullName: Wrap.EnumerableExtensions.BindAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Wrap.Maybe<T>>, System.Func<T, Wrap.Maybe<TReturn>>)
  fullName.vb: Wrap.EnumerableExtensions.BindAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, Wrap.Maybe(Of TReturn)))
  nameWithType: EnumerableExtensions.BindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Maybe<TReturn>>)
  nameWithType.vb: EnumerableExtensions.BindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Maybe(Of TReturn)))
- uid: Wrap.EnumerableExtensions.BindAsync``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name: BindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Wrap.EnumerableExtensions.BindAsync.html#Wrap_EnumerableExtensions_BindAsync__2_System_Collections_Generic_IEnumerable_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_Wrap_Maybe___1____
  commentId: M:Wrap.EnumerableExtensions.BindAsync``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name.vb: BindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Wrap.EnumerableExtensions.BindAsync<T, TReturn>(System.Collections.Generic.IEnumerable<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<Wrap.Maybe<TReturn>>>)
  fullName.vb: Wrap.EnumerableExtensions.BindAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Wrap.Maybe(Of TReturn))))
  nameWithType: EnumerableExtensions.BindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: EnumerableExtensions.BindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Wrap.EnumerableExtensions.Bind``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,Wrap.Maybe{``1}})
  name: Bind<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Maybe<TReturn>>)
  href: api/Wrap.EnumerableExtensions.Bind.html#Wrap_EnumerableExtensions_Bind__2_System_Collections_Generic_IEnumerable_Wrap_Maybe___0___System_Func___0_Wrap_Maybe___1___
  commentId: M:Wrap.EnumerableExtensions.Bind``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,Wrap.Maybe{``1}})
  name.vb: Bind(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Maybe(Of TReturn)))
  fullName: Wrap.EnumerableExtensions.Bind<T, TReturn>(System.Collections.Generic.IEnumerable<Wrap.Maybe<T>>, System.Func<T, Wrap.Maybe<TReturn>>)
  fullName.vb: Wrap.EnumerableExtensions.Bind(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, Wrap.Maybe(Of TReturn)))
  nameWithType: EnumerableExtensions.Bind<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Maybe<TReturn>>)
  nameWithType.vb: EnumerableExtensions.Bind(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Maybe(Of TReturn)))
- uid: Wrap.EnumerableExtensions.ElementAtOrNone*
  name: ElementAtOrNone
  href: api/Wrap.EnumerableExtensions.ElementAtOrNone.html
  commentId: Overload:Wrap.EnumerableExtensions.ElementAtOrNone
  fullName: Wrap.EnumerableExtensions.ElementAtOrNone
  nameWithType: EnumerableExtensions.ElementAtOrNone
- uid: Wrap.EnumerableExtensions.ElementAtOrNone``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: ElementAtOrNone<T>(IEnumerable<T>, int)
  href: api/Wrap.EnumerableExtensions.ElementAtOrNone.html#Wrap_EnumerableExtensions_ElementAtOrNone__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  commentId: M:Wrap.EnumerableExtensions.ElementAtOrNone``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name.vb: ElementAtOrNone(Of T)(IEnumerable(Of T), Integer)
  fullName: Wrap.EnumerableExtensions.ElementAtOrNone<T>(System.Collections.Generic.IEnumerable<T>, int)
  fullName.vb: Wrap.EnumerableExtensions.ElementAtOrNone(Of T)(System.Collections.Generic.IEnumerable(Of T), Integer)
  nameWithType: EnumerableExtensions.ElementAtOrNone<T>(IEnumerable<T>, int)
  nameWithType.vb: EnumerableExtensions.ElementAtOrNone(Of T)(IEnumerable(Of T), Integer)
- uid: Wrap.EnumerableExtensions.Filter*
  name: Filter
  href: api/Wrap.EnumerableExtensions.Filter.html
  commentId: Overload:Wrap.EnumerableExtensions.Filter
  fullName: Wrap.EnumerableExtensions.Filter
  nameWithType: EnumerableExtensions.Filter
- uid: Wrap.EnumerableExtensions.FilterAsync*
  name: FilterAsync
  href: api/Wrap.EnumerableExtensions.FilterAsync.html
  commentId: Overload:Wrap.EnumerableExtensions.FilterAsync
  fullName: Wrap.EnumerableExtensions.FilterAsync
  nameWithType: EnumerableExtensions.FilterAsync
- uid: Wrap.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}})
  name: FilterAsync<T>(IAsyncEnumerable<Maybe<T>>)
  href: api/Wrap.EnumerableExtensions.FilterAsync.html#Wrap_EnumerableExtensions_FilterAsync__1_System_Collections_Generic_IAsyncEnumerable_Wrap_Maybe___0___
  commentId: M:Wrap.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}})
  name.vb: FilterAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)))
  fullName: Wrap.EnumerableExtensions.FilterAsync<T>(System.Collections.Generic.IAsyncEnumerable<Wrap.Maybe<T>>)
  fullName.vb: Wrap.EnumerableExtensions.FilterAsync(Of T)(System.Collections.Generic.IAsyncEnumerable(Of Wrap.Maybe(Of T)))
  nameWithType: EnumerableExtensions.FilterAsync<T>(IAsyncEnumerable<Maybe<T>>)
  nameWithType.vb: EnumerableExtensions.FilterAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)))
- uid: Wrap.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean})
  name: FilterAsync<T>(IAsyncEnumerable<Maybe<T>>, Func<T, bool>)
  href: api/Wrap.EnumerableExtensions.FilterAsync.html#Wrap_EnumerableExtensions_FilterAsync__1_System_Collections_Generic_IAsyncEnumerable_Wrap_Maybe___0___System_Func___0_System_Boolean__
  commentId: M:Wrap.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean})
  name.vb: FilterAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Boolean))
  fullName: Wrap.EnumerableExtensions.FilterAsync<T>(System.Collections.Generic.IAsyncEnumerable<Wrap.Maybe<T>>, System.Func<T, bool>)
  fullName.vb: Wrap.EnumerableExtensions.FilterAsync(Of T)(System.Collections.Generic.IAsyncEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, Boolean))
  nameWithType: EnumerableExtensions.FilterAsync<T>(IAsyncEnumerable<Maybe<T>>, Func<T, bool>)
  nameWithType.vb: EnumerableExtensions.FilterAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Boolean))
- uid: Wrap.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: FilterAsync<T>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>)
  href: api/Wrap.EnumerableExtensions.FilterAsync.html#Wrap_EnumerableExtensions_FilterAsync__1_System_Collections_Generic_IAsyncEnumerable_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Wrap.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: FilterAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
  fullName: Wrap.EnumerableExtensions.FilterAsync<T>(System.Collections.Generic.IAsyncEnumerable<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Wrap.EnumerableExtensions.FilterAsync(Of T)(System.Collections.Generic.IAsyncEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: EnumerableExtensions.FilterAsync<T>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>)
  nameWithType.vb: EnumerableExtensions.FilterAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
- uid: Wrap.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: FilterAsync<T>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>)
  href: api/Wrap.EnumerableExtensions.FilterAsync.html#Wrap_EnumerableExtensions_FilterAsync__1_System_Collections_Generic_IEnumerable_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Wrap.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: FilterAsync(Of T)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
  fullName: Wrap.EnumerableExtensions.FilterAsync<T>(System.Collections.Generic.IEnumerable<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Wrap.EnumerableExtensions.FilterAsync(Of T)(System.Collections.Generic.IEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: EnumerableExtensions.FilterAsync<T>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>)
  nameWithType.vb: EnumerableExtensions.FilterAsync(Of T)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
- uid: Wrap.EnumerableExtensions.FilterBind*
  name: FilterBind
  href: api/Wrap.EnumerableExtensions.FilterBind.html
  commentId: Overload:Wrap.EnumerableExtensions.FilterBind
  fullName: Wrap.EnumerableExtensions.FilterBind
  nameWithType: EnumerableExtensions.FilterBind
- uid: Wrap.EnumerableExtensions.FilterBindAsync*
  name: FilterBindAsync
  href: api/Wrap.EnumerableExtensions.FilterBindAsync.html
  commentId: Overload:Wrap.EnumerableExtensions.FilterBindAsync
  fullName: Wrap.EnumerableExtensions.FilterBindAsync
  nameWithType: EnumerableExtensions.FilterBindAsync
- uid: Wrap.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name: FilterBindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Wrap.EnumerableExtensions.FilterBindAsync.html#Wrap_EnumerableExtensions_FilterBindAsync__2_System_Collections_Generic_IAsyncEnumerable_Wrap_Maybe___0___System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task_Wrap_Maybe___1____
  commentId: M:Wrap.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name.vb: FilterBindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Wrap.EnumerableExtensions.FilterBindAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Wrap.Maybe<T>>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<Wrap.Maybe<TReturn>>>)
  fullName.vb: Wrap.EnumerableExtensions.FilterBindAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of Wrap.Maybe(Of TReturn))))
  nameWithType: EnumerableExtensions.FilterBindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: EnumerableExtensions.FilterBindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Wrap.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name: FilterBindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Wrap.EnumerableExtensions.FilterBindAsync.html#Wrap_EnumerableExtensions_FilterBindAsync__2_System_Collections_Generic_IAsyncEnumerable_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_System_Threading_Tasks_Task_Wrap_Maybe___1____
  commentId: M:Wrap.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name.vb: FilterBindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Wrap.EnumerableExtensions.FilterBindAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, System.Threading.Tasks.Task<Wrap.Maybe<TReturn>>>)
  fullName.vb: Wrap.EnumerableExtensions.FilterBindAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, System.Threading.Tasks.Task(Of Wrap.Maybe(Of TReturn))))
  nameWithType: EnumerableExtensions.FilterBindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: EnumerableExtensions.FilterBindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Wrap.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,Wrap.Maybe{``1}})
  name: FilterBindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Maybe<TReturn>>)
  href: api/Wrap.EnumerableExtensions.FilterBindAsync.html#Wrap_EnumerableExtensions_FilterBindAsync__2_System_Collections_Generic_IAsyncEnumerable_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_Wrap_Maybe___1___
  commentId: M:Wrap.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,Wrap.Maybe{``1}})
  name.vb: FilterBindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Maybe(Of TReturn)))
  fullName: Wrap.EnumerableExtensions.FilterBindAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, Wrap.Maybe<TReturn>>)
  fullName.vb: Wrap.EnumerableExtensions.FilterBindAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, Wrap.Maybe(Of TReturn)))
  nameWithType: EnumerableExtensions.FilterBindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Maybe<TReturn>>)
  nameWithType.vb: EnumerableExtensions.FilterBindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Maybe(Of TReturn)))
- uid: Wrap.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name: FilterBindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Wrap.EnumerableExtensions.FilterBindAsync.html#Wrap_EnumerableExtensions_FilterBindAsync__2_System_Collections_Generic_IEnumerable_Wrap_Maybe___0___System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task_Wrap_Maybe___1____
  commentId: M:Wrap.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name.vb: FilterBindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Wrap.EnumerableExtensions.FilterBindAsync<T, TReturn>(System.Collections.Generic.IEnumerable<Wrap.Maybe<T>>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<Wrap.Maybe<TReturn>>>)
  fullName.vb: Wrap.EnumerableExtensions.FilterBindAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of Wrap.Maybe(Of TReturn))))
  nameWithType: EnumerableExtensions.FilterBindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: EnumerableExtensions.FilterBindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Wrap.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name: FilterBindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Wrap.EnumerableExtensions.FilterBindAsync.html#Wrap_EnumerableExtensions_FilterBindAsync__2_System_Collections_Generic_IEnumerable_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_System_Threading_Tasks_Task_Wrap_Maybe___1____
  commentId: M:Wrap.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name.vb: FilterBindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Wrap.EnumerableExtensions.FilterBindAsync<T, TReturn>(System.Collections.Generic.IEnumerable<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, System.Threading.Tasks.Task<Wrap.Maybe<TReturn>>>)
  fullName.vb: Wrap.EnumerableExtensions.FilterBindAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, System.Threading.Tasks.Task(Of Wrap.Maybe(Of TReturn))))
  nameWithType: EnumerableExtensions.FilterBindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: EnumerableExtensions.FilterBindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Wrap.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,Wrap.Maybe{``1}})
  name: FilterBindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Maybe<TReturn>>)
  href: api/Wrap.EnumerableExtensions.FilterBindAsync.html#Wrap_EnumerableExtensions_FilterBindAsync__2_System_Collections_Generic_IEnumerable_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_Wrap_Maybe___1___
  commentId: M:Wrap.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,Wrap.Maybe{``1}})
  name.vb: FilterBindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Maybe(Of TReturn)))
  fullName: Wrap.EnumerableExtensions.FilterBindAsync<T, TReturn>(System.Collections.Generic.IEnumerable<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, Wrap.Maybe<TReturn>>)
  fullName.vb: Wrap.EnumerableExtensions.FilterBindAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, Wrap.Maybe(Of TReturn)))
  nameWithType: EnumerableExtensions.FilterBindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Maybe<TReturn>>)
  nameWithType.vb: EnumerableExtensions.FilterBindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Maybe(Of TReturn)))
- uid: Wrap.EnumerableExtensions.FilterBind``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,Wrap.Maybe{``1}})
  name: FilterBind<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Maybe<TReturn>>)
  href: api/Wrap.EnumerableExtensions.FilterBind.html#Wrap_EnumerableExtensions_FilterBind__2_System_Collections_Generic_IEnumerable_Wrap_Maybe___0___System_Func___0_System_Boolean__System_Func___0_Wrap_Maybe___1___
  commentId: M:Wrap.EnumerableExtensions.FilterBind``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,Wrap.Maybe{``1}})
  name.vb: FilterBind(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Maybe(Of TReturn)))
  fullName: Wrap.EnumerableExtensions.FilterBind<T, TReturn>(System.Collections.Generic.IEnumerable<Wrap.Maybe<T>>, System.Func<T, bool>, System.Func<T, Wrap.Maybe<TReturn>>)
  fullName.vb: Wrap.EnumerableExtensions.FilterBind(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, Boolean), System.Func(Of T, Wrap.Maybe(Of TReturn)))
  nameWithType: EnumerableExtensions.FilterBind<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Maybe<TReturn>>)
  nameWithType.vb: EnumerableExtensions.FilterBind(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Maybe(Of TReturn)))
- uid: Wrap.EnumerableExtensions.FilterMap*
  name: FilterMap
  href: api/Wrap.EnumerableExtensions.FilterMap.html
  commentId: Overload:Wrap.EnumerableExtensions.FilterMap
  fullName: Wrap.EnumerableExtensions.FilterMap
  nameWithType: EnumerableExtensions.FilterMap
- uid: Wrap.EnumerableExtensions.FilterMapAsync*
  name: FilterMapAsync
  href: api/Wrap.EnumerableExtensions.FilterMapAsync.html
  commentId: Overload:Wrap.EnumerableExtensions.FilterMapAsync
  fullName: Wrap.EnumerableExtensions.FilterMapAsync
  nameWithType: EnumerableExtensions.FilterMapAsync
- uid: Wrap.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: FilterMapAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<TReturn>>)
  href: api/Wrap.EnumerableExtensions.FilterMapAsync.html#Wrap_EnumerableExtensions_FilterMapAsync__2_System_Collections_Generic_IAsyncEnumerable_Wrap_Maybe___0___System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: FilterMapAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.EnumerableExtensions.FilterMapAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Wrap.Maybe<T>>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.EnumerableExtensions.FilterMapAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EnumerableExtensions.FilterMapAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<TReturn>>)
  nameWithType.vb: EnumerableExtensions.FilterMapAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)))
- uid: Wrap.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: FilterMapAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>)
  href: api/Wrap.EnumerableExtensions.FilterMapAsync.html#Wrap_EnumerableExtensions_FilterMapAsync__2_System_Collections_Generic_IAsyncEnumerable_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: FilterMapAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.EnumerableExtensions.FilterMapAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.EnumerableExtensions.FilterMapAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EnumerableExtensions.FilterMapAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>)
  nameWithType.vb: EnumerableExtensions.FilterMapAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1})
  name: FilterMapAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, TReturn>)
  href: api/Wrap.EnumerableExtensions.FilterMapAsync.html#Wrap_EnumerableExtensions_FilterMapAsync__2_System_Collections_Generic_IAsyncEnumerable_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0___1__
  commentId: M:Wrap.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1})
  name.vb: FilterMapAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn))
  fullName: Wrap.EnumerableExtensions.FilterMapAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.EnumerableExtensions.FilterMapAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, TReturn))
  nameWithType: EnumerableExtensions.FilterMapAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, TReturn>)
  nameWithType.vb: EnumerableExtensions.FilterMapAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn))
- uid: Wrap.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: FilterMapAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<TReturn>>)
  href: api/Wrap.EnumerableExtensions.FilterMapAsync.html#Wrap_EnumerableExtensions_FilterMapAsync__2_System_Collections_Generic_IEnumerable_Wrap_Maybe___0___System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: FilterMapAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.EnumerableExtensions.FilterMapAsync<T, TReturn>(System.Collections.Generic.IEnumerable<Wrap.Maybe<T>>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.EnumerableExtensions.FilterMapAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EnumerableExtensions.FilterMapAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<TReturn>>)
  nameWithType.vb: EnumerableExtensions.FilterMapAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)))
- uid: Wrap.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: FilterMapAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>)
  href: api/Wrap.EnumerableExtensions.FilterMapAsync.html#Wrap_EnumerableExtensions_FilterMapAsync__2_System_Collections_Generic_IEnumerable_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: FilterMapAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.EnumerableExtensions.FilterMapAsync<T, TReturn>(System.Collections.Generic.IEnumerable<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.EnumerableExtensions.FilterMapAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EnumerableExtensions.FilterMapAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>)
  nameWithType.vb: EnumerableExtensions.FilterMapAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1})
  name: FilterMapAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, TReturn>)
  href: api/Wrap.EnumerableExtensions.FilterMapAsync.html#Wrap_EnumerableExtensions_FilterMapAsync__2_System_Collections_Generic_IEnumerable_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0___1__
  commentId: M:Wrap.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1})
  name.vb: FilterMapAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn))
  fullName: Wrap.EnumerableExtensions.FilterMapAsync<T, TReturn>(System.Collections.Generic.IEnumerable<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.EnumerableExtensions.FilterMapAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, TReturn))
  nameWithType: EnumerableExtensions.FilterMapAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, TReturn>)
  nameWithType.vb: EnumerableExtensions.FilterMapAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn))
- uid: Wrap.EnumerableExtensions.FilterMap``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,``1})
  name: FilterMap<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, TReturn>)
  href: api/Wrap.EnumerableExtensions.FilterMap.html#Wrap_EnumerableExtensions_FilterMap__2_System_Collections_Generic_IEnumerable_Wrap_Maybe___0___System_Func___0_System_Boolean__System_Func___0___1__
  commentId: M:Wrap.EnumerableExtensions.FilterMap``2(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,``1})
  name.vb: FilterMap(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, TReturn))
  fullName: Wrap.EnumerableExtensions.FilterMap<T, TReturn>(System.Collections.Generic.IEnumerable<Wrap.Maybe<T>>, System.Func<T, bool>, System.Func<T, TReturn>)
  fullName.vb: Wrap.EnumerableExtensions.FilterMap(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, Boolean), System.Func(Of T, TReturn))
  nameWithType: EnumerableExtensions.FilterMap<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, TReturn>)
  nameWithType.vb: EnumerableExtensions.FilterMap(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, TReturn))
- uid: Wrap.EnumerableExtensions.Filter``1(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}})
  name: Filter<T>(IEnumerable<Maybe<T>>)
  href: api/Wrap.EnumerableExtensions.Filter.html#Wrap_EnumerableExtensions_Filter__1_System_Collections_Generic_IEnumerable_Wrap_Maybe___0___
  commentId: M:Wrap.EnumerableExtensions.Filter``1(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}})
  name.vb: Filter(Of T)(IEnumerable(Of Maybe(Of T)))
  fullName: Wrap.EnumerableExtensions.Filter<T>(System.Collections.Generic.IEnumerable<Wrap.Maybe<T>>)
  fullName.vb: Wrap.EnumerableExtensions.Filter(Of T)(System.Collections.Generic.IEnumerable(Of Wrap.Maybe(Of T)))
  nameWithType: EnumerableExtensions.Filter<T>(IEnumerable<Maybe<T>>)
  nameWithType.vb: EnumerableExtensions.Filter(Of T)(IEnumerable(Of Maybe(Of T)))
- uid: Wrap.EnumerableExtensions.Filter``1(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean})
  name: Filter<T>(IEnumerable<Maybe<T>>, Func<T, bool>)
  href: api/Wrap.EnumerableExtensions.Filter.html#Wrap_EnumerableExtensions_Filter__1_System_Collections_Generic_IEnumerable_Wrap_Maybe___0___System_Func___0_System_Boolean__
  commentId: M:Wrap.EnumerableExtensions.Filter``1(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Boolean})
  name.vb: Filter(Of T)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean))
  fullName: Wrap.EnumerableExtensions.Filter<T>(System.Collections.Generic.IEnumerable<Wrap.Maybe<T>>, System.Func<T, bool>)
  fullName.vb: Wrap.EnumerableExtensions.Filter(Of T)(System.Collections.Generic.IEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, Boolean))
  nameWithType: EnumerableExtensions.Filter<T>(IEnumerable<Maybe<T>>, Func<T, bool>)
  nameWithType.vb: EnumerableExtensions.Filter(Of T)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean))
- uid: Wrap.EnumerableExtensions.FirstOrNone*
  name: FirstOrNone
  href: api/Wrap.EnumerableExtensions.FirstOrNone.html
  commentId: Overload:Wrap.EnumerableExtensions.FirstOrNone
  fullName: Wrap.EnumerableExtensions.FirstOrNone
  nameWithType: EnumerableExtensions.FirstOrNone
- uid: Wrap.EnumerableExtensions.FirstOrNone``1(System.Collections.Generic.IEnumerable{``0})
  name: FirstOrNone<T>(IEnumerable<T>)
  href: api/Wrap.EnumerableExtensions.FirstOrNone.html#Wrap_EnumerableExtensions_FirstOrNone__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Wrap.EnumerableExtensions.FirstOrNone``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: FirstOrNone(Of T)(IEnumerable(Of T))
  fullName: Wrap.EnumerableExtensions.FirstOrNone<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wrap.EnumerableExtensions.FirstOrNone(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: EnumerableExtensions.FirstOrNone<T>(IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.FirstOrNone(Of T)(IEnumerable(Of T))
- uid: Wrap.EnumerableExtensions.Iterate*
  name: Iterate
  href: api/Wrap.EnumerableExtensions.Iterate.html
  commentId: Overload:Wrap.EnumerableExtensions.Iterate
  fullName: Wrap.EnumerableExtensions.Iterate
  nameWithType: EnumerableExtensions.Iterate
- uid: Wrap.EnumerableExtensions.IterateAsync*
  name: IterateAsync
  href: api/Wrap.EnumerableExtensions.IterateAsync.html
  commentId: Overload:Wrap.EnumerableExtensions.IterateAsync
  fullName: Wrap.EnumerableExtensions.IterateAsync
  nameWithType: EnumerableExtensions.IterateAsync
- uid: Wrap.EnumerableExtensions.IterateAsync``1(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Action{``0})
  name: IterateAsync<T>(IAsyncEnumerable<Maybe<T>>, Action<T>)
  href: api/Wrap.EnumerableExtensions.IterateAsync.html#Wrap_EnumerableExtensions_IterateAsync__1_System_Collections_Generic_IAsyncEnumerable_Wrap_Maybe___0___System_Action___0__
  commentId: M:Wrap.EnumerableExtensions.IterateAsync``1(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Action{``0})
  name.vb: IterateAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Action(Of T))
  fullName: Wrap.EnumerableExtensions.IterateAsync<T>(System.Collections.Generic.IAsyncEnumerable<Wrap.Maybe<T>>, System.Action<T>)
  fullName.vb: Wrap.EnumerableExtensions.IterateAsync(Of T)(System.Collections.Generic.IAsyncEnumerable(Of Wrap.Maybe(Of T)), System.Action(Of T))
  nameWithType: EnumerableExtensions.IterateAsync<T>(IAsyncEnumerable<Maybe<T>>, Action<T>)
  nameWithType.vb: EnumerableExtensions.IterateAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Action(Of T))
- uid: Wrap.EnumerableExtensions.IterateAsync``1(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task})
  name: IterateAsync<T>(IAsyncEnumerable<Maybe<T>>, Func<T, Task>)
  href: api/Wrap.EnumerableExtensions.IterateAsync.html#Wrap_EnumerableExtensions_IterateAsync__1_System_Collections_Generic_IAsyncEnumerable_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.EnumerableExtensions.IterateAsync``1(System.Collections.Generic.IAsyncEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: IterateAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task))
  fullName: Wrap.EnumerableExtensions.IterateAsync<T>(System.Collections.Generic.IAsyncEnumerable<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.EnumerableExtensions.IterateAsync(Of T)(System.Collections.Generic.IAsyncEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: EnumerableExtensions.IterateAsync<T>(IAsyncEnumerable<Maybe<T>>, Func<T, Task>)
  nameWithType.vb: EnumerableExtensions.IterateAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task))
- uid: Wrap.EnumerableExtensions.IterateAsync``1(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task})
  name: IterateAsync<T>(IEnumerable<Maybe<T>>, Func<T, Task>)
  href: api/Wrap.EnumerableExtensions.IterateAsync.html#Wrap_EnumerableExtensions_IterateAsync__1_System_Collections_Generic_IEnumerable_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.EnumerableExtensions.IterateAsync``1(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: IterateAsync(Of T)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task))
  fullName: Wrap.EnumerableExtensions.IterateAsync<T>(System.Collections.Generic.IEnumerable<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.EnumerableExtensions.IterateAsync(Of T)(System.Collections.Generic.IEnumerable(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: EnumerableExtensions.IterateAsync<T>(IEnumerable<Maybe<T>>, Func<T, Task>)
  nameWithType.vb: EnumerableExtensions.IterateAsync(Of T)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task))
- uid: Wrap.EnumerableExtensions.Iterate``1(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Action{``0})
  name: Iterate<T>(IEnumerable<Maybe<T>>, Action<T>)
  href: api/Wrap.EnumerableExtensions.Iterate.html#Wrap_EnumerableExtensions_Iterate__1_System_Collections_Generic_IEnumerable_Wrap_Maybe___0___System_Action___0__
  commentId: M:Wrap.EnumerableExtensions.Iterate``1(System.Collections.Generic.IEnumerable{Wrap.Maybe{``0}},System.Action{``0})
  name.vb: Iterate(Of T)(IEnumerable(Of Maybe(Of T)), Action(Of T))
  fullName: Wrap.EnumerableExtensions.Iterate<T>(System.Collections.Generic.IEnumerable<Wrap.Maybe<T>>, System.Action<T>)
  fullName.vb: Wrap.EnumerableExtensions.Iterate(Of T)(System.Collections.Generic.IEnumerable(Of Wrap.Maybe(Of T)), System.Action(Of T))
  nameWithType: EnumerableExtensions.Iterate<T>(IEnumerable<Maybe<T>>, Action<T>)
  nameWithType.vb: EnumerableExtensions.Iterate(Of T)(IEnumerable(Of Maybe(Of T)), Action(Of T))
- uid: Wrap.EnumerableExtensions.LastOrNone*
  name: LastOrNone
  href: api/Wrap.EnumerableExtensions.LastOrNone.html
  commentId: Overload:Wrap.EnumerableExtensions.LastOrNone
  fullName: Wrap.EnumerableExtensions.LastOrNone
  nameWithType: EnumerableExtensions.LastOrNone
- uid: Wrap.EnumerableExtensions.LastOrNone``1(System.Collections.Generic.IEnumerable{``0})
  name: LastOrNone<T>(IEnumerable<T>)
  href: api/Wrap.EnumerableExtensions.LastOrNone.html#Wrap_EnumerableExtensions_LastOrNone__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Wrap.EnumerableExtensions.LastOrNone``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: LastOrNone(Of T)(IEnumerable(Of T))
  fullName: Wrap.EnumerableExtensions.LastOrNone<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wrap.EnumerableExtensions.LastOrNone(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: EnumerableExtensions.LastOrNone<T>(IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.LastOrNone(Of T)(IEnumerable(Of T))
- uid: Wrap.EnumerableExtensions.Map*
  name: Map
  href: api/Wrap.EnumerableExtensions.Map.html
  commentId: Overload:Wrap.EnumerableExtensions.Map
  fullName: Wrap.EnumerableExtensions.Map
  nameWithType: EnumerableExtensions.Map
- uid: Wrap.EnumerableExtensions.MapAsync*
  name: MapAsync
  href: api/Wrap.EnumerableExtensions.MapAsync.html
  commentId: Overload:Wrap.EnumerableExtensions.MapAsync
  fullName: Wrap.EnumerableExtensions.MapAsync
  nameWithType: EnumerableExtensions.MapAsync
- uid: Wrap.EnumerableExtensions.MapAsync``2(System.Collections.Generic.IAsyncEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MapAsync<T, TReturn>(IAsyncEnumerable<T>, Func<T, Task<TReturn>>)
  href: api/Wrap.EnumerableExtensions.MapAsync.html#Wrap_EnumerableExtensions_MapAsync__2_System_Collections_Generic_IAsyncEnumerable___0__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.EnumerableExtensions.MapAsync``2(System.Collections.Generic.IAsyncEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MapAsync(Of T, TReturn)(IAsyncEnumerable(Of T), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.EnumerableExtensions.MapAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<T>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.EnumerableExtensions.MapAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EnumerableExtensions.MapAsync<T, TReturn>(IAsyncEnumerable<T>, Func<T, Task<TReturn>>)
  nameWithType.vb: EnumerableExtensions.MapAsync(Of T, TReturn)(IAsyncEnumerable(Of T), Func(Of T, Task(Of TReturn)))
- uid: Wrap.EnumerableExtensions.MapAsync``2(System.Collections.Generic.IAsyncEnumerable{``0},System.Func{``0,``1})
  name: MapAsync<T, TReturn>(IAsyncEnumerable<T>, Func<T, TReturn>)
  href: api/Wrap.EnumerableExtensions.MapAsync.html#Wrap_EnumerableExtensions_MapAsync__2_System_Collections_Generic_IAsyncEnumerable___0__System_Func___0___1__
  commentId: M:Wrap.EnumerableExtensions.MapAsync``2(System.Collections.Generic.IAsyncEnumerable{``0},System.Func{``0,``1})
  name.vb: MapAsync(Of T, TReturn)(IAsyncEnumerable(Of T), Func(Of T, TReturn))
  fullName: Wrap.EnumerableExtensions.MapAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<T>, System.Func<T, TReturn>)
  fullName.vb: Wrap.EnumerableExtensions.MapAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of T), System.Func(Of T, TReturn))
  nameWithType: EnumerableExtensions.MapAsync<T, TReturn>(IAsyncEnumerable<T>, Func<T, TReturn>)
  nameWithType.vb: EnumerableExtensions.MapAsync(Of T, TReturn)(IAsyncEnumerable(Of T), Func(Of T, TReturn))
- uid: Wrap.EnumerableExtensions.MapAsync``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MapAsync<T, TReturn>(IEnumerable<T>, Func<T, Task<TReturn>>)
  href: api/Wrap.EnumerableExtensions.MapAsync.html#Wrap_EnumerableExtensions_MapAsync__2_System_Collections_Generic_IEnumerable___0__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.EnumerableExtensions.MapAsync``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MapAsync(Of T, TReturn)(IEnumerable(Of T), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.EnumerableExtensions.MapAsync<T, TReturn>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.EnumerableExtensions.MapAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EnumerableExtensions.MapAsync<T, TReturn>(IEnumerable<T>, Func<T, Task<TReturn>>)
  nameWithType.vb: EnumerableExtensions.MapAsync(Of T, TReturn)(IEnumerable(Of T), Func(Of T, Task(Of TReturn)))
- uid: Wrap.EnumerableExtensions.Map``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: Map<T, TReturn>(IEnumerable<T>, Func<T, TReturn>)
  href: api/Wrap.EnumerableExtensions.Map.html#Wrap_EnumerableExtensions_Map__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  commentId: M:Wrap.EnumerableExtensions.Map``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name.vb: Map(Of T, TReturn)(IEnumerable(Of T), Func(Of T, TReturn))
  fullName: Wrap.EnumerableExtensions.Map<T, TReturn>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TReturn>)
  fullName.vb: Wrap.EnumerableExtensions.Map(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TReturn))
  nameWithType: EnumerableExtensions.Map<T, TReturn>(IEnumerable<T>, Func<T, TReturn>)
  nameWithType.vb: EnumerableExtensions.Map(Of T, TReturn)(IEnumerable(Of T), Func(Of T, TReturn))
- uid: Wrap.EnumerableExtensions.SingleOrNone*
  name: SingleOrNone
  href: api/Wrap.EnumerableExtensions.SingleOrNone.html
  commentId: Overload:Wrap.EnumerableExtensions.SingleOrNone
  fullName: Wrap.EnumerableExtensions.SingleOrNone
  nameWithType: EnumerableExtensions.SingleOrNone
- uid: Wrap.EnumerableExtensions.SingleOrNone``1(System.Collections.Generic.IEnumerable{``0})
  name: SingleOrNone<T>(IEnumerable<T>)
  href: api/Wrap.EnumerableExtensions.SingleOrNone.html#Wrap_EnumerableExtensions_SingleOrNone__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Wrap.EnumerableExtensions.SingleOrNone``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: SingleOrNone(Of T)(IEnumerable(Of T))
  fullName: Wrap.EnumerableExtensions.SingleOrNone<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wrap.EnumerableExtensions.SingleOrNone(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: EnumerableExtensions.SingleOrNone<T>(IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.SingleOrNone(Of T)(IEnumerable(Of T))
- uid: Wrap.Exceptions
  name: Wrap.Exceptions
  href: api/Wrap.Exceptions.html
  commentId: N:Wrap.Exceptions
  fullName: Wrap.Exceptions
  nameWithType: Wrap.Exceptions
- uid: Wrap.Exceptions.IncorrectValueTypeException`2
  name: IncorrectValueTypeException<TUnion, TExpectedValue>
  href: api/Wrap.Exceptions.IncorrectValueTypeException-2.html
  commentId: T:Wrap.Exceptions.IncorrectValueTypeException`2
  name.vb: IncorrectValueTypeException(Of TUnion, TExpectedValue)
  fullName: Wrap.Exceptions.IncorrectValueTypeException<TUnion, TExpectedValue>
  fullName.vb: Wrap.Exceptions.IncorrectValueTypeException(Of TUnion, TExpectedValue)
  nameWithType: IncorrectValueTypeException<TUnion, TExpectedValue>
  nameWithType.vb: IncorrectValueTypeException(Of TUnion, TExpectedValue)
- uid: Wrap.Exceptions.IncorrectValueTypeException`2.#ctor(System.Text.Json.JsonException)
  name: IncorrectValueTypeException(JsonException)
  href: api/Wrap.Exceptions.IncorrectValueTypeException-2.-ctor.html#Wrap_Exceptions_IncorrectValueTypeException_2__ctor_System_Text_Json_JsonException_
  commentId: M:Wrap.Exceptions.IncorrectValueTypeException`2.#ctor(System.Text.Json.JsonException)
  name.vb: New(JsonException)
  fullName: Wrap.Exceptions.IncorrectValueTypeException<TUnion, TExpectedValue>.IncorrectValueTypeException(System.Text.Json.JsonException)
  fullName.vb: Wrap.Exceptions.IncorrectValueTypeException(Of TUnion, TExpectedValue).New(System.Text.Json.JsonException)
  nameWithType: IncorrectValueTypeException<TUnion, TExpectedValue>.IncorrectValueTypeException(JsonException)
  nameWithType.vb: IncorrectValueTypeException(Of TUnion, TExpectedValue).New(JsonException)
- uid: Wrap.Exceptions.IncorrectValueTypeException`2.#ctor*
  name: IncorrectValueTypeException
  href: api/Wrap.Exceptions.IncorrectValueTypeException-2.-ctor.html
  commentId: Overload:Wrap.Exceptions.IncorrectValueTypeException`2.#ctor
  name.vb: New
  fullName: Wrap.Exceptions.IncorrectValueTypeException<TUnion, TExpectedValue>.IncorrectValueTypeException
  fullName.vb: Wrap.Exceptions.IncorrectValueTypeException(Of TUnion, TExpectedValue).New
  nameWithType: IncorrectValueTypeException<TUnion, TExpectedValue>.IncorrectValueTypeException
  nameWithType.vb: IncorrectValueTypeException(Of TUnion, TExpectedValue).New
- uid: Wrap.Exceptions.InvalidEitherTypeException
  name: InvalidEitherTypeException
  href: api/Wrap.Exceptions.InvalidEitherTypeException.html
  commentId: T:Wrap.Exceptions.InvalidEitherTypeException
  fullName: Wrap.Exceptions.InvalidEitherTypeException
  nameWithType: InvalidEitherTypeException
- uid: Wrap.Exceptions.InvalidMaybeTypeException
  name: InvalidMaybeTypeException
  href: api/Wrap.Exceptions.InvalidMaybeTypeException.html
  commentId: T:Wrap.Exceptions.InvalidMaybeTypeException
  fullName: Wrap.Exceptions.InvalidMaybeTypeException
  nameWithType: InvalidMaybeTypeException
- uid: Wrap.Exceptions.InvalidResultTypeException
  name: InvalidResultTypeException
  href: api/Wrap.Exceptions.InvalidResultTypeException.html
  commentId: T:Wrap.Exceptions.InvalidResultTypeException
  fullName: Wrap.Exceptions.InvalidResultTypeException
  nameWithType: InvalidResultTypeException
- uid: Wrap.Exceptions.InvalidTypeException
  name: InvalidTypeException
  href: api/Wrap.Exceptions.InvalidTypeException.html
  commentId: T:Wrap.Exceptions.InvalidTypeException
  fullName: Wrap.Exceptions.InvalidTypeException
  nameWithType: InvalidTypeException
- uid: Wrap.Exceptions.InvalidTypeException.#ctor(System.Type,System.Type,System.Type,System.Type)
  name: InvalidTypeException(Type, Type, Type, Type)
  href: api/Wrap.Exceptions.InvalidTypeException.-ctor.html#Wrap_Exceptions_InvalidTypeException__ctor_System_Type_System_Type_System_Type_System_Type_
  commentId: M:Wrap.Exceptions.InvalidTypeException.#ctor(System.Type,System.Type,System.Type,System.Type)
  name.vb: New(Type, Type, Type, Type)
  fullName: Wrap.Exceptions.InvalidTypeException.InvalidTypeException(System.Type, System.Type, System.Type, System.Type)
  fullName.vb: Wrap.Exceptions.InvalidTypeException.New(System.Type, System.Type, System.Type, System.Type)
  nameWithType: InvalidTypeException.InvalidTypeException(Type, Type, Type, Type)
  nameWithType.vb: InvalidTypeException.New(Type, Type, Type, Type)
- uid: Wrap.Exceptions.InvalidTypeException.#ctor*
  name: InvalidTypeException
  href: api/Wrap.Exceptions.InvalidTypeException.-ctor.html
  commentId: Overload:Wrap.Exceptions.InvalidTypeException.#ctor
  name.vb: New
  fullName: Wrap.Exceptions.InvalidTypeException.InvalidTypeException
  fullName.vb: Wrap.Exceptions.InvalidTypeException.New
  nameWithType: InvalidTypeException.InvalidTypeException
  nameWithType.vb: InvalidTypeException.New
- uid: Wrap.Exceptions.JsonConverterException
  name: JsonConverterException
  href: api/Wrap.Exceptions.JsonConverterException.html
  commentId: T:Wrap.Exceptions.JsonConverterException
  fullName: Wrap.Exceptions.JsonConverterException
  nameWithType: JsonConverterException
- uid: Wrap.Exceptions.JsonConverterException.#ctor(System.String)
  name: JsonConverterException(string)
  href: api/Wrap.Exceptions.JsonConverterException.-ctor.html#Wrap_Exceptions_JsonConverterException__ctor_System_String_
  commentId: M:Wrap.Exceptions.JsonConverterException.#ctor(System.String)
  name.vb: New(String)
  fullName: Wrap.Exceptions.JsonConverterException.JsonConverterException(string)
  fullName.vb: Wrap.Exceptions.JsonConverterException.New(String)
  nameWithType: JsonConverterException.JsonConverterException(string)
  nameWithType.vb: JsonConverterException.New(String)
- uid: Wrap.Exceptions.JsonConverterException.#ctor*
  name: JsonConverterException
  href: api/Wrap.Exceptions.JsonConverterException.-ctor.html
  commentId: Overload:Wrap.Exceptions.JsonConverterException.#ctor
  name.vb: New
  fullName: Wrap.Exceptions.JsonConverterException.JsonConverterException
  fullName.vb: Wrap.Exceptions.JsonConverterException.New
  nameWithType: JsonConverterException.JsonConverterException
  nameWithType.vb: JsonConverterException.New
- uid: Wrap.Exceptions.NullEitherException
  name: NullEitherException
  href: api/Wrap.Exceptions.NullEitherException.html
  commentId: T:Wrap.Exceptions.NullEitherException
  fullName: Wrap.Exceptions.NullEitherException
  nameWithType: NullEitherException
- uid: Wrap.Exceptions.NullEitherException.#ctor
  name: NullEitherException()
  href: api/Wrap.Exceptions.NullEitherException.-ctor.html#Wrap_Exceptions_NullEitherException__ctor
  commentId: M:Wrap.Exceptions.NullEitherException.#ctor
  name.vb: New()
  fullName: Wrap.Exceptions.NullEitherException.NullEitherException()
  fullName.vb: Wrap.Exceptions.NullEitherException.New()
  nameWithType: NullEitherException.NullEitherException()
  nameWithType.vb: NullEitherException.New()
- uid: Wrap.Exceptions.NullEitherException.#ctor*
  name: NullEitherException
  href: api/Wrap.Exceptions.NullEitherException.-ctor.html
  commentId: Overload:Wrap.Exceptions.NullEitherException.#ctor
  name.vb: New
  fullName: Wrap.Exceptions.NullEitherException.NullEitherException
  fullName.vb: Wrap.Exceptions.NullEitherException.New
  nameWithType: NullEitherException.NullEitherException
  nameWithType.vb: NullEitherException.New
- uid: Wrap.Exceptions.NullMaybeException
  name: NullMaybeException
  href: api/Wrap.Exceptions.NullMaybeException.html
  commentId: T:Wrap.Exceptions.NullMaybeException
  fullName: Wrap.Exceptions.NullMaybeException
  nameWithType: NullMaybeException
- uid: Wrap.Exceptions.NullResultException
  name: NullResultException
  href: api/Wrap.Exceptions.NullResultException.html
  commentId: T:Wrap.Exceptions.NullResultException
  fullName: Wrap.Exceptions.NullResultException
  nameWithType: NullResultException
- uid: Wrap.Exceptions.NullResultException.#ctor
  name: NullResultException()
  href: api/Wrap.Exceptions.NullResultException.-ctor.html#Wrap_Exceptions_NullResultException__ctor
  commentId: M:Wrap.Exceptions.NullResultException.#ctor
  name.vb: New()
  fullName: Wrap.Exceptions.NullResultException.NullResultException()
  fullName.vb: Wrap.Exceptions.NullResultException.New()
  nameWithType: NullResultException.NullResultException()
  nameWithType.vb: NullResultException.New()
- uid: Wrap.Exceptions.NullResultException.#ctor*
  name: NullResultException
  href: api/Wrap.Exceptions.NullResultException.-ctor.html
  commentId: Overload:Wrap.Exceptions.NullResultException.#ctor
  name.vb: New
  fullName: Wrap.Exceptions.NullResultException.NullResultException
  fullName.vb: Wrap.Exceptions.NullResultException.New
  nameWithType: NullResultException.NullResultException
  nameWithType.vb: NullResultException.New
- uid: Wrap.Exceptions.NullUnionValueException
  name: NullUnionValueException
  href: api/Wrap.Exceptions.NullUnionValueException.html
  commentId: T:Wrap.Exceptions.NullUnionValueException
  fullName: Wrap.Exceptions.NullUnionValueException
  nameWithType: NullUnionValueException
- uid: Wrap.Exceptions.NullUnionValueException.#ctor
  name: NullUnionValueException()
  href: api/Wrap.Exceptions.NullUnionValueException.-ctor.html#Wrap_Exceptions_NullUnionValueException__ctor
  commentId: M:Wrap.Exceptions.NullUnionValueException.#ctor
  name.vb: New()
  fullName: Wrap.Exceptions.NullUnionValueException.NullUnionValueException()
  fullName.vb: Wrap.Exceptions.NullUnionValueException.New()
  nameWithType: NullUnionValueException.NullUnionValueException()
  nameWithType.vb: NullUnionValueException.New()
- uid: Wrap.Exceptions.NullUnionValueException.#ctor*
  name: NullUnionValueException
  href: api/Wrap.Exceptions.NullUnionValueException.-ctor.html
  commentId: Overload:Wrap.Exceptions.NullUnionValueException.#ctor
  name.vb: New
  fullName: Wrap.Exceptions.NullUnionValueException.NullUnionValueException
  fullName.vb: Wrap.Exceptions.NullUnionValueException.New
  nameWithType: NullUnionValueException.NullUnionValueException
  nameWithType.vb: NullUnionValueException.New
- uid: Wrap.Exceptions.OkValueCannotBeNullException
  name: OkValueCannotBeNullException
  href: api/Wrap.Exceptions.OkValueCannotBeNullException.html
  commentId: T:Wrap.Exceptions.OkValueCannotBeNullException
  fullName: Wrap.Exceptions.OkValueCannotBeNullException
  nameWithType: OkValueCannotBeNullException
- uid: Wrap.Exceptions.OkValueCannotBeNullException.#ctor
  name: OkValueCannotBeNullException()
  href: api/Wrap.Exceptions.OkValueCannotBeNullException.-ctor.html#Wrap_Exceptions_OkValueCannotBeNullException__ctor
  commentId: M:Wrap.Exceptions.OkValueCannotBeNullException.#ctor
  name.vb: New()
  fullName: Wrap.Exceptions.OkValueCannotBeNullException.OkValueCannotBeNullException()
  fullName.vb: Wrap.Exceptions.OkValueCannotBeNullException.New()
  nameWithType: OkValueCannotBeNullException.OkValueCannotBeNullException()
  nameWithType.vb: OkValueCannotBeNullException.New()
- uid: Wrap.Exceptions.OkValueCannotBeNullException.#ctor*
  name: OkValueCannotBeNullException
  href: api/Wrap.Exceptions.OkValueCannotBeNullException.-ctor.html
  commentId: Overload:Wrap.Exceptions.OkValueCannotBeNullException.#ctor
  name.vb: New
  fullName: Wrap.Exceptions.OkValueCannotBeNullException.OkValueCannotBeNullException
  fullName.vb: Wrap.Exceptions.OkValueCannotBeNullException.New
  nameWithType: OkValueCannotBeNullException.OkValueCannotBeNullException
  nameWithType.vb: OkValueCannotBeNullException.New
- uid: Wrap.Exceptions.PredicateFalseException
  name: PredicateFalseException
  href: api/Wrap.Exceptions.PredicateFalseException.html
  commentId: T:Wrap.Exceptions.PredicateFalseException
  fullName: Wrap.Exceptions.PredicateFalseException
  nameWithType: PredicateFalseException
- uid: Wrap.Exceptions.PredicateFalseException.#ctor
  name: PredicateFalseException()
  href: api/Wrap.Exceptions.PredicateFalseException.-ctor.html#Wrap_Exceptions_PredicateFalseException__ctor
  commentId: M:Wrap.Exceptions.PredicateFalseException.#ctor
  name.vb: New()
  fullName: Wrap.Exceptions.PredicateFalseException.PredicateFalseException()
  fullName.vb: Wrap.Exceptions.PredicateFalseException.New()
  nameWithType: PredicateFalseException.PredicateFalseException()
  nameWithType.vb: PredicateFalseException.New()
- uid: Wrap.Exceptions.PredicateFalseException.#ctor*
  name: PredicateFalseException
  href: api/Wrap.Exceptions.PredicateFalseException.-ctor.html
  commentId: Overload:Wrap.Exceptions.PredicateFalseException.#ctor
  name.vb: New
  fullName: Wrap.Exceptions.PredicateFalseException.PredicateFalseException
  fullName.vb: Wrap.Exceptions.PredicateFalseException.New
  nameWithType: PredicateFalseException.PredicateFalseException
  nameWithType.vb: PredicateFalseException.New
- uid: Wrap.Exceptions.UnsafeUnwrapException
  name: UnsafeUnwrapException
  href: api/Wrap.Exceptions.UnsafeUnwrapException.html
  commentId: T:Wrap.Exceptions.UnsafeUnwrapException
  fullName: Wrap.Exceptions.UnsafeUnwrapException
  nameWithType: UnsafeUnwrapException
- uid: Wrap.Exceptions.UnsafeUnwrapException.#ctor
  name: UnsafeUnwrapException()
  href: api/Wrap.Exceptions.UnsafeUnwrapException.-ctor.html#Wrap_Exceptions_UnsafeUnwrapException__ctor
  commentId: M:Wrap.Exceptions.UnsafeUnwrapException.#ctor
  name.vb: New()
  fullName: Wrap.Exceptions.UnsafeUnwrapException.UnsafeUnwrapException()
  fullName.vb: Wrap.Exceptions.UnsafeUnwrapException.New()
  nameWithType: UnsafeUnwrapException.UnsafeUnwrapException()
  nameWithType.vb: UnsafeUnwrapException.New()
- uid: Wrap.Exceptions.UnsafeUnwrapException.#ctor*
  name: UnsafeUnwrapException
  href: api/Wrap.Exceptions.UnsafeUnwrapException.-ctor.html
  commentId: Overload:Wrap.Exceptions.UnsafeUnwrapException.#ctor
  name.vb: New
  fullName: Wrap.Exceptions.UnsafeUnwrapException.UnsafeUnwrapException
  fullName.vb: Wrap.Exceptions.UnsafeUnwrapException.New
  nameWithType: UnsafeUnwrapException.UnsafeUnwrapException
  nameWithType.vb: UnsafeUnwrapException.New
- uid: Wrap.Exceptions.WrapException
  name: WrapException
  href: api/Wrap.Exceptions.WrapException.html
  commentId: T:Wrap.Exceptions.WrapException
  fullName: Wrap.Exceptions.WrapException
  nameWithType: WrapException
- uid: Wrap.Exceptions.WrapException.#ctor
  name: WrapException()
  href: api/Wrap.Exceptions.WrapException.-ctor.html#Wrap_Exceptions_WrapException__ctor
  commentId: M:Wrap.Exceptions.WrapException.#ctor
  name.vb: New()
  fullName: Wrap.Exceptions.WrapException.WrapException()
  fullName.vb: Wrap.Exceptions.WrapException.New()
  nameWithType: WrapException.WrapException()
  nameWithType.vb: WrapException.New()
- uid: Wrap.Exceptions.WrapException.#ctor(System.String)
  name: WrapException(string)
  href: api/Wrap.Exceptions.WrapException.-ctor.html#Wrap_Exceptions_WrapException__ctor_System_String_
  commentId: M:Wrap.Exceptions.WrapException.#ctor(System.String)
  name.vb: New(String)
  fullName: Wrap.Exceptions.WrapException.WrapException(string)
  fullName.vb: Wrap.Exceptions.WrapException.New(String)
  nameWithType: WrapException.WrapException(string)
  nameWithType.vb: WrapException.New(String)
- uid: Wrap.Exceptions.WrapException.#ctor(System.String,System.Exception)
  name: WrapException(string, Exception)
  href: api/Wrap.Exceptions.WrapException.-ctor.html#Wrap_Exceptions_WrapException__ctor_System_String_System_Exception_
  commentId: M:Wrap.Exceptions.WrapException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: Wrap.Exceptions.WrapException.WrapException(string, System.Exception)
  fullName.vb: Wrap.Exceptions.WrapException.New(String, System.Exception)
  nameWithType: WrapException.WrapException(string, Exception)
  nameWithType.vb: WrapException.New(String, Exception)
- uid: Wrap.Exceptions.WrapException.#ctor*
  name: WrapException
  href: api/Wrap.Exceptions.WrapException.-ctor.html
  commentId: Overload:Wrap.Exceptions.WrapException.#ctor
  name.vb: New
  fullName: Wrap.Exceptions.WrapException.WrapException
  fullName.vb: Wrap.Exceptions.WrapException.New
  nameWithType: WrapException.WrapException
  nameWithType.vb: WrapException.New
- uid: Wrap.F
  name: F
  href: api/Wrap.F.html
  commentId: T:Wrap.F
  fullName: Wrap.F
  nameWithType: F
- uid: Wrap.F.ExceptionLogger
  name: F.ExceptionLogger
  href: api/Wrap.F.ExceptionLogger.html
  commentId: T:Wrap.F.ExceptionLogger
  fullName: Wrap.F.ExceptionLogger
  nameWithType: F.ExceptionLogger
- uid: Wrap.F.ExceptionLogger.#ctor(System.Object,System.IntPtr)
  name: ExceptionLogger(object, nint)
  href: api/Wrap.F.ExceptionLogger.-ctor.html#Wrap_F_ExceptionLogger__ctor_System_Object_System_IntPtr_
  commentId: M:Wrap.F.ExceptionLogger.#ctor(System.Object,System.IntPtr)
  name.vb: New(Object, IntPtr)
  fullName: Wrap.F.ExceptionLogger.ExceptionLogger(object, nint)
  fullName.vb: Wrap.F.ExceptionLogger.New(Object, System.IntPtr)
  nameWithType: F.ExceptionLogger.ExceptionLogger(object, nint)
  nameWithType.vb: F.ExceptionLogger.New(Object, IntPtr)
- uid: Wrap.F.ExceptionLogger.#ctor*
  name: ExceptionLogger
  href: api/Wrap.F.ExceptionLogger.-ctor.html
  commentId: Overload:Wrap.F.ExceptionLogger.#ctor
  name.vb: New
  fullName: Wrap.F.ExceptionLogger.ExceptionLogger
  fullName.vb: Wrap.F.ExceptionLogger.New
  nameWithType: F.ExceptionLogger.ExceptionLogger
  nameWithType.vb: F.ExceptionLogger.New
- uid: Wrap.F.ExceptionLogger.BeginInvoke(System.Exception,System.AsyncCallback,System.Object)
  name: BeginInvoke(Exception, AsyncCallback, object)
  href: api/Wrap.F.ExceptionLogger.BeginInvoke.html#Wrap_F_ExceptionLogger_BeginInvoke_System_Exception_System_AsyncCallback_System_Object_
  commentId: M:Wrap.F.ExceptionLogger.BeginInvoke(System.Exception,System.AsyncCallback,System.Object)
  name.vb: BeginInvoke(Exception, AsyncCallback, Object)
  fullName: Wrap.F.ExceptionLogger.BeginInvoke(System.Exception, System.AsyncCallback, object)
  fullName.vb: Wrap.F.ExceptionLogger.BeginInvoke(System.Exception, System.AsyncCallback, Object)
  nameWithType: F.ExceptionLogger.BeginInvoke(Exception, AsyncCallback, object)
  nameWithType.vb: F.ExceptionLogger.BeginInvoke(Exception, AsyncCallback, Object)
- uid: Wrap.F.ExceptionLogger.BeginInvoke*
  name: BeginInvoke
  href: api/Wrap.F.ExceptionLogger.BeginInvoke.html
  commentId: Overload:Wrap.F.ExceptionLogger.BeginInvoke
  fullName: Wrap.F.ExceptionLogger.BeginInvoke
  nameWithType: F.ExceptionLogger.BeginInvoke
- uid: Wrap.F.ExceptionLogger.EndInvoke(System.IAsyncResult)
  name: EndInvoke(IAsyncResult)
  href: api/Wrap.F.ExceptionLogger.EndInvoke.html#Wrap_F_ExceptionLogger_EndInvoke_System_IAsyncResult_
  commentId: M:Wrap.F.ExceptionLogger.EndInvoke(System.IAsyncResult)
  fullName: Wrap.F.ExceptionLogger.EndInvoke(System.IAsyncResult)
  nameWithType: F.ExceptionLogger.EndInvoke(IAsyncResult)
- uid: Wrap.F.ExceptionLogger.EndInvoke*
  name: EndInvoke
  href: api/Wrap.F.ExceptionLogger.EndInvoke.html
  commentId: Overload:Wrap.F.ExceptionLogger.EndInvoke
  fullName: Wrap.F.ExceptionLogger.EndInvoke
  nameWithType: F.ExceptionLogger.EndInvoke
- uid: Wrap.F.ExceptionLogger.Invoke(System.Exception)
  name: Invoke(Exception)
  href: api/Wrap.F.ExceptionLogger.Invoke.html#Wrap_F_ExceptionLogger_Invoke_System_Exception_
  commentId: M:Wrap.F.ExceptionLogger.Invoke(System.Exception)
  fullName: Wrap.F.ExceptionLogger.Invoke(System.Exception)
  nameWithType: F.ExceptionLogger.Invoke(Exception)
- uid: Wrap.F.ExceptionLogger.Invoke*
  name: Invoke
  href: api/Wrap.F.ExceptionLogger.Invoke.html
  commentId: Overload:Wrap.F.ExceptionLogger.Invoke
  fullName: Wrap.F.ExceptionLogger.Invoke
  nameWithType: F.ExceptionLogger.Invoke
- uid: Wrap.F.FailureLogger
  name: F.FailureLogger
  href: api/Wrap.F.FailureLogger.html
  commentId: T:Wrap.F.FailureLogger
  fullName: Wrap.F.FailureLogger
  nameWithType: F.FailureLogger
- uid: Wrap.F.FailureLogger.#ctor(System.Object,System.IntPtr)
  name: FailureLogger(object, nint)
  href: api/Wrap.F.FailureLogger.-ctor.html#Wrap_F_FailureLogger__ctor_System_Object_System_IntPtr_
  commentId: M:Wrap.F.FailureLogger.#ctor(System.Object,System.IntPtr)
  name.vb: New(Object, IntPtr)
  fullName: Wrap.F.FailureLogger.FailureLogger(object, nint)
  fullName.vb: Wrap.F.FailureLogger.New(Object, System.IntPtr)
  nameWithType: F.FailureLogger.FailureLogger(object, nint)
  nameWithType.vb: F.FailureLogger.New(Object, IntPtr)
- uid: Wrap.F.FailureLogger.#ctor*
  name: FailureLogger
  href: api/Wrap.F.FailureLogger.-ctor.html
  commentId: Overload:Wrap.F.FailureLogger.#ctor
  name.vb: New
  fullName: Wrap.F.FailureLogger.FailureLogger
  fullName.vb: Wrap.F.FailureLogger.New
  nameWithType: F.FailureLogger.FailureLogger
  nameWithType.vb: F.FailureLogger.New
- uid: Wrap.F.FailureLogger.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  name: BeginInvoke(string, object[], AsyncCallback, object)
  href: api/Wrap.F.FailureLogger.BeginInvoke.html#Wrap_F_FailureLogger_BeginInvoke_System_String_System_Object___System_AsyncCallback_System_Object_
  commentId: M:Wrap.F.FailureLogger.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  name.vb: BeginInvoke(String, Object(), AsyncCallback, Object)
  fullName: Wrap.F.FailureLogger.BeginInvoke(string, object[], System.AsyncCallback, object)
  fullName.vb: Wrap.F.FailureLogger.BeginInvoke(String, Object(), System.AsyncCallback, Object)
  nameWithType: F.FailureLogger.BeginInvoke(string, object[], AsyncCallback, object)
  nameWithType.vb: F.FailureLogger.BeginInvoke(String, Object(), AsyncCallback, Object)
- uid: Wrap.F.FailureLogger.BeginInvoke*
  name: BeginInvoke
  href: api/Wrap.F.FailureLogger.BeginInvoke.html
  commentId: Overload:Wrap.F.FailureLogger.BeginInvoke
  fullName: Wrap.F.FailureLogger.BeginInvoke
  nameWithType: F.FailureLogger.BeginInvoke
- uid: Wrap.F.FailureLogger.EndInvoke(System.IAsyncResult)
  name: EndInvoke(IAsyncResult)
  href: api/Wrap.F.FailureLogger.EndInvoke.html#Wrap_F_FailureLogger_EndInvoke_System_IAsyncResult_
  commentId: M:Wrap.F.FailureLogger.EndInvoke(System.IAsyncResult)
  fullName: Wrap.F.FailureLogger.EndInvoke(System.IAsyncResult)
  nameWithType: F.FailureLogger.EndInvoke(IAsyncResult)
- uid: Wrap.F.FailureLogger.EndInvoke*
  name: EndInvoke
  href: api/Wrap.F.FailureLogger.EndInvoke.html
  commentId: Overload:Wrap.F.FailureLogger.EndInvoke
  fullName: Wrap.F.FailureLogger.EndInvoke
  nameWithType: F.FailureLogger.EndInvoke
- uid: Wrap.F.FailureLogger.Invoke(System.String,System.Object[])
  name: Invoke(string, params object[])
  href: api/Wrap.F.FailureLogger.Invoke.html#Wrap_F_FailureLogger_Invoke_System_String_System_Object___
  commentId: M:Wrap.F.FailureLogger.Invoke(System.String,System.Object[])
  name.vb: Invoke(String, ParamArray Object())
  fullName: Wrap.F.FailureLogger.Invoke(string, params object[])
  fullName.vb: Wrap.F.FailureLogger.Invoke(String, ParamArray Object())
  nameWithType: F.FailureLogger.Invoke(string, params object[])
  nameWithType.vb: F.FailureLogger.Invoke(String, ParamArray Object())
- uid: Wrap.F.FailureLogger.Invoke*
  name: Invoke
  href: api/Wrap.F.FailureLogger.Invoke.html
  commentId: Overload:Wrap.F.FailureLogger.Invoke
  fullName: Wrap.F.FailureLogger.Invoke
  nameWithType: F.FailureLogger.Invoke
- uid: Wrap.F.IsNullableValueType*
  name: IsNullableValueType
  href: api/Wrap.F.IsNullableValueType.html
  commentId: Overload:Wrap.F.IsNullableValueType
  fullName: Wrap.F.IsNullableValueType
  nameWithType: F.IsNullableValueType
- uid: Wrap.F.IsNullableValueType``1(``0)
  name: IsNullableValueType<T>(T)
  href: api/Wrap.F.IsNullableValueType.html#Wrap_F_IsNullableValueType__1___0_
  commentId: M:Wrap.F.IsNullableValueType``1(``0)
  name.vb: IsNullableValueType(Of T)(T)
  fullName: Wrap.F.IsNullableValueType<T>(T)
  fullName.vb: Wrap.F.IsNullableValueType(Of T)(T)
  nameWithType: F.IsNullableValueType<T>(T)
  nameWithType.vb: F.IsNullableValueType(Of T)(T)
- uid: Wrap.F.LogException
  name: LogException
  href: api/Wrap.F.LogException.html#Wrap_F_LogException
  commentId: P:Wrap.F.LogException
  fullName: Wrap.F.LogException
  nameWithType: F.LogException
- uid: Wrap.F.LogException*
  name: LogException
  href: api/Wrap.F.LogException.html
  commentId: Overload:Wrap.F.LogException
  fullName: Wrap.F.LogException
  nameWithType: F.LogException
- uid: Wrap.F.LogFailure
  name: LogFailure
  href: api/Wrap.F.LogFailure.html#Wrap_F_LogFailure
  commentId: P:Wrap.F.LogFailure
  fullName: Wrap.F.LogFailure
  nameWithType: F.LogFailure
- uid: Wrap.F.LogFailure*
  name: LogFailure
  href: api/Wrap.F.LogFailure.html
  commentId: Overload:Wrap.F.LogFailure
  fullName: Wrap.F.LogFailure
  nameWithType: F.LogFailure
- uid: Wrap.F.Wrap*
  name: Wrap
  href: api/Wrap.F.Wrap.html
  commentId: Overload:Wrap.F.Wrap
  fullName: Wrap.F.Wrap
  nameWithType: F.Wrap
- uid: Wrap.F.Wrap``2(``1)
  name: Wrap<TUnion, TValue>(TValue?)
  href: api/Wrap.F.Wrap.html#Wrap_F_Wrap__2___1_
  commentId: M:Wrap.F.Wrap``2(``1)
  name.vb: Wrap(Of TUnion, TValue)(TValue)
  fullName: Wrap.F.Wrap<TUnion, TValue>(TValue?)
  fullName.vb: Wrap.F.Wrap(Of TUnion, TValue)(TValue)
  nameWithType: F.Wrap<TUnion, TValue>(TValue?)
  nameWithType.vb: F.Wrap(Of TUnion, TValue)(TValue)
- uid: Wrap.Fail
  name: Fail
  href: api/Wrap.Fail.html
  commentId: T:Wrap.Fail
  fullName: Wrap.Fail
  nameWithType: Fail
- uid: Wrap.Fail.Value
  name: Value
  href: api/Wrap.Fail.Value.html#Wrap_Fail_Value
  commentId: P:Wrap.Fail.Value
  fullName: Wrap.Fail.Value
  nameWithType: Fail.Value
- uid: Wrap.Fail.Value*
  name: Value
  href: api/Wrap.Fail.Value.html
  commentId: Overload:Wrap.Fail.Value
  fullName: Wrap.Fail.Value
  nameWithType: Fail.Value
- uid: Wrap.FailExtensions
  name: FailExtensions
  href: api/Wrap.FailExtensions.html
  commentId: T:Wrap.FailExtensions
  fullName: Wrap.FailExtensions
  nameWithType: FailExtensions
- uid: Wrap.FailExtensions.AsTask*
  name: AsTask
  href: api/Wrap.FailExtensions.AsTask.html
  commentId: Overload:Wrap.FailExtensions.AsTask
  fullName: Wrap.FailExtensions.AsTask
  nameWithType: FailExtensions.AsTask
- uid: Wrap.FailExtensions.AsTask``1(Wrap.Fail)
  name: AsTask<T>(Fail)
  href: api/Wrap.FailExtensions.AsTask.html#Wrap_FailExtensions_AsTask__1_Wrap_Fail_
  commentId: M:Wrap.FailExtensions.AsTask``1(Wrap.Fail)
  name.vb: AsTask(Of T)(Fail)
  fullName: Wrap.FailExtensions.AsTask<T>(Wrap.Fail)
  fullName.vb: Wrap.FailExtensions.AsTask(Of T)(Wrap.Fail)
  nameWithType: FailExtensions.AsTask<T>(Fail)
  nameWithType.vb: FailExtensions.AsTask(Of T)(Fail)
- uid: Wrap.FailValue
  name: FailValue
  href: api/Wrap.FailValue.html
  commentId: T:Wrap.FailValue
  fullName: Wrap.FailValue
  nameWithType: FailValue
- uid: Wrap.FailValue.Args
  name: Args
  href: api/Wrap.FailValue.Args.html#Wrap_FailValue_Args
  commentId: P:Wrap.FailValue.Args
  fullName: Wrap.FailValue.Args
  nameWithType: FailValue.Args
- uid: Wrap.FailValue.Args*
  name: Args
  href: api/Wrap.FailValue.Args.html
  commentId: Overload:Wrap.FailValue.Args
  fullName: Wrap.FailValue.Args
  nameWithType: FailValue.Args
- uid: Wrap.FailValue.Context
  name: Context
  href: api/Wrap.FailValue.Context.html#Wrap_FailValue_Context
  commentId: P:Wrap.FailValue.Context
  fullName: Wrap.FailValue.Context
  nameWithType: FailValue.Context
- uid: Wrap.FailValue.Context*
  name: Context
  href: api/Wrap.FailValue.Context.html
  commentId: Overload:Wrap.FailValue.Context
  fullName: Wrap.FailValue.Context
  nameWithType: FailValue.Context
- uid: Wrap.FailValue.Create(System.Exception)
  name: Create(Exception)
  href: api/Wrap.FailValue.Create.html#Wrap_FailValue_Create_System_Exception_
  commentId: M:Wrap.FailValue.Create(System.Exception)
  fullName: Wrap.FailValue.Create(System.Exception)
  nameWithType: FailValue.Create(Exception)
- uid: Wrap.FailValue.Create(System.String,System.Object[])
  name: Create(string, params object?[])
  href: api/Wrap.FailValue.Create.html#Wrap_FailValue_Create_System_String_System_Object___
  commentId: M:Wrap.FailValue.Create(System.String,System.Object[])
  name.vb: Create(String, ParamArray Object())
  fullName: Wrap.FailValue.Create(string, params object?[])
  fullName.vb: Wrap.FailValue.Create(String, ParamArray Object())
  nameWithType: FailValue.Create(string, params object?[])
  nameWithType.vb: FailValue.Create(String, ParamArray Object())
- uid: Wrap.FailValue.Create(System.String,System.String,System.Exception)
  name: Create(string, string, Exception)
  href: api/Wrap.FailValue.Create.html#Wrap_FailValue_Create_System_String_System_String_System_Exception_
  commentId: M:Wrap.FailValue.Create(System.String,System.String,System.Exception)
  name.vb: Create(String, String, Exception)
  fullName: Wrap.FailValue.Create(string, string, System.Exception)
  fullName.vb: Wrap.FailValue.Create(String, String, System.Exception)
  nameWithType: FailValue.Create(string, string, Exception)
  nameWithType.vb: FailValue.Create(String, String, Exception)
- uid: Wrap.FailValue.Create(System.String,System.String,System.String,System.Object[])
  name: Create(string, string, string, params object?[])
  href: api/Wrap.FailValue.Create.html#Wrap_FailValue_Create_System_String_System_String_System_String_System_Object___
  commentId: M:Wrap.FailValue.Create(System.String,System.String,System.String,System.Object[])
  name.vb: Create(String, String, String, ParamArray Object())
  fullName: Wrap.FailValue.Create(string, string, string, params object?[])
  fullName.vb: Wrap.FailValue.Create(String, String, String, ParamArray Object())
  nameWithType: FailValue.Create(string, string, string, params object?[])
  nameWithType.vb: FailValue.Create(String, String, String, ParamArray Object())
- uid: Wrap.FailValue.Create*
  name: Create
  href: api/Wrap.FailValue.Create.html
  commentId: Overload:Wrap.FailValue.Create
  fullName: Wrap.FailValue.Create
  nameWithType: FailValue.Create
- uid: Wrap.FailValue.Create``1(System.Exception)
  name: Create<T>(Exception)
  href: api/Wrap.FailValue.Create.html#Wrap_FailValue_Create__1_System_Exception_
  commentId: M:Wrap.FailValue.Create``1(System.Exception)
  name.vb: Create(Of T)(Exception)
  fullName: Wrap.FailValue.Create<T>(System.Exception)
  fullName.vb: Wrap.FailValue.Create(Of T)(System.Exception)
  nameWithType: FailValue.Create<T>(Exception)
  nameWithType.vb: FailValue.Create(Of T)(Exception)
- uid: Wrap.FailValue.Create``1(System.String,System.Object[])
  name: Create<T>(string, params object?[])
  href: api/Wrap.FailValue.Create.html#Wrap_FailValue_Create__1_System_String_System_Object___
  commentId: M:Wrap.FailValue.Create``1(System.String,System.Object[])
  name.vb: Create(Of T)(String, ParamArray Object())
  fullName: Wrap.FailValue.Create<T>(string, params object?[])
  fullName.vb: Wrap.FailValue.Create(Of T)(String, ParamArray Object())
  nameWithType: FailValue.Create<T>(string, params object?[])
  nameWithType.vb: FailValue.Create(Of T)(String, ParamArray Object())
- uid: Wrap.FailValue.Equals(System.Object)
  name: Equals(object)
  href: api/Wrap.FailValue.Equals.html#Wrap_FailValue_Equals_System_Object_
  commentId: M:Wrap.FailValue.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.FailValue.Equals(object)
  fullName.vb: Wrap.FailValue.Equals(Object)
  nameWithType: FailValue.Equals(object)
  nameWithType.vb: FailValue.Equals(Object)
- uid: Wrap.FailValue.Equals(Wrap.FailValue)
  name: Equals(FailValue)
  href: api/Wrap.FailValue.Equals.html#Wrap_FailValue_Equals_Wrap_FailValue_
  commentId: M:Wrap.FailValue.Equals(Wrap.FailValue)
  fullName: Wrap.FailValue.Equals(Wrap.FailValue)
  nameWithType: FailValue.Equals(FailValue)
- uid: Wrap.FailValue.Equals*
  name: Equals
  href: api/Wrap.FailValue.Equals.html
  commentId: Overload:Wrap.FailValue.Equals
  fullName: Wrap.FailValue.Equals
  nameWithType: FailValue.Equals
- uid: Wrap.FailValue.Exception
  name: Exception
  href: api/Wrap.FailValue.Exception.html#Wrap_FailValue_Exception
  commentId: P:Wrap.FailValue.Exception
  fullName: Wrap.FailValue.Exception
  nameWithType: FailValue.Exception
- uid: Wrap.FailValue.Exception*
  name: Exception
  href: api/Wrap.FailValue.Exception.html
  commentId: Overload:Wrap.FailValue.Exception
  fullName: Wrap.FailValue.Exception
  nameWithType: FailValue.Exception
- uid: Wrap.FailValue.GetHashCode
  name: GetHashCode()
  href: api/Wrap.FailValue.GetHashCode.html#Wrap_FailValue_GetHashCode
  commentId: M:Wrap.FailValue.GetHashCode
  fullName: Wrap.FailValue.GetHashCode()
  nameWithType: FailValue.GetHashCode()
- uid: Wrap.FailValue.GetHashCode*
  name: GetHashCode
  href: api/Wrap.FailValue.GetHashCode.html
  commentId: Overload:Wrap.FailValue.GetHashCode
  fullName: Wrap.FailValue.GetHashCode
  nameWithType: FailValue.GetHashCode
- uid: Wrap.FailValue.Level
  name: Level
  href: api/Wrap.FailValue.Level.html#Wrap_FailValue_Level
  commentId: P:Wrap.FailValue.Level
  fullName: Wrap.FailValue.Level
  nameWithType: FailValue.Level
- uid: Wrap.FailValue.Level*
  name: Level
  href: api/Wrap.FailValue.Level.html
  commentId: Overload:Wrap.FailValue.Level
  fullName: Wrap.FailValue.Level
  nameWithType: FailValue.Level
- uid: Wrap.FailValue.Message
  name: Message
  href: api/Wrap.FailValue.Message.html#Wrap_FailValue_Message
  commentId: P:Wrap.FailValue.Message
  fullName: Wrap.FailValue.Message
  nameWithType: FailValue.Message
- uid: Wrap.FailValue.Message*
  name: Message
  href: api/Wrap.FailValue.Message.html
  commentId: Overload:Wrap.FailValue.Message
  fullName: Wrap.FailValue.Message
  nameWithType: FailValue.Message
- uid: Wrap.FailValue.ToString
  name: ToString()
  href: api/Wrap.FailValue.ToString.html#Wrap_FailValue_ToString
  commentId: M:Wrap.FailValue.ToString
  fullName: Wrap.FailValue.ToString()
  nameWithType: FailValue.ToString()
- uid: Wrap.FailValue.ToString*
  name: ToString
  href: api/Wrap.FailValue.ToString.html
  commentId: Overload:Wrap.FailValue.ToString
  fullName: Wrap.FailValue.ToString
  nameWithType: FailValue.ToString
- uid: Wrap.FailValue.op_Equality(Wrap.FailValue,Wrap.FailValue)
  name: operator ==(FailValue, FailValue)
  href: api/Wrap.FailValue.op_Equality.html#Wrap_FailValue_op_Equality_Wrap_FailValue_Wrap_FailValue_
  commentId: M:Wrap.FailValue.op_Equality(Wrap.FailValue,Wrap.FailValue)
  name.vb: =(FailValue, FailValue)
  fullName: Wrap.FailValue.operator ==(Wrap.FailValue, Wrap.FailValue)
  fullName.vb: Wrap.FailValue.=(Wrap.FailValue, Wrap.FailValue)
  nameWithType: FailValue.operator ==(FailValue, FailValue)
  nameWithType.vb: FailValue.=(FailValue, FailValue)
- uid: Wrap.FailValue.op_Equality*
  name: operator ==
  href: api/Wrap.FailValue.op_Equality.html
  commentId: Overload:Wrap.FailValue.op_Equality
  name.vb: =
  fullName: Wrap.FailValue.operator ==
  fullName.vb: Wrap.FailValue.=
  nameWithType: FailValue.operator ==
  nameWithType.vb: FailValue.=
- uid: Wrap.FailValue.op_Inequality(Wrap.FailValue,Wrap.FailValue)
  name: operator !=(FailValue, FailValue)
  href: api/Wrap.FailValue.op_Inequality.html#Wrap_FailValue_op_Inequality_Wrap_FailValue_Wrap_FailValue_
  commentId: M:Wrap.FailValue.op_Inequality(Wrap.FailValue,Wrap.FailValue)
  name.vb: <>(FailValue, FailValue)
  fullName: Wrap.FailValue.operator !=(Wrap.FailValue, Wrap.FailValue)
  fullName.vb: Wrap.FailValue.<>(Wrap.FailValue, Wrap.FailValue)
  nameWithType: FailValue.operator !=(FailValue, FailValue)
  nameWithType.vb: FailValue.<>(FailValue, FailValue)
- uid: Wrap.FailValue.op_Inequality*
  name: operator !=
  href: api/Wrap.FailValue.op_Inequality.html
  commentId: Overload:Wrap.FailValue.op_Inequality
  name.vb: <>
  fullName: Wrap.FailValue.operator !=
  fullName.vb: Wrap.FailValue.<>
  nameWithType: FailValue.operator !=
  nameWithType.vb: FailValue.<>
- uid: Wrap.GuidExtensions
  name: GuidExtensions
  href: api/Wrap.GuidExtensions.html
  commentId: T:Wrap.GuidExtensions
  fullName: Wrap.GuidExtensions
  nameWithType: GuidExtensions
- uid: Wrap.GuidExtensions.WrapId*
  name: WrapId
  href: api/Wrap.GuidExtensions.WrapId.html
  commentId: Overload:Wrap.GuidExtensions.WrapId
  fullName: Wrap.GuidExtensions.WrapId
  nameWithType: GuidExtensions.WrapId
- uid: Wrap.GuidExtensions.WrapId``1(System.Guid)
  name: WrapId<TId>(Guid)
  href: api/Wrap.GuidExtensions.WrapId.html#Wrap_GuidExtensions_WrapId__1_System_Guid_
  commentId: M:Wrap.GuidExtensions.WrapId``1(System.Guid)
  name.vb: WrapId(Of TId)(Guid)
  fullName: Wrap.GuidExtensions.WrapId<TId>(System.Guid)
  fullName.vb: Wrap.GuidExtensions.WrapId(Of TId)(System.Guid)
  nameWithType: GuidExtensions.WrapId<TId>(Guid)
  nameWithType.vb: GuidExtensions.WrapId(Of TId)(Guid)
- uid: Wrap.GuidId`1
  name: GuidId<TId>
  href: api/Wrap.GuidId-1.html
  commentId: T:Wrap.GuidId`1
  name.vb: GuidId(Of TId)
  fullName: Wrap.GuidId<TId>
  fullName.vb: Wrap.GuidId(Of TId)
  nameWithType: GuidId<TId>
  nameWithType.vb: GuidId(Of TId)
- uid: Wrap.GuidId`1.#ctor
  name: GuidId()
  href: api/Wrap.GuidId-1.-ctor.html#Wrap_GuidId_1__ctor
  commentId: M:Wrap.GuidId`1.#ctor
  name.vb: New()
  fullName: Wrap.GuidId<TId>.GuidId()
  fullName.vb: Wrap.GuidId(Of TId).New()
  nameWithType: GuidId<TId>.GuidId()
  nameWithType.vb: GuidId(Of TId).New()
- uid: Wrap.GuidId`1.#ctor(Wrap.GuidId{`0})
  name: GuidId(GuidId<TId>)
  href: api/Wrap.GuidId-1.-ctor.html#Wrap_GuidId_1__ctor_Wrap_GuidId__0__
  commentId: M:Wrap.GuidId`1.#ctor(Wrap.GuidId{`0})
  name.vb: New(GuidId(Of TId))
  fullName: Wrap.GuidId<TId>.GuidId(Wrap.GuidId<TId>)
  fullName.vb: Wrap.GuidId(Of TId).New(Wrap.GuidId(Of TId))
  nameWithType: GuidId<TId>.GuidId(GuidId<TId>)
  nameWithType.vb: GuidId(Of TId).New(GuidId(Of TId))
- uid: Wrap.GuidId`1.#ctor*
  name: GuidId
  href: api/Wrap.GuidId-1.-ctor.html
  commentId: Overload:Wrap.GuidId`1.#ctor
  name.vb: New
  fullName: Wrap.GuidId<TId>.GuidId
  fullName.vb: Wrap.GuidId(Of TId).New
  nameWithType: GuidId<TId>.GuidId
  nameWithType.vb: GuidId(Of TId).New
- uid: Wrap.GuidId`1.EqualityContract
  name: EqualityContract
  href: api/Wrap.GuidId-1.EqualityContract.html#Wrap_GuidId_1_EqualityContract
  commentId: P:Wrap.GuidId`1.EqualityContract
  fullName: Wrap.GuidId<TId>.EqualityContract
  fullName.vb: Wrap.GuidId(Of TId).EqualityContract
  nameWithType: GuidId<TId>.EqualityContract
  nameWithType.vb: GuidId(Of TId).EqualityContract
- uid: Wrap.GuidId`1.EqualityContract*
  name: EqualityContract
  href: api/Wrap.GuidId-1.EqualityContract.html
  commentId: Overload:Wrap.GuidId`1.EqualityContract
  fullName: Wrap.GuidId<TId>.EqualityContract
  fullName.vb: Wrap.GuidId(Of TId).EqualityContract
  nameWithType: GuidId<TId>.EqualityContract
  nameWithType.vb: GuidId(Of TId).EqualityContract
- uid: Wrap.GuidId`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Wrap.GuidId-1.Equals.html#Wrap_GuidId_1_Equals_System_Object_
  commentId: M:Wrap.GuidId`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.GuidId<TId>.Equals(object?)
  fullName.vb: Wrap.GuidId(Of TId).Equals(Object)
  nameWithType: GuidId<TId>.Equals(object?)
  nameWithType.vb: GuidId(Of TId).Equals(Object)
- uid: Wrap.GuidId`1.Equals(Wrap.GuidId{`0})
  name: Equals(GuidId<TId>?)
  href: api/Wrap.GuidId-1.Equals.html#Wrap_GuidId_1_Equals_Wrap_GuidId__0__
  commentId: M:Wrap.GuidId`1.Equals(Wrap.GuidId{`0})
  name.vb: Equals(GuidId(Of TId))
  fullName: Wrap.GuidId<TId>.Equals(Wrap.GuidId<TId>?)
  fullName.vb: Wrap.GuidId(Of TId).Equals(Wrap.GuidId(Of TId))
  nameWithType: GuidId<TId>.Equals(GuidId<TId>?)
  nameWithType.vb: GuidId(Of TId).Equals(GuidId(Of TId))
- uid: Wrap.GuidId`1.Equals(Wrap.Id{`0,System.Guid})
  name: Equals(Id<TId, Guid>?)
  href: api/Wrap.GuidId-1.Equals.html#Wrap_GuidId_1_Equals_Wrap_Id__0_System_Guid__
  commentId: M:Wrap.GuidId`1.Equals(Wrap.Id{`0,System.Guid})
  name.vb: Equals(Id(Of TId, Guid))
  fullName: Wrap.GuidId<TId>.Equals(Wrap.Id<TId, System.Guid>?)
  fullName.vb: Wrap.GuidId(Of TId).Equals(Wrap.Id(Of TId, System.Guid))
  nameWithType: GuidId<TId>.Equals(Id<TId, Guid>?)
  nameWithType.vb: GuidId(Of TId).Equals(Id(Of TId, Guid))
- uid: Wrap.GuidId`1.Equals*
  name: Equals
  href: api/Wrap.GuidId-1.Equals.html
  commentId: Overload:Wrap.GuidId`1.Equals
  fullName: Wrap.GuidId<TId>.Equals
  fullName.vb: Wrap.GuidId(Of TId).Equals
  nameWithType: GuidId<TId>.Equals
  nameWithType.vb: GuidId(Of TId).Equals
- uid: Wrap.GuidId`1.GetHashCode
  name: GetHashCode()
  href: api/Wrap.GuidId-1.GetHashCode.html#Wrap_GuidId_1_GetHashCode
  commentId: M:Wrap.GuidId`1.GetHashCode
  fullName: Wrap.GuidId<TId>.GetHashCode()
  fullName.vb: Wrap.GuidId(Of TId).GetHashCode()
  nameWithType: GuidId<TId>.GetHashCode()
  nameWithType.vb: GuidId(Of TId).GetHashCode()
- uid: Wrap.GuidId`1.GetHashCode*
  name: GetHashCode
  href: api/Wrap.GuidId-1.GetHashCode.html
  commentId: Overload:Wrap.GuidId`1.GetHashCode
  fullName: Wrap.GuidId<TId>.GetHashCode
  fullName.vb: Wrap.GuidId(Of TId).GetHashCode
  nameWithType: GuidId<TId>.GetHashCode
  nameWithType.vb: GuidId(Of TId).GetHashCode
- uid: Wrap.GuidId`1.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Wrap.GuidId-1.PrintMembers.html#Wrap_GuidId_1_PrintMembers_System_Text_StringBuilder_
  commentId: M:Wrap.GuidId`1.PrintMembers(System.Text.StringBuilder)
  fullName: Wrap.GuidId<TId>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Wrap.GuidId(Of TId).PrintMembers(System.Text.StringBuilder)
  nameWithType: GuidId<TId>.PrintMembers(StringBuilder)
  nameWithType.vb: GuidId(Of TId).PrintMembers(StringBuilder)
- uid: Wrap.GuidId`1.PrintMembers*
  name: PrintMembers
  href: api/Wrap.GuidId-1.PrintMembers.html
  commentId: Overload:Wrap.GuidId`1.PrintMembers
  fullName: Wrap.GuidId<TId>.PrintMembers
  fullName.vb: Wrap.GuidId(Of TId).PrintMembers
  nameWithType: GuidId<TId>.PrintMembers
  nameWithType.vb: GuidId(Of TId).PrintMembers
- uid: Wrap.GuidId`1.ToString
  name: ToString()
  href: api/Wrap.GuidId-1.ToString.html#Wrap_GuidId_1_ToString
  commentId: M:Wrap.GuidId`1.ToString
  fullName: Wrap.GuidId<TId>.ToString()
  fullName.vb: Wrap.GuidId(Of TId).ToString()
  nameWithType: GuidId<TId>.ToString()
  nameWithType.vb: GuidId(Of TId).ToString()
- uid: Wrap.GuidId`1.ToString*
  name: ToString
  href: api/Wrap.GuidId-1.ToString.html
  commentId: Overload:Wrap.GuidId`1.ToString
  fullName: Wrap.GuidId<TId>.ToString
  fullName.vb: Wrap.GuidId(Of TId).ToString
  nameWithType: GuidId<TId>.ToString
  nameWithType.vb: GuidId(Of TId).ToString
- uid: Wrap.GuidId`1.op_Equality(Wrap.GuidId{`0},Wrap.GuidId{`0})
  name: operator ==(GuidId<TId>?, GuidId<TId>?)
  href: api/Wrap.GuidId-1.op_Equality.html#Wrap_GuidId_1_op_Equality_Wrap_GuidId__0__Wrap_GuidId__0__
  commentId: M:Wrap.GuidId`1.op_Equality(Wrap.GuidId{`0},Wrap.GuidId{`0})
  name.vb: =(GuidId(Of TId), GuidId(Of TId))
  fullName: Wrap.GuidId<TId>.operator ==(Wrap.GuidId<TId>?, Wrap.GuidId<TId>?)
  fullName.vb: Wrap.GuidId(Of TId).=(Wrap.GuidId(Of TId), Wrap.GuidId(Of TId))
  nameWithType: GuidId<TId>.operator ==(GuidId<TId>?, GuidId<TId>?)
  nameWithType.vb: GuidId(Of TId).=(GuidId(Of TId), GuidId(Of TId))
- uid: Wrap.GuidId`1.op_Equality*
  name: operator ==
  href: api/Wrap.GuidId-1.op_Equality.html
  commentId: Overload:Wrap.GuidId`1.op_Equality
  name.vb: =
  fullName: Wrap.GuidId<TId>.operator ==
  fullName.vb: Wrap.GuidId(Of TId).=
  nameWithType: GuidId<TId>.operator ==
  nameWithType.vb: GuidId(Of TId).=
- uid: Wrap.GuidId`1.op_Inequality(Wrap.GuidId{`0},Wrap.GuidId{`0})
  name: operator !=(GuidId<TId>?, GuidId<TId>?)
  href: api/Wrap.GuidId-1.op_Inequality.html#Wrap_GuidId_1_op_Inequality_Wrap_GuidId__0__Wrap_GuidId__0__
  commentId: M:Wrap.GuidId`1.op_Inequality(Wrap.GuidId{`0},Wrap.GuidId{`0})
  name.vb: <>(GuidId(Of TId), GuidId(Of TId))
  fullName: Wrap.GuidId<TId>.operator !=(Wrap.GuidId<TId>?, Wrap.GuidId<TId>?)
  fullName.vb: Wrap.GuidId(Of TId).<>(Wrap.GuidId(Of TId), Wrap.GuidId(Of TId))
  nameWithType: GuidId<TId>.operator !=(GuidId<TId>?, GuidId<TId>?)
  nameWithType.vb: GuidId(Of TId).<>(GuidId(Of TId), GuidId(Of TId))
- uid: Wrap.GuidId`1.op_Inequality*
  name: operator !=
  href: api/Wrap.GuidId-1.op_Inequality.html
  commentId: Overload:Wrap.GuidId`1.op_Inequality
  name.vb: <>
  fullName: Wrap.GuidId<TId>.operator !=
  fullName.vb: Wrap.GuidId(Of TId).<>
  nameWithType: GuidId<TId>.operator !=
  nameWithType.vb: GuidId(Of TId).<>
- uid: Wrap.I
  name: I
  href: api/Wrap.I.html
  commentId: T:Wrap.I
  fullName: Wrap.I
  nameWithType: I
- uid: Wrap.I.Wrap*
  name: Wrap
  href: api/Wrap.I.Wrap.html
  commentId: Overload:Wrap.I.Wrap
  fullName: Wrap.I.Wrap
  nameWithType: I.Wrap
- uid: Wrap.I.Wrap``2(``1)
  name: Wrap<TId, TValue>(TValue)
  href: api/Wrap.I.Wrap.html#Wrap_I_Wrap__2___1_
  commentId: M:Wrap.I.Wrap``2(``1)
  name.vb: Wrap(Of TId, TValue)(TValue)
  fullName: Wrap.I.Wrap<TId, TValue>(TValue)
  fullName.vb: Wrap.I.Wrap(Of TId, TValue)(TValue)
  nameWithType: I.Wrap<TId, TValue>(TValue)
  nameWithType.vb: I.Wrap(Of TId, TValue)(TValue)
- uid: Wrap.IEither`2
  name: IEither<TLeft, TRight>
  href: api/Wrap.IEither-2.html
  commentId: T:Wrap.IEither`2
  name.vb: IEither(Of TLeft, TRight)
  fullName: Wrap.IEither<TLeft, TRight>
  fullName.vb: Wrap.IEither(Of TLeft, TRight)
  nameWithType: IEither<TLeft, TRight>
  nameWithType.vb: IEither(Of TLeft, TRight)
- uid: Wrap.IEither`2.GetEnumerator
  name: GetEnumerator()
  href: api/Wrap.IEither-2.GetEnumerator.html#Wrap_IEither_2_GetEnumerator
  commentId: M:Wrap.IEither`2.GetEnumerator
  fullName: Wrap.IEither<TLeft, TRight>.GetEnumerator()
  fullName.vb: Wrap.IEither(Of TLeft, TRight).GetEnumerator()
  nameWithType: IEither<TLeft, TRight>.GetEnumerator()
  nameWithType.vb: IEither(Of TLeft, TRight).GetEnumerator()
- uid: Wrap.IEither`2.GetEnumerator*
  name: GetEnumerator
  href: api/Wrap.IEither-2.GetEnumerator.html
  commentId: Overload:Wrap.IEither`2.GetEnumerator
  fullName: Wrap.IEither<TLeft, TRight>.GetEnumerator
  fullName.vb: Wrap.IEither(Of TLeft, TRight).GetEnumerator
  nameWithType: IEither<TLeft, TRight>.GetEnumerator
  nameWithType.vb: IEither(Of TLeft, TRight).GetEnumerator
- uid: Wrap.IEither`3
  name: IEither<TEither, TLeft, TRight>
  href: api/Wrap.IEither-3.html
  commentId: T:Wrap.IEither`3
  name.vb: IEither(Of TEither, TLeft, TRight)
  fullName: Wrap.IEither<TEither, TLeft, TRight>
  fullName.vb: Wrap.IEither(Of TEither, TLeft, TRight)
  nameWithType: IEither<TEither, TLeft, TRight>
  nameWithType.vb: IEither(Of TEither, TLeft, TRight)
- uid: Wrap.IEither`3.AsTask
  name: AsTask()
  href: api/Wrap.IEither-3.AsTask.html#Wrap_IEither_3_AsTask
  commentId: M:Wrap.IEither`3.AsTask
  fullName: Wrap.IEither<TEither, TLeft, TRight>.AsTask()
  fullName.vb: Wrap.IEither(Of TEither, TLeft, TRight).AsTask()
  nameWithType: IEither<TEither, TLeft, TRight>.AsTask()
  nameWithType.vb: IEither(Of TEither, TLeft, TRight).AsTask()
- uid: Wrap.IEither`3.AsTask*
  name: AsTask
  href: api/Wrap.IEither-3.AsTask.html
  commentId: Overload:Wrap.IEither`3.AsTask
  fullName: Wrap.IEither<TEither, TLeft, TRight>.AsTask
  fullName.vb: Wrap.IEither(Of TEither, TLeft, TRight).AsTask
  nameWithType: IEither<TEither, TLeft, TRight>.AsTask
  nameWithType.vb: IEither(Of TEither, TLeft, TRight).AsTask
- uid: Wrap.ILeft`2
  name: ILeft<TLeft, TRight>
  href: api/Wrap.ILeft-2.html
  commentId: T:Wrap.ILeft`2
  name.vb: ILeft(Of TLeft, TRight)
  fullName: Wrap.ILeft<TLeft, TRight>
  fullName.vb: Wrap.ILeft(Of TLeft, TRight)
  nameWithType: ILeft<TLeft, TRight>
  nameWithType.vb: ILeft(Of TLeft, TRight)
- uid: Wrap.IRight`2
  name: IRight<TLeft, TRight>
  href: api/Wrap.IRight-2.html
  commentId: T:Wrap.IRight`2
  name.vb: IRight(Of TLeft, TRight)
  fullName: Wrap.IRight<TLeft, TRight>
  fullName.vb: Wrap.IRight(Of TLeft, TRight)
  nameWithType: IRight<TLeft, TRight>
  nameWithType.vb: IRight(Of TLeft, TRight)
- uid: Wrap.IUnion
  name: IUnion
  href: api/Wrap.IUnion.html
  commentId: T:Wrap.IUnion
  fullName: Wrap.IUnion
  nameWithType: IUnion
- uid: Wrap.IUnion.Value
  name: Value
  href: api/Wrap.IUnion.Value.html#Wrap_IUnion_Value
  commentId: P:Wrap.IUnion.Value
  fullName: Wrap.IUnion.Value
  nameWithType: IUnion.Value
- uid: Wrap.IUnion.Value*
  name: Value
  href: api/Wrap.IUnion.Value.html
  commentId: Overload:Wrap.IUnion.Value
  fullName: Wrap.IUnion.Value
  nameWithType: IUnion.Value
- uid: Wrap.IUnion`1
  name: IUnion<T>
  href: api/Wrap.IUnion-1.html
  commentId: T:Wrap.IUnion`1
  name.vb: IUnion(Of T)
  fullName: Wrap.IUnion<T>
  fullName.vb: Wrap.IUnion(Of T)
  nameWithType: IUnion<T>
  nameWithType.vb: IUnion(Of T)
- uid: Wrap.IUnion`1.Value
  name: Value
  href: api/Wrap.IUnion-1.Value.html#Wrap_IUnion_1_Value
  commentId: P:Wrap.IUnion`1.Value
  fullName: Wrap.IUnion<T>.Value
  fullName.vb: Wrap.IUnion(Of T).Value
  nameWithType: IUnion<T>.Value
  nameWithType.vb: IUnion(Of T).Value
- uid: Wrap.IUnion`1.Value*
  name: Value
  href: api/Wrap.IUnion-1.Value.html
  commentId: Overload:Wrap.IUnion`1.Value
  fullName: Wrap.IUnion<T>.Value
  fullName.vb: Wrap.IUnion(Of T).Value
  nameWithType: IUnion<T>.Value
  nameWithType.vb: IUnion(Of T).Value
- uid: Wrap.IWithId`2
  name: IWithId<TId, TValue>
  href: api/Wrap.IWithId-2.html
  commentId: T:Wrap.IWithId`2
  name.vb: IWithId(Of TId, TValue)
  fullName: Wrap.IWithId<TId, TValue>
  fullName.vb: Wrap.IWithId(Of TId, TValue)
  nameWithType: IWithId<TId, TValue>
  nameWithType.vb: IWithId(Of TId, TValue)
- uid: Wrap.IWithId`2.Id
  name: Id
  href: api/Wrap.IWithId-2.Id.html#Wrap_IWithId_2_Id
  commentId: P:Wrap.IWithId`2.Id
  fullName: Wrap.IWithId<TId, TValue>.Id
  fullName.vb: Wrap.IWithId(Of TId, TValue).Id
  nameWithType: IWithId<TId, TValue>.Id
  nameWithType.vb: IWithId(Of TId, TValue).Id
- uid: Wrap.IWithId`2.Id*
  name: Id
  href: api/Wrap.IWithId-2.Id.html
  commentId: Overload:Wrap.IWithId`2.Id
  fullName: Wrap.IWithId<TId, TValue>.Id
  fullName.vb: Wrap.IWithId(Of TId, TValue).Id
  nameWithType: IWithId<TId, TValue>.Id
  nameWithType.vb: IWithId(Of TId, TValue).Id
- uid: Wrap.Id`2
  name: Id<TId, TValue>
  href: api/Wrap.Id-2.html
  commentId: T:Wrap.Id`2
  name.vb: Id(Of TId, TValue)
  fullName: Wrap.Id<TId, TValue>
  fullName.vb: Wrap.Id(Of TId, TValue)
  nameWithType: Id<TId, TValue>
  nameWithType.vb: Id(Of TId, TValue)
- uid: Wrap.Id`2.#ctor(Wrap.Id{`0,`1})
  name: Id(Id<TId, TValue>)
  href: api/Wrap.Id-2.-ctor.html#Wrap_Id_2__ctor_Wrap_Id__0__1__
  commentId: M:Wrap.Id`2.#ctor(Wrap.Id{`0,`1})
  name.vb: New(Id(Of TId, TValue))
  fullName: Wrap.Id<TId, TValue>.Id(Wrap.Id<TId, TValue>)
  fullName.vb: Wrap.Id(Of TId, TValue).New(Wrap.Id(Of TId, TValue))
  nameWithType: Id<TId, TValue>.Id(Id<TId, TValue>)
  nameWithType.vb: Id(Of TId, TValue).New(Id(Of TId, TValue))
- uid: Wrap.Id`2.#ctor(`1)
  name: Id(TValue)
  href: api/Wrap.Id-2.-ctor.html#Wrap_Id_2__ctor__1_
  commentId: M:Wrap.Id`2.#ctor(`1)
  name.vb: New(TValue)
  fullName: Wrap.Id<TId, TValue>.Id(TValue)
  fullName.vb: Wrap.Id(Of TId, TValue).New(TValue)
  nameWithType: Id<TId, TValue>.Id(TValue)
  nameWithType.vb: Id(Of TId, TValue).New(TValue)
- uid: Wrap.Id`2.#ctor*
  name: Id
  href: api/Wrap.Id-2.-ctor.html
  commentId: Overload:Wrap.Id`2.#ctor
  name.vb: New
  fullName: Wrap.Id<TId, TValue>.Id
  fullName.vb: Wrap.Id(Of TId, TValue).New
  nameWithType: Id<TId, TValue>.Id
  nameWithType.vb: Id(Of TId, TValue).New
- uid: Wrap.Id`2.EqualityContract
  name: EqualityContract
  href: api/Wrap.Id-2.EqualityContract.html#Wrap_Id_2_EqualityContract
  commentId: P:Wrap.Id`2.EqualityContract
  fullName: Wrap.Id<TId, TValue>.EqualityContract
  fullName.vb: Wrap.Id(Of TId, TValue).EqualityContract
  nameWithType: Id<TId, TValue>.EqualityContract
  nameWithType.vb: Id(Of TId, TValue).EqualityContract
- uid: Wrap.Id`2.EqualityContract*
  name: EqualityContract
  href: api/Wrap.Id-2.EqualityContract.html
  commentId: Overload:Wrap.Id`2.EqualityContract
  fullName: Wrap.Id<TId, TValue>.EqualityContract
  fullName.vb: Wrap.Id(Of TId, TValue).EqualityContract
  nameWithType: Id<TId, TValue>.EqualityContract
  nameWithType.vb: Id(Of TId, TValue).EqualityContract
- uid: Wrap.Id`2.Equals(System.Object)
  name: Equals(object?)
  href: api/Wrap.Id-2.Equals.html#Wrap_Id_2_Equals_System_Object_
  commentId: M:Wrap.Id`2.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.Id<TId, TValue>.Equals(object?)
  fullName.vb: Wrap.Id(Of TId, TValue).Equals(Object)
  nameWithType: Id<TId, TValue>.Equals(object?)
  nameWithType.vb: Id(Of TId, TValue).Equals(Object)
- uid: Wrap.Id`2.Equals(Wrap.Id{`0,`1})
  name: Equals(Id<TId, TValue>?)
  href: api/Wrap.Id-2.Equals.html#Wrap_Id_2_Equals_Wrap_Id__0__1__
  commentId: M:Wrap.Id`2.Equals(Wrap.Id{`0,`1})
  name.vb: Equals(Id(Of TId, TValue))
  fullName: Wrap.Id<TId, TValue>.Equals(Wrap.Id<TId, TValue>?)
  fullName.vb: Wrap.Id(Of TId, TValue).Equals(Wrap.Id(Of TId, TValue))
  nameWithType: Id<TId, TValue>.Equals(Id<TId, TValue>?)
  nameWithType.vb: Id(Of TId, TValue).Equals(Id(Of TId, TValue))
- uid: Wrap.Id`2.Equals(Wrap.Union{`0,`1})
  name: Equals(Union<TId, TValue>?)
  href: api/Wrap.Id-2.Equals.html#Wrap_Id_2_Equals_Wrap_Union__0__1__
  commentId: M:Wrap.Id`2.Equals(Wrap.Union{`0,`1})
  name.vb: Equals(Union(Of TId, TValue))
  fullName: Wrap.Id<TId, TValue>.Equals(Wrap.Union<TId, TValue>?)
  fullName.vb: Wrap.Id(Of TId, TValue).Equals(Wrap.Union(Of TId, TValue))
  nameWithType: Id<TId, TValue>.Equals(Union<TId, TValue>?)
  nameWithType.vb: Id(Of TId, TValue).Equals(Union(Of TId, TValue))
- uid: Wrap.Id`2.Equals*
  name: Equals
  href: api/Wrap.Id-2.Equals.html
  commentId: Overload:Wrap.Id`2.Equals
  fullName: Wrap.Id<TId, TValue>.Equals
  fullName.vb: Wrap.Id(Of TId, TValue).Equals
  nameWithType: Id<TId, TValue>.Equals
  nameWithType.vb: Id(Of TId, TValue).Equals
- uid: Wrap.Id`2.GetHashCode
  name: GetHashCode()
  href: api/Wrap.Id-2.GetHashCode.html#Wrap_Id_2_GetHashCode
  commentId: M:Wrap.Id`2.GetHashCode
  fullName: Wrap.Id<TId, TValue>.GetHashCode()
  fullName.vb: Wrap.Id(Of TId, TValue).GetHashCode()
  nameWithType: Id<TId, TValue>.GetHashCode()
  nameWithType.vb: Id(Of TId, TValue).GetHashCode()
- uid: Wrap.Id`2.GetHashCode*
  name: GetHashCode
  href: api/Wrap.Id-2.GetHashCode.html
  commentId: Overload:Wrap.Id`2.GetHashCode
  fullName: Wrap.Id<TId, TValue>.GetHashCode
  fullName.vb: Wrap.Id(Of TId, TValue).GetHashCode
  nameWithType: Id<TId, TValue>.GetHashCode
  nameWithType.vb: Id(Of TId, TValue).GetHashCode
- uid: Wrap.Id`2.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Wrap.Id-2.PrintMembers.html#Wrap_Id_2_PrintMembers_System_Text_StringBuilder_
  commentId: M:Wrap.Id`2.PrintMembers(System.Text.StringBuilder)
  fullName: Wrap.Id<TId, TValue>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Wrap.Id(Of TId, TValue).PrintMembers(System.Text.StringBuilder)
  nameWithType: Id<TId, TValue>.PrintMembers(StringBuilder)
  nameWithType.vb: Id(Of TId, TValue).PrintMembers(StringBuilder)
- uid: Wrap.Id`2.PrintMembers*
  name: PrintMembers
  href: api/Wrap.Id-2.PrintMembers.html
  commentId: Overload:Wrap.Id`2.PrintMembers
  fullName: Wrap.Id<TId, TValue>.PrintMembers
  fullName.vb: Wrap.Id(Of TId, TValue).PrintMembers
  nameWithType: Id<TId, TValue>.PrintMembers
  nameWithType.vb: Id(Of TId, TValue).PrintMembers
- uid: Wrap.Id`2.ToString
  name: ToString()
  href: api/Wrap.Id-2.ToString.html#Wrap_Id_2_ToString
  commentId: M:Wrap.Id`2.ToString
  fullName: Wrap.Id<TId, TValue>.ToString()
  fullName.vb: Wrap.Id(Of TId, TValue).ToString()
  nameWithType: Id<TId, TValue>.ToString()
  nameWithType.vb: Id(Of TId, TValue).ToString()
- uid: Wrap.Id`2.ToString*
  name: ToString
  href: api/Wrap.Id-2.ToString.html
  commentId: Overload:Wrap.Id`2.ToString
  fullName: Wrap.Id<TId, TValue>.ToString
  fullName.vb: Wrap.Id(Of TId, TValue).ToString
  nameWithType: Id<TId, TValue>.ToString
  nameWithType.vb: Id(Of TId, TValue).ToString
- uid: Wrap.Id`2.op_Equality(Wrap.Id{`0,`1},Wrap.Id{`0,`1})
  name: operator ==(Id<TId, TValue>?, Id<TId, TValue>?)
  href: api/Wrap.Id-2.op_Equality.html#Wrap_Id_2_op_Equality_Wrap_Id__0__1__Wrap_Id__0__1__
  commentId: M:Wrap.Id`2.op_Equality(Wrap.Id{`0,`1},Wrap.Id{`0,`1})
  name.vb: =(Id(Of TId, TValue), Id(Of TId, TValue))
  fullName: Wrap.Id<TId, TValue>.operator ==(Wrap.Id<TId, TValue>?, Wrap.Id<TId, TValue>?)
  fullName.vb: Wrap.Id(Of TId, TValue).=(Wrap.Id(Of TId, TValue), Wrap.Id(Of TId, TValue))
  nameWithType: Id<TId, TValue>.operator ==(Id<TId, TValue>?, Id<TId, TValue>?)
  nameWithType.vb: Id(Of TId, TValue).=(Id(Of TId, TValue), Id(Of TId, TValue))
- uid: Wrap.Id`2.op_Equality*
  name: operator ==
  href: api/Wrap.Id-2.op_Equality.html
  commentId: Overload:Wrap.Id`2.op_Equality
  name.vb: =
  fullName: Wrap.Id<TId, TValue>.operator ==
  fullName.vb: Wrap.Id(Of TId, TValue).=
  nameWithType: Id<TId, TValue>.operator ==
  nameWithType.vb: Id(Of TId, TValue).=
- uid: Wrap.Id`2.op_Inequality(Wrap.Id{`0,`1},Wrap.Id{`0,`1})
  name: operator !=(Id<TId, TValue>?, Id<TId, TValue>?)
  href: api/Wrap.Id-2.op_Inequality.html#Wrap_Id_2_op_Inequality_Wrap_Id__0__1__Wrap_Id__0__1__
  commentId: M:Wrap.Id`2.op_Inequality(Wrap.Id{`0,`1},Wrap.Id{`0,`1})
  name.vb: <>(Id(Of TId, TValue), Id(Of TId, TValue))
  fullName: Wrap.Id<TId, TValue>.operator !=(Wrap.Id<TId, TValue>?, Wrap.Id<TId, TValue>?)
  fullName.vb: Wrap.Id(Of TId, TValue).<>(Wrap.Id(Of TId, TValue), Wrap.Id(Of TId, TValue))
  nameWithType: Id<TId, TValue>.operator !=(Id<TId, TValue>?, Id<TId, TValue>?)
  nameWithType.vb: Id(Of TId, TValue).<>(Id(Of TId, TValue), Id(Of TId, TValue))
- uid: Wrap.Id`2.op_Inequality*
  name: operator !=
  href: api/Wrap.Id-2.op_Inequality.html
  commentId: Overload:Wrap.Id`2.op_Inequality
  name.vb: <>
  fullName: Wrap.Id<TId, TValue>.operator !=
  fullName.vb: Wrap.Id(Of TId, TValue).<>
  nameWithType: Id<TId, TValue>.operator !=
  nameWithType.vb: Id(Of TId, TValue).<>
- uid: Wrap.IntExtensions
  name: IntExtensions
  href: api/Wrap.IntExtensions.html
  commentId: T:Wrap.IntExtensions
  fullName: Wrap.IntExtensions
  nameWithType: IntExtensions
- uid: Wrap.IntExtensions.WrapId*
  name: WrapId
  href: api/Wrap.IntExtensions.WrapId.html
  commentId: Overload:Wrap.IntExtensions.WrapId
  fullName: Wrap.IntExtensions.WrapId
  nameWithType: IntExtensions.WrapId
- uid: Wrap.IntExtensions.WrapId``1(System.Int32)
  name: WrapId<TId>(int)
  href: api/Wrap.IntExtensions.WrapId.html#Wrap_IntExtensions_WrapId__1_System_Int32_
  commentId: M:Wrap.IntExtensions.WrapId``1(System.Int32)
  name.vb: WrapId(Of TId)(Integer)
  fullName: Wrap.IntExtensions.WrapId<TId>(int)
  fullName.vb: Wrap.IntExtensions.WrapId(Of TId)(Integer)
  nameWithType: IntExtensions.WrapId<TId>(int)
  nameWithType.vb: IntExtensions.WrapId(Of TId)(Integer)
- uid: Wrap.IntId`1
  name: IntId<TId>
  href: api/Wrap.IntId-1.html
  commentId: T:Wrap.IntId`1
  name.vb: IntId(Of TId)
  fullName: Wrap.IntId<TId>
  fullName.vb: Wrap.IntId(Of TId)
  nameWithType: IntId<TId>
  nameWithType.vb: IntId(Of TId)
- uid: Wrap.IntId`1.#ctor
  name: IntId()
  href: api/Wrap.IntId-1.-ctor.html#Wrap_IntId_1__ctor
  commentId: M:Wrap.IntId`1.#ctor
  name.vb: New()
  fullName: Wrap.IntId<TId>.IntId()
  fullName.vb: Wrap.IntId(Of TId).New()
  nameWithType: IntId<TId>.IntId()
  nameWithType.vb: IntId(Of TId).New()
- uid: Wrap.IntId`1.#ctor(Wrap.IntId{`0})
  name: IntId(IntId<TId>)
  href: api/Wrap.IntId-1.-ctor.html#Wrap_IntId_1__ctor_Wrap_IntId__0__
  commentId: M:Wrap.IntId`1.#ctor(Wrap.IntId{`0})
  name.vb: New(IntId(Of TId))
  fullName: Wrap.IntId<TId>.IntId(Wrap.IntId<TId>)
  fullName.vb: Wrap.IntId(Of TId).New(Wrap.IntId(Of TId))
  nameWithType: IntId<TId>.IntId(IntId<TId>)
  nameWithType.vb: IntId(Of TId).New(IntId(Of TId))
- uid: Wrap.IntId`1.#ctor*
  name: IntId
  href: api/Wrap.IntId-1.-ctor.html
  commentId: Overload:Wrap.IntId`1.#ctor
  name.vb: New
  fullName: Wrap.IntId<TId>.IntId
  fullName.vb: Wrap.IntId(Of TId).New
  nameWithType: IntId<TId>.IntId
  nameWithType.vb: IntId(Of TId).New
- uid: Wrap.IntId`1.EqualityContract
  name: EqualityContract
  href: api/Wrap.IntId-1.EqualityContract.html#Wrap_IntId_1_EqualityContract
  commentId: P:Wrap.IntId`1.EqualityContract
  fullName: Wrap.IntId<TId>.EqualityContract
  fullName.vb: Wrap.IntId(Of TId).EqualityContract
  nameWithType: IntId<TId>.EqualityContract
  nameWithType.vb: IntId(Of TId).EqualityContract
- uid: Wrap.IntId`1.EqualityContract*
  name: EqualityContract
  href: api/Wrap.IntId-1.EqualityContract.html
  commentId: Overload:Wrap.IntId`1.EqualityContract
  fullName: Wrap.IntId<TId>.EqualityContract
  fullName.vb: Wrap.IntId(Of TId).EqualityContract
  nameWithType: IntId<TId>.EqualityContract
  nameWithType.vb: IntId(Of TId).EqualityContract
- uid: Wrap.IntId`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Wrap.IntId-1.Equals.html#Wrap_IntId_1_Equals_System_Object_
  commentId: M:Wrap.IntId`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.IntId<TId>.Equals(object?)
  fullName.vb: Wrap.IntId(Of TId).Equals(Object)
  nameWithType: IntId<TId>.Equals(object?)
  nameWithType.vb: IntId(Of TId).Equals(Object)
- uid: Wrap.IntId`1.Equals(Wrap.Id{`0,System.Int32})
  name: Equals(Id<TId, int>?)
  href: api/Wrap.IntId-1.Equals.html#Wrap_IntId_1_Equals_Wrap_Id__0_System_Int32__
  commentId: M:Wrap.IntId`1.Equals(Wrap.Id{`0,System.Int32})
  name.vb: Equals(Id(Of TId, Integer))
  fullName: Wrap.IntId<TId>.Equals(Wrap.Id<TId, int>?)
  fullName.vb: Wrap.IntId(Of TId).Equals(Wrap.Id(Of TId, Integer))
  nameWithType: IntId<TId>.Equals(Id<TId, int>?)
  nameWithType.vb: IntId(Of TId).Equals(Id(Of TId, Integer))
- uid: Wrap.IntId`1.Equals(Wrap.IntId{`0})
  name: Equals(IntId<TId>?)
  href: api/Wrap.IntId-1.Equals.html#Wrap_IntId_1_Equals_Wrap_IntId__0__
  commentId: M:Wrap.IntId`1.Equals(Wrap.IntId{`0})
  name.vb: Equals(IntId(Of TId))
  fullName: Wrap.IntId<TId>.Equals(Wrap.IntId<TId>?)
  fullName.vb: Wrap.IntId(Of TId).Equals(Wrap.IntId(Of TId))
  nameWithType: IntId<TId>.Equals(IntId<TId>?)
  nameWithType.vb: IntId(Of TId).Equals(IntId(Of TId))
- uid: Wrap.IntId`1.Equals*
  name: Equals
  href: api/Wrap.IntId-1.Equals.html
  commentId: Overload:Wrap.IntId`1.Equals
  fullName: Wrap.IntId<TId>.Equals
  fullName.vb: Wrap.IntId(Of TId).Equals
  nameWithType: IntId<TId>.Equals
  nameWithType.vb: IntId(Of TId).Equals
- uid: Wrap.IntId`1.GetHashCode
  name: GetHashCode()
  href: api/Wrap.IntId-1.GetHashCode.html#Wrap_IntId_1_GetHashCode
  commentId: M:Wrap.IntId`1.GetHashCode
  fullName: Wrap.IntId<TId>.GetHashCode()
  fullName.vb: Wrap.IntId(Of TId).GetHashCode()
  nameWithType: IntId<TId>.GetHashCode()
  nameWithType.vb: IntId(Of TId).GetHashCode()
- uid: Wrap.IntId`1.GetHashCode*
  name: GetHashCode
  href: api/Wrap.IntId-1.GetHashCode.html
  commentId: Overload:Wrap.IntId`1.GetHashCode
  fullName: Wrap.IntId<TId>.GetHashCode
  fullName.vb: Wrap.IntId(Of TId).GetHashCode
  nameWithType: IntId<TId>.GetHashCode
  nameWithType.vb: IntId(Of TId).GetHashCode
- uid: Wrap.IntId`1.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Wrap.IntId-1.PrintMembers.html#Wrap_IntId_1_PrintMembers_System_Text_StringBuilder_
  commentId: M:Wrap.IntId`1.PrintMembers(System.Text.StringBuilder)
  fullName: Wrap.IntId<TId>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Wrap.IntId(Of TId).PrintMembers(System.Text.StringBuilder)
  nameWithType: IntId<TId>.PrintMembers(StringBuilder)
  nameWithType.vb: IntId(Of TId).PrintMembers(StringBuilder)
- uid: Wrap.IntId`1.PrintMembers*
  name: PrintMembers
  href: api/Wrap.IntId-1.PrintMembers.html
  commentId: Overload:Wrap.IntId`1.PrintMembers
  fullName: Wrap.IntId<TId>.PrintMembers
  fullName.vb: Wrap.IntId(Of TId).PrintMembers
  nameWithType: IntId<TId>.PrintMembers
  nameWithType.vb: IntId(Of TId).PrintMembers
- uid: Wrap.IntId`1.ToString
  name: ToString()
  href: api/Wrap.IntId-1.ToString.html#Wrap_IntId_1_ToString
  commentId: M:Wrap.IntId`1.ToString
  fullName: Wrap.IntId<TId>.ToString()
  fullName.vb: Wrap.IntId(Of TId).ToString()
  nameWithType: IntId<TId>.ToString()
  nameWithType.vb: IntId(Of TId).ToString()
- uid: Wrap.IntId`1.ToString*
  name: ToString
  href: api/Wrap.IntId-1.ToString.html
  commentId: Overload:Wrap.IntId`1.ToString
  fullName: Wrap.IntId<TId>.ToString
  fullName.vb: Wrap.IntId(Of TId).ToString
  nameWithType: IntId<TId>.ToString
  nameWithType.vb: IntId(Of TId).ToString
- uid: Wrap.IntId`1.op_Equality(Wrap.IntId{`0},Wrap.IntId{`0})
  name: operator ==(IntId<TId>?, IntId<TId>?)
  href: api/Wrap.IntId-1.op_Equality.html#Wrap_IntId_1_op_Equality_Wrap_IntId__0__Wrap_IntId__0__
  commentId: M:Wrap.IntId`1.op_Equality(Wrap.IntId{`0},Wrap.IntId{`0})
  name.vb: =(IntId(Of TId), IntId(Of TId))
  fullName: Wrap.IntId<TId>.operator ==(Wrap.IntId<TId>?, Wrap.IntId<TId>?)
  fullName.vb: Wrap.IntId(Of TId).=(Wrap.IntId(Of TId), Wrap.IntId(Of TId))
  nameWithType: IntId<TId>.operator ==(IntId<TId>?, IntId<TId>?)
  nameWithType.vb: IntId(Of TId).=(IntId(Of TId), IntId(Of TId))
- uid: Wrap.IntId`1.op_Equality*
  name: operator ==
  href: api/Wrap.IntId-1.op_Equality.html
  commentId: Overload:Wrap.IntId`1.op_Equality
  name.vb: =
  fullName: Wrap.IntId<TId>.operator ==
  fullName.vb: Wrap.IntId(Of TId).=
  nameWithType: IntId<TId>.operator ==
  nameWithType.vb: IntId(Of TId).=
- uid: Wrap.IntId`1.op_Inequality(Wrap.IntId{`0},Wrap.IntId{`0})
  name: operator !=(IntId<TId>?, IntId<TId>?)
  href: api/Wrap.IntId-1.op_Inequality.html#Wrap_IntId_1_op_Inequality_Wrap_IntId__0__Wrap_IntId__0__
  commentId: M:Wrap.IntId`1.op_Inequality(Wrap.IntId{`0},Wrap.IntId{`0})
  name.vb: <>(IntId(Of TId), IntId(Of TId))
  fullName: Wrap.IntId<TId>.operator !=(Wrap.IntId<TId>?, Wrap.IntId<TId>?)
  fullName.vb: Wrap.IntId(Of TId).<>(Wrap.IntId(Of TId), Wrap.IntId(Of TId))
  nameWithType: IntId<TId>.operator !=(IntId<TId>?, IntId<TId>?)
  nameWithType.vb: IntId(Of TId).<>(IntId(Of TId), IntId(Of TId))
- uid: Wrap.IntId`1.op_Inequality*
  name: operator !=
  href: api/Wrap.IntId-1.op_Inequality.html
  commentId: Overload:Wrap.IntId`1.op_Inequality
  name.vb: <>
  fullName: Wrap.IntId<TId>.operator !=
  fullName.vb: Wrap.IntId(Of TId).<>
  nameWithType: IntId<TId>.operator !=
  nameWithType.vb: IntId(Of TId).<>
- uid: Wrap.Json
  name: Wrap.Json
  href: api/Wrap.Json.html
  commentId: N:Wrap.Json
  fullName: Wrap.Json
  nameWithType: Wrap.Json
- uid: Wrap.Json.JsonSerializerOptionsExteionsions
  name: JsonSerializerOptionsExteionsions
  href: api/Wrap.Json.JsonSerializerOptionsExteionsions.html
  commentId: T:Wrap.Json.JsonSerializerOptionsExteionsions
  fullName: Wrap.Json.JsonSerializerOptionsExteionsions
  nameWithType: JsonSerializerOptionsExteionsions
- uid: Wrap.Json.JsonSerializerOptionsExteionsions.AddUnionConverter(System.Text.Json.JsonSerializerOptions)
  name: AddUnionConverter(JsonSerializerOptions)
  href: api/Wrap.Json.JsonSerializerOptionsExteionsions.AddUnionConverter.html#Wrap_Json_JsonSerializerOptionsExteionsions_AddUnionConverter_System_Text_Json_JsonSerializerOptions_
  commentId: M:Wrap.Json.JsonSerializerOptionsExteionsions.AddUnionConverter(System.Text.Json.JsonSerializerOptions)
  fullName: Wrap.Json.JsonSerializerOptionsExteionsions.AddUnionConverter(System.Text.Json.JsonSerializerOptions)
  nameWithType: JsonSerializerOptionsExteionsions.AddUnionConverter(JsonSerializerOptions)
- uid: Wrap.Json.JsonSerializerOptionsExteionsions.AddUnionConverter*
  name: AddUnionConverter
  href: api/Wrap.Json.JsonSerializerOptionsExteionsions.AddUnionConverter.html
  commentId: Overload:Wrap.Json.JsonSerializerOptionsExteionsions.AddUnionConverter
  fullName: Wrap.Json.JsonSerializerOptionsExteionsions.AddUnionConverter
  nameWithType: JsonSerializerOptionsExteionsions.AddUnionConverter
- uid: Wrap.Json.UnionJsonConverterFactory
  name: UnionJsonConverterFactory
  href: api/Wrap.Json.UnionJsonConverterFactory.html
  commentId: T:Wrap.Json.UnionJsonConverterFactory
  fullName: Wrap.Json.UnionJsonConverterFactory
  nameWithType: UnionJsonConverterFactory
- uid: Wrap.Json.UnionJsonConverterFactory.#ctor
  name: UnionJsonConverterFactory()
  href: api/Wrap.Json.UnionJsonConverterFactory.-ctor.html#Wrap_Json_UnionJsonConverterFactory__ctor
  commentId: M:Wrap.Json.UnionJsonConverterFactory.#ctor
  name.vb: New()
  fullName: Wrap.Json.UnionJsonConverterFactory.UnionJsonConverterFactory()
  fullName.vb: Wrap.Json.UnionJsonConverterFactory.New()
  nameWithType: UnionJsonConverterFactory.UnionJsonConverterFactory()
  nameWithType.vb: UnionJsonConverterFactory.New()
- uid: Wrap.Json.UnionJsonConverterFactory.#ctor*
  name: UnionJsonConverterFactory
  href: api/Wrap.Json.UnionJsonConverterFactory.-ctor.html
  commentId: Overload:Wrap.Json.UnionJsonConverterFactory.#ctor
  name.vb: New
  fullName: Wrap.Json.UnionJsonConverterFactory.UnionJsonConverterFactory
  fullName.vb: Wrap.Json.UnionJsonConverterFactory.New
  nameWithType: UnionJsonConverterFactory.UnionJsonConverterFactory
  nameWithType.vb: UnionJsonConverterFactory.New
- uid: Wrap.Json.UnionJsonConverterFactory.CanConvert(System.Type)
  name: CanConvert(Type)
  href: api/Wrap.Json.UnionJsonConverterFactory.CanConvert.html#Wrap_Json_UnionJsonConverterFactory_CanConvert_System_Type_
  commentId: M:Wrap.Json.UnionJsonConverterFactory.CanConvert(System.Type)
  fullName: Wrap.Json.UnionJsonConverterFactory.CanConvert(System.Type)
  nameWithType: UnionJsonConverterFactory.CanConvert(Type)
- uid: Wrap.Json.UnionJsonConverterFactory.CanConvert*
  name: CanConvert
  href: api/Wrap.Json.UnionJsonConverterFactory.CanConvert.html
  commentId: Overload:Wrap.Json.UnionJsonConverterFactory.CanConvert
  fullName: Wrap.Json.UnionJsonConverterFactory.CanConvert
  nameWithType: UnionJsonConverterFactory.CanConvert
- uid: Wrap.Json.UnionJsonConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)
  name: CreateConverter(Type, JsonSerializerOptions)
  href: api/Wrap.Json.UnionJsonConverterFactory.CreateConverter.html#Wrap_Json_UnionJsonConverterFactory_CreateConverter_System_Type_System_Text_Json_JsonSerializerOptions_
  commentId: M:Wrap.Json.UnionJsonConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)
  fullName: Wrap.Json.UnionJsonConverterFactory.CreateConverter(System.Type, System.Text.Json.JsonSerializerOptions)
  nameWithType: UnionJsonConverterFactory.CreateConverter(Type, JsonSerializerOptions)
- uid: Wrap.Json.UnionJsonConverterFactory.CreateConverter*
  name: CreateConverter
  href: api/Wrap.Json.UnionJsonConverterFactory.CreateConverter.html
  commentId: Overload:Wrap.Json.UnionJsonConverterFactory.CreateConverter
  fullName: Wrap.Json.UnionJsonConverterFactory.CreateConverter
  nameWithType: UnionJsonConverterFactory.CreateConverter
- uid: Wrap.Left`2
  name: Left<TLeft, TRight>
  href: api/Wrap.Left-2.html
  commentId: T:Wrap.Left`2
  name.vb: Left(Of TLeft, TRight)
  fullName: Wrap.Left<TLeft, TRight>
  fullName.vb: Wrap.Left(Of TLeft, TRight)
  nameWithType: Left<TLeft, TRight>
  nameWithType.vb: Left(Of TLeft, TRight)
- uid: Wrap.Left`2.EqualityContract
  name: EqualityContract
  href: api/Wrap.Left-2.EqualityContract.html#Wrap_Left_2_EqualityContract
  commentId: P:Wrap.Left`2.EqualityContract
  fullName: Wrap.Left<TLeft, TRight>.EqualityContract
  fullName.vb: Wrap.Left(Of TLeft, TRight).EqualityContract
  nameWithType: Left<TLeft, TRight>.EqualityContract
  nameWithType.vb: Left(Of TLeft, TRight).EqualityContract
- uid: Wrap.Left`2.EqualityContract*
  name: EqualityContract
  href: api/Wrap.Left-2.EqualityContract.html
  commentId: Overload:Wrap.Left`2.EqualityContract
  fullName: Wrap.Left<TLeft, TRight>.EqualityContract
  fullName.vb: Wrap.Left(Of TLeft, TRight).EqualityContract
  nameWithType: Left<TLeft, TRight>.EqualityContract
  nameWithType.vb: Left(Of TLeft, TRight).EqualityContract
- uid: Wrap.Left`2.Equals(System.Object)
  name: Equals(object?)
  href: api/Wrap.Left-2.Equals.html#Wrap_Left_2_Equals_System_Object_
  commentId: M:Wrap.Left`2.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.Left<TLeft, TRight>.Equals(object?)
  fullName.vb: Wrap.Left(Of TLeft, TRight).Equals(Object)
  nameWithType: Left<TLeft, TRight>.Equals(object?)
  nameWithType.vb: Left(Of TLeft, TRight).Equals(Object)
- uid: Wrap.Left`2.Equals(Wrap.Either{`0,`1})
  name: Equals(Either<TLeft, TRight>?)
  href: api/Wrap.Left-2.Equals.html#Wrap_Left_2_Equals_Wrap_Either__0__1__
  commentId: M:Wrap.Left`2.Equals(Wrap.Either{`0,`1})
  name.vb: Equals(Either(Of TLeft, TRight))
  fullName: Wrap.Left<TLeft, TRight>.Equals(Wrap.Either<TLeft, TRight>?)
  fullName.vb: Wrap.Left(Of TLeft, TRight).Equals(Wrap.Either(Of TLeft, TRight))
  nameWithType: Left<TLeft, TRight>.Equals(Either<TLeft, TRight>?)
  nameWithType.vb: Left(Of TLeft, TRight).Equals(Either(Of TLeft, TRight))
- uid: Wrap.Left`2.Equals(Wrap.Left{`0,`1})
  name: Equals(Left<TLeft, TRight>?)
  href: api/Wrap.Left-2.Equals.html#Wrap_Left_2_Equals_Wrap_Left__0__1__
  commentId: M:Wrap.Left`2.Equals(Wrap.Left{`0,`1})
  name.vb: Equals(Left(Of TLeft, TRight))
  fullName: Wrap.Left<TLeft, TRight>.Equals(Wrap.Left<TLeft, TRight>?)
  fullName.vb: Wrap.Left(Of TLeft, TRight).Equals(Wrap.Left(Of TLeft, TRight))
  nameWithType: Left<TLeft, TRight>.Equals(Left<TLeft, TRight>?)
  nameWithType.vb: Left(Of TLeft, TRight).Equals(Left(Of TLeft, TRight))
- uid: Wrap.Left`2.Equals*
  name: Equals
  href: api/Wrap.Left-2.Equals.html
  commentId: Overload:Wrap.Left`2.Equals
  fullName: Wrap.Left<TLeft, TRight>.Equals
  fullName.vb: Wrap.Left(Of TLeft, TRight).Equals
  nameWithType: Left<TLeft, TRight>.Equals
  nameWithType.vb: Left(Of TLeft, TRight).Equals
- uid: Wrap.Left`2.GetHashCode
  name: GetHashCode()
  href: api/Wrap.Left-2.GetHashCode.html#Wrap_Left_2_GetHashCode
  commentId: M:Wrap.Left`2.GetHashCode
  fullName: Wrap.Left<TLeft, TRight>.GetHashCode()
  fullName.vb: Wrap.Left(Of TLeft, TRight).GetHashCode()
  nameWithType: Left<TLeft, TRight>.GetHashCode()
  nameWithType.vb: Left(Of TLeft, TRight).GetHashCode()
- uid: Wrap.Left`2.GetHashCode*
  name: GetHashCode
  href: api/Wrap.Left-2.GetHashCode.html
  commentId: Overload:Wrap.Left`2.GetHashCode
  fullName: Wrap.Left<TLeft, TRight>.GetHashCode
  fullName.vb: Wrap.Left(Of TLeft, TRight).GetHashCode
  nameWithType: Left<TLeft, TRight>.GetHashCode
  nameWithType.vb: Left(Of TLeft, TRight).GetHashCode
- uid: Wrap.Left`2.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Wrap.Left-2.PrintMembers.html#Wrap_Left_2_PrintMembers_System_Text_StringBuilder_
  commentId: M:Wrap.Left`2.PrintMembers(System.Text.StringBuilder)
  fullName: Wrap.Left<TLeft, TRight>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Wrap.Left(Of TLeft, TRight).PrintMembers(System.Text.StringBuilder)
  nameWithType: Left<TLeft, TRight>.PrintMembers(StringBuilder)
  nameWithType.vb: Left(Of TLeft, TRight).PrintMembers(StringBuilder)
- uid: Wrap.Left`2.PrintMembers*
  name: PrintMembers
  href: api/Wrap.Left-2.PrintMembers.html
  commentId: Overload:Wrap.Left`2.PrintMembers
  fullName: Wrap.Left<TLeft, TRight>.PrintMembers
  fullName.vb: Wrap.Left(Of TLeft, TRight).PrintMembers
  nameWithType: Left<TLeft, TRight>.PrintMembers
  nameWithType.vb: Left(Of TLeft, TRight).PrintMembers
- uid: Wrap.Left`2.ToString
  name: ToString()
  href: api/Wrap.Left-2.ToString.html#Wrap_Left_2_ToString
  commentId: M:Wrap.Left`2.ToString
  fullName: Wrap.Left<TLeft, TRight>.ToString()
  fullName.vb: Wrap.Left(Of TLeft, TRight).ToString()
  nameWithType: Left<TLeft, TRight>.ToString()
  nameWithType.vb: Left(Of TLeft, TRight).ToString()
- uid: Wrap.Left`2.ToString*
  name: ToString
  href: api/Wrap.Left-2.ToString.html
  commentId: Overload:Wrap.Left`2.ToString
  fullName: Wrap.Left<TLeft, TRight>.ToString
  fullName.vb: Wrap.Left(Of TLeft, TRight).ToString
  nameWithType: Left<TLeft, TRight>.ToString
  nameWithType.vb: Left(Of TLeft, TRight).ToString
- uid: Wrap.Left`2.Value
  name: Value
  href: api/Wrap.Left-2.Value.html#Wrap_Left_2_Value
  commentId: P:Wrap.Left`2.Value
  fullName: Wrap.Left<TLeft, TRight>.Value
  fullName.vb: Wrap.Left(Of TLeft, TRight).Value
  nameWithType: Left<TLeft, TRight>.Value
  nameWithType.vb: Left(Of TLeft, TRight).Value
- uid: Wrap.Left`2.Value*
  name: Value
  href: api/Wrap.Left-2.Value.html
  commentId: Overload:Wrap.Left`2.Value
  fullName: Wrap.Left<TLeft, TRight>.Value
  fullName.vb: Wrap.Left(Of TLeft, TRight).Value
  nameWithType: Left<TLeft, TRight>.Value
  nameWithType.vb: Left(Of TLeft, TRight).Value
- uid: Wrap.Left`2.op_Equality(Wrap.Left{`0,`1},Wrap.Left{`0,`1})
  name: operator ==(Left<TLeft, TRight>?, Left<TLeft, TRight>?)
  href: api/Wrap.Left-2.op_Equality.html#Wrap_Left_2_op_Equality_Wrap_Left__0__1__Wrap_Left__0__1__
  commentId: M:Wrap.Left`2.op_Equality(Wrap.Left{`0,`1},Wrap.Left{`0,`1})
  name.vb: =(Left(Of TLeft, TRight), Left(Of TLeft, TRight))
  fullName: Wrap.Left<TLeft, TRight>.operator ==(Wrap.Left<TLeft, TRight>?, Wrap.Left<TLeft, TRight>?)
  fullName.vb: Wrap.Left(Of TLeft, TRight).=(Wrap.Left(Of TLeft, TRight), Wrap.Left(Of TLeft, TRight))
  nameWithType: Left<TLeft, TRight>.operator ==(Left<TLeft, TRight>?, Left<TLeft, TRight>?)
  nameWithType.vb: Left(Of TLeft, TRight).=(Left(Of TLeft, TRight), Left(Of TLeft, TRight))
- uid: Wrap.Left`2.op_Equality*
  name: operator ==
  href: api/Wrap.Left-2.op_Equality.html
  commentId: Overload:Wrap.Left`2.op_Equality
  name.vb: =
  fullName: Wrap.Left<TLeft, TRight>.operator ==
  fullName.vb: Wrap.Left(Of TLeft, TRight).=
  nameWithType: Left<TLeft, TRight>.operator ==
  nameWithType.vb: Left(Of TLeft, TRight).=
- uid: Wrap.Left`2.op_Inequality(Wrap.Left{`0,`1},Wrap.Left{`0,`1})
  name: operator !=(Left<TLeft, TRight>?, Left<TLeft, TRight>?)
  href: api/Wrap.Left-2.op_Inequality.html#Wrap_Left_2_op_Inequality_Wrap_Left__0__1__Wrap_Left__0__1__
  commentId: M:Wrap.Left`2.op_Inequality(Wrap.Left{`0,`1},Wrap.Left{`0,`1})
  name.vb: <>(Left(Of TLeft, TRight), Left(Of TLeft, TRight))
  fullName: Wrap.Left<TLeft, TRight>.operator !=(Wrap.Left<TLeft, TRight>?, Wrap.Left<TLeft, TRight>?)
  fullName.vb: Wrap.Left(Of TLeft, TRight).<>(Wrap.Left(Of TLeft, TRight), Wrap.Left(Of TLeft, TRight))
  nameWithType: Left<TLeft, TRight>.operator !=(Left<TLeft, TRight>?, Left<TLeft, TRight>?)
  nameWithType.vb: Left(Of TLeft, TRight).<>(Left(Of TLeft, TRight), Left(Of TLeft, TRight))
- uid: Wrap.Left`2.op_Inequality*
  name: operator !=
  href: api/Wrap.Left-2.op_Inequality.html
  commentId: Overload:Wrap.Left`2.op_Inequality
  name.vb: <>
  fullName: Wrap.Left<TLeft, TRight>.operator !=
  fullName.vb: Wrap.Left(Of TLeft, TRight).<>
  nameWithType: Left<TLeft, TRight>.operator !=
  nameWithType.vb: Left(Of TLeft, TRight).<>
- uid: Wrap.Linq
  name: Wrap.Linq
  href: api/Wrap.Linq.html
  commentId: N:Wrap.Linq
  fullName: Wrap.Linq
  nameWithType: Wrap.Linq
- uid: Wrap.Linq.MaybeExtensions
  name: MaybeExtensions
  href: api/Wrap.Linq.MaybeExtensions.html
  commentId: T:Wrap.Linq.MaybeExtensions
  fullName: Wrap.Linq.MaybeExtensions
  nameWithType: MaybeExtensions
- uid: Wrap.Linq.MaybeExtensions.Select*
  name: Select
  href: api/Wrap.Linq.MaybeExtensions.Select.html
  commentId: Overload:Wrap.Linq.MaybeExtensions.Select
  fullName: Wrap.Linq.MaybeExtensions.Select
  nameWithType: MaybeExtensions.Select
- uid: Wrap.Linq.MaybeExtensions.SelectMany*
  name: SelectMany
  href: api/Wrap.Linq.MaybeExtensions.SelectMany.html
  commentId: Overload:Wrap.Linq.MaybeExtensions.SelectMany
  fullName: Wrap.Linq.MaybeExtensions.SelectMany
  nameWithType: MaybeExtensions.SelectMany
- uid: Wrap.Linq.MaybeExtensions.SelectMany``3(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Task<Maybe<T>>, Func<T, Task<Maybe<TInner>>>, Func<T, TInner, TReturn>)
  href: api/Wrap.Linq.MaybeExtensions.SelectMany.html#Wrap_Linq_MaybeExtensions_SelectMany__3_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_Wrap_Maybe___1____System_Func___0___1___2__
  commentId: M:Wrap.Linq.MaybeExtensions.SelectMany``3(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TInner))), Func(Of T, TInner, TReturn))
  fullName: Wrap.Linq.MaybeExtensions.SelectMany<T, TInner, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<Wrap.Maybe<TInner>>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Wrap.Linq.MaybeExtensions.SelectMany(Of T, TInner, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Wrap.Maybe(Of TInner))), System.Func(Of T, TInner, TReturn))
  nameWithType: MaybeExtensions.SelectMany<T, TInner, TReturn>(Task<Maybe<T>>, Func<T, Task<Maybe<TInner>>>, Func<T, TInner, TReturn>)
  nameWithType.vb: MaybeExtensions.SelectMany(Of T, TInner, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TInner))), Func(Of T, TInner, TReturn))
- uid: Wrap.Linq.MaybeExtensions.SelectMany``3(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,Wrap.Maybe{``1}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Task<Maybe<T>>, Func<T, Maybe<TInner>>, Func<T, TInner, TReturn>)
  href: api/Wrap.Linq.MaybeExtensions.SelectMany.html#Wrap_Linq_MaybeExtensions_SelectMany__3_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___0_Wrap_Maybe___1___System_Func___0___1___2__
  commentId: M:Wrap.Linq.MaybeExtensions.SelectMany``3(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,Wrap.Maybe{``1}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Maybe(Of TInner)), Func(Of T, TInner, TReturn))
  fullName: Wrap.Linq.MaybeExtensions.SelectMany<T, TInner, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<T, Wrap.Maybe<TInner>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Wrap.Linq.MaybeExtensions.SelectMany(Of T, TInner, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of T, Wrap.Maybe(Of TInner)), System.Func(Of T, TInner, TReturn))
  nameWithType: MaybeExtensions.SelectMany<T, TInner, TReturn>(Task<Maybe<T>>, Func<T, Maybe<TInner>>, Func<T, TInner, TReturn>)
  nameWithType.vb: MaybeExtensions.SelectMany(Of T, TInner, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Maybe(Of TInner)), Func(Of T, TInner, TReturn))
- uid: Wrap.Linq.MaybeExtensions.SelectMany``3(Wrap.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Maybe<T>, Func<T, Task<Maybe<TInner>>>, Func<T, TInner, TReturn>)
  href: api/Wrap.Linq.MaybeExtensions.SelectMany.html#Wrap_Linq_MaybeExtensions_SelectMany__3_Wrap_Maybe___0__System_Func___0_System_Threading_Tasks_Task_Wrap_Maybe___1____System_Func___0___1___2__
  commentId: M:Wrap.Linq.MaybeExtensions.SelectMany``3(Wrap.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Maybe(Of T), Func(Of T, Task(Of Maybe(Of TInner))), Func(Of T, TInner, TReturn))
  fullName: Wrap.Linq.MaybeExtensions.SelectMany<T, TInner, TReturn>(Wrap.Maybe<T>, System.Func<T, System.Threading.Tasks.Task<Wrap.Maybe<TInner>>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Wrap.Linq.MaybeExtensions.SelectMany(Of T, TInner, TReturn)(Wrap.Maybe(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Wrap.Maybe(Of TInner))), System.Func(Of T, TInner, TReturn))
  nameWithType: MaybeExtensions.SelectMany<T, TInner, TReturn>(Maybe<T>, Func<T, Task<Maybe<TInner>>>, Func<T, TInner, TReturn>)
  nameWithType.vb: MaybeExtensions.SelectMany(Of T, TInner, TReturn)(Maybe(Of T), Func(Of T, Task(Of Maybe(Of TInner))), Func(Of T, TInner, TReturn))
- uid: Wrap.Linq.MaybeExtensions.SelectMany``3(Wrap.Maybe{``0},System.Func{``0,Wrap.Maybe{``1}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Maybe<T>, Func<T, Maybe<TInner>>, Func<T, TInner, TReturn>)
  href: api/Wrap.Linq.MaybeExtensions.SelectMany.html#Wrap_Linq_MaybeExtensions_SelectMany__3_Wrap_Maybe___0__System_Func___0_Wrap_Maybe___1___System_Func___0___1___2__
  commentId: M:Wrap.Linq.MaybeExtensions.SelectMany``3(Wrap.Maybe{``0},System.Func{``0,Wrap.Maybe{``1}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Maybe(Of T), Func(Of T, Maybe(Of TInner)), Func(Of T, TInner, TReturn))
  fullName: Wrap.Linq.MaybeExtensions.SelectMany<T, TInner, TReturn>(Wrap.Maybe<T>, System.Func<T, Wrap.Maybe<TInner>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Wrap.Linq.MaybeExtensions.SelectMany(Of T, TInner, TReturn)(Wrap.Maybe(Of T), System.Func(Of T, Wrap.Maybe(Of TInner)), System.Func(Of T, TInner, TReturn))
  nameWithType: MaybeExtensions.SelectMany<T, TInner, TReturn>(Maybe<T>, Func<T, Maybe<TInner>>, Func<T, TInner, TReturn>)
  nameWithType.vb: MaybeExtensions.SelectMany(Of T, TInner, TReturn)(Maybe(Of T), Func(Of T, Maybe(Of TInner)), Func(Of T, TInner, TReturn))
- uid: Wrap.Linq.MaybeExtensions.Select``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: Select<T, TReturn>(Task<Maybe<T>>, Func<T, Task<TReturn>>)
  href: api/Wrap.Linq.MaybeExtensions.Select.html#Wrap_Linq_MaybeExtensions_Select__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.Linq.MaybeExtensions.Select``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: Select(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.Linq.MaybeExtensions.Select<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.Linq.MaybeExtensions.Select(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.Select<T, TReturn>(Task<Maybe<T>>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.Select(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.Linq.MaybeExtensions.Select``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,``1})
  name: Select<T, TReturn>(Task<Maybe<T>>, Func<T, TReturn>)
  href: api/Wrap.Linq.MaybeExtensions.Select.html#Wrap_Linq_MaybeExtensions_Select__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___0___1__
  commentId: M:Wrap.Linq.MaybeExtensions.Select``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,``1})
  name.vb: Select(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, TReturn))
  fullName: Wrap.Linq.MaybeExtensions.Select<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.Linq.MaybeExtensions.Select(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.Select<T, TReturn>(Task<Maybe<T>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.Select(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, TReturn))
- uid: Wrap.Linq.MaybeExtensions.Select``2(Wrap.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: Select<T, TReturn>(Maybe<T>, Func<T, Task<TReturn>>)
  href: api/Wrap.Linq.MaybeExtensions.Select.html#Wrap_Linq_MaybeExtensions_Select__2_Wrap_Maybe___0__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.Linq.MaybeExtensions.Select``2(Wrap.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: Select(Of T, TReturn)(Maybe(Of T), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.Linq.MaybeExtensions.Select<T, TReturn>(Wrap.Maybe<T>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.Linq.MaybeExtensions.Select(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.Select<T, TReturn>(Maybe<T>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.Select(Of T, TReturn)(Maybe(Of T), Func(Of T, Task(Of TReturn)))
- uid: Wrap.Linq.MaybeExtensions.Select``2(Wrap.Maybe{``0},System.Func{``0,``1})
  name: Select<T, TReturn>(Maybe<T>, Func<T, TReturn>)
  href: api/Wrap.Linq.MaybeExtensions.Select.html#Wrap_Linq_MaybeExtensions_Select__2_Wrap_Maybe___0__System_Func___0___1__
  commentId: M:Wrap.Linq.MaybeExtensions.Select``2(Wrap.Maybe{``0},System.Func{``0,``1})
  name.vb: Select(Of T, TReturn)(Maybe(Of T), Func(Of T, TReturn))
  fullName: Wrap.Linq.MaybeExtensions.Select<T, TReturn>(Wrap.Maybe<T>, System.Func<T, TReturn>)
  fullName.vb: Wrap.Linq.MaybeExtensions.Select(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.Select<T, TReturn>(Maybe<T>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.Select(Of T, TReturn)(Maybe(Of T), Func(Of T, TReturn))
- uid: Wrap.Linq.MaybeExtensions.Where*
  name: Where
  href: api/Wrap.Linq.MaybeExtensions.Where.html
  commentId: Overload:Wrap.Linq.MaybeExtensions.Where
  fullName: Wrap.Linq.MaybeExtensions.Where
  nameWithType: MaybeExtensions.Where
- uid: Wrap.Linq.MaybeExtensions.Where``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Boolean})
  name: Where<T>(Task<Maybe<T>>, Func<T, bool>)
  href: api/Wrap.Linq.MaybeExtensions.Where.html#Wrap_Linq_MaybeExtensions_Where__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___0_System_Boolean__
  commentId: M:Wrap.Linq.MaybeExtensions.Where``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Boolean})
  name.vb: Where(Of T)(Task(Of Maybe(Of T)), Func(Of T, Boolean))
  fullName: Wrap.Linq.MaybeExtensions.Where<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<T, bool>)
  fullName.vb: Wrap.Linq.MaybeExtensions.Where(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of T, Boolean))
  nameWithType: MaybeExtensions.Where<T>(Task<Maybe<T>>, Func<T, bool>)
  nameWithType.vb: MaybeExtensions.Where(Of T)(Task(Of Maybe(Of T)), Func(Of T, Boolean))
- uid: Wrap.Linq.MaybeExtensions.Where``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: Where<T>(Task<Maybe<T>>, Func<T, Task<bool>>)
  href: api/Wrap.Linq.MaybeExtensions.Where.html#Wrap_Linq_MaybeExtensions_Where__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Wrap.Linq.MaybeExtensions.Where``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: Where(Of T)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
  fullName: Wrap.Linq.MaybeExtensions.Where<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Wrap.Linq.MaybeExtensions.Where(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: MaybeExtensions.Where<T>(Task<Maybe<T>>, Func<T, Task<bool>>)
  nameWithType.vb: MaybeExtensions.Where(Of T)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
- uid: Wrap.Linq.MaybeExtensions.Where``1(Wrap.Maybe{``0},System.Func{``0,System.Boolean})
  name: Where<T>(Maybe<T>, Func<T, bool>)
  href: api/Wrap.Linq.MaybeExtensions.Where.html#Wrap_Linq_MaybeExtensions_Where__1_Wrap_Maybe___0__System_Func___0_System_Boolean__
  commentId: M:Wrap.Linq.MaybeExtensions.Where``1(Wrap.Maybe{``0},System.Func{``0,System.Boolean})
  name.vb: Where(Of T)(Maybe(Of T), Func(Of T, Boolean))
  fullName: Wrap.Linq.MaybeExtensions.Where<T>(Wrap.Maybe<T>, System.Func<T, bool>)
  fullName.vb: Wrap.Linq.MaybeExtensions.Where(Of T)(Wrap.Maybe(Of T), System.Func(Of T, Boolean))
  nameWithType: MaybeExtensions.Where<T>(Maybe<T>, Func<T, bool>)
  nameWithType.vb: MaybeExtensions.Where(Of T)(Maybe(Of T), Func(Of T, Boolean))
- uid: Wrap.Linq.MaybeExtensions.Where``1(Wrap.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: Where<T>(Maybe<T>, Func<T, Task<bool>>)
  href: api/Wrap.Linq.MaybeExtensions.Where.html#Wrap_Linq_MaybeExtensions_Where__1_Wrap_Maybe___0__System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Wrap.Linq.MaybeExtensions.Where``1(Wrap.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: Where(Of T)(Maybe(Of T), Func(Of T, Task(Of Boolean)))
  fullName: Wrap.Linq.MaybeExtensions.Where<T>(Wrap.Maybe<T>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Wrap.Linq.MaybeExtensions.Where(Of T)(Wrap.Maybe(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: MaybeExtensions.Where<T>(Maybe<T>, Func<T, Task<bool>>)
  nameWithType.vb: MaybeExtensions.Where(Of T)(Maybe(Of T), Func(Of T, Task(Of Boolean)))
- uid: Wrap.Linq.ResultExtensions
  name: ResultExtensions
  href: api/Wrap.Linq.ResultExtensions.html
  commentId: T:Wrap.Linq.ResultExtensions
  fullName: Wrap.Linq.ResultExtensions
  nameWithType: ResultExtensions
- uid: Wrap.Linq.ResultExtensions.Select*
  name: Select
  href: api/Wrap.Linq.ResultExtensions.Select.html
  commentId: Overload:Wrap.Linq.ResultExtensions.Select
  fullName: Wrap.Linq.ResultExtensions.Select
  nameWithType: ResultExtensions.Select
- uid: Wrap.Linq.ResultExtensions.SelectMany*
  name: SelectMany
  href: api/Wrap.Linq.ResultExtensions.SelectMany.html
  commentId: Overload:Wrap.Linq.ResultExtensions.SelectMany
  fullName: Wrap.Linq.ResultExtensions.SelectMany
  nameWithType: ResultExtensions.SelectMany
- uid: Wrap.Linq.ResultExtensions.SelectMany``3(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Result{``1}}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Task<Result<T>>, Func<T, Task<Result<TInner>>>, Func<T, TInner, TReturn>)
  href: api/Wrap.Linq.ResultExtensions.SelectMany.html#Wrap_Linq_ResultExtensions_SelectMany__3_System_Threading_Tasks_Task_Wrap_Result___0___System_Func___0_System_Threading_Tasks_Task_Wrap_Result___1____System_Func___0___1___2__
  commentId: M:Wrap.Linq.ResultExtensions.SelectMany``3(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Result{``1}}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of Result(Of TInner))), Func(Of T, TInner, TReturn))
  fullName: Wrap.Linq.ResultExtensions.SelectMany<T, TInner, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<T, System.Threading.Tasks.Task<Wrap.Result<TInner>>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Wrap.Linq.ResultExtensions.SelectMany(Of T, TInner, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Wrap.Result(Of TInner))), System.Func(Of T, TInner, TReturn))
  nameWithType: ResultExtensions.SelectMany<T, TInner, TReturn>(Task<Result<T>>, Func<T, Task<Result<TInner>>>, Func<T, TInner, TReturn>)
  nameWithType.vb: ResultExtensions.SelectMany(Of T, TInner, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of Result(Of TInner))), Func(Of T, TInner, TReturn))
- uid: Wrap.Linq.ResultExtensions.SelectMany``3(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,Wrap.Result{``1}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Task<Result<T>>, Func<T, Result<TInner>>, Func<T, TInner, TReturn>)
  href: api/Wrap.Linq.ResultExtensions.SelectMany.html#Wrap_Linq_ResultExtensions_SelectMany__3_System_Threading_Tasks_Task_Wrap_Result___0___System_Func___0_Wrap_Result___1___System_Func___0___1___2__
  commentId: M:Wrap.Linq.ResultExtensions.SelectMany``3(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,Wrap.Result{``1}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Task(Of Result(Of T)), Func(Of T, Result(Of TInner)), Func(Of T, TInner, TReturn))
  fullName: Wrap.Linq.ResultExtensions.SelectMany<T, TInner, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<T, Wrap.Result<TInner>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Wrap.Linq.ResultExtensions.SelectMany(Of T, TInner, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of T, Wrap.Result(Of TInner)), System.Func(Of T, TInner, TReturn))
  nameWithType: ResultExtensions.SelectMany<T, TInner, TReturn>(Task<Result<T>>, Func<T, Result<TInner>>, Func<T, TInner, TReturn>)
  nameWithType.vb: ResultExtensions.SelectMany(Of T, TInner, TReturn)(Task(Of Result(Of T)), Func(Of T, Result(Of TInner)), Func(Of T, TInner, TReturn))
- uid: Wrap.Linq.ResultExtensions.SelectMany``3(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task{Wrap.Result{``1}}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Result<T>, Func<T, Task<Result<TInner>>>, Func<T, TInner, TReturn>)
  href: api/Wrap.Linq.ResultExtensions.SelectMany.html#Wrap_Linq_ResultExtensions_SelectMany__3_Wrap_Result___0__System_Func___0_System_Threading_Tasks_Task_Wrap_Result___1____System_Func___0___1___2__
  commentId: M:Wrap.Linq.ResultExtensions.SelectMany``3(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task{Wrap.Result{``1}}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Result(Of T), Func(Of T, Task(Of Result(Of TInner))), Func(Of T, TInner, TReturn))
  fullName: Wrap.Linq.ResultExtensions.SelectMany<T, TInner, TReturn>(Wrap.Result<T>, System.Func<T, System.Threading.Tasks.Task<Wrap.Result<TInner>>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Wrap.Linq.ResultExtensions.SelectMany(Of T, TInner, TReturn)(Wrap.Result(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Wrap.Result(Of TInner))), System.Func(Of T, TInner, TReturn))
  nameWithType: ResultExtensions.SelectMany<T, TInner, TReturn>(Result<T>, Func<T, Task<Result<TInner>>>, Func<T, TInner, TReturn>)
  nameWithType.vb: ResultExtensions.SelectMany(Of T, TInner, TReturn)(Result(Of T), Func(Of T, Task(Of Result(Of TInner))), Func(Of T, TInner, TReturn))
- uid: Wrap.Linq.ResultExtensions.SelectMany``3(Wrap.Result{``0},System.Func{``0,Wrap.Result{``1}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Result<T>, Func<T, Result<TInner>>, Func<T, TInner, TReturn>)
  href: api/Wrap.Linq.ResultExtensions.SelectMany.html#Wrap_Linq_ResultExtensions_SelectMany__3_Wrap_Result___0__System_Func___0_Wrap_Result___1___System_Func___0___1___2__
  commentId: M:Wrap.Linq.ResultExtensions.SelectMany``3(Wrap.Result{``0},System.Func{``0,Wrap.Result{``1}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Result(Of T), Func(Of T, Result(Of TInner)), Func(Of T, TInner, TReturn))
  fullName: Wrap.Linq.ResultExtensions.SelectMany<T, TInner, TReturn>(Wrap.Result<T>, System.Func<T, Wrap.Result<TInner>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Wrap.Linq.ResultExtensions.SelectMany(Of T, TInner, TReturn)(Wrap.Result(Of T), System.Func(Of T, Wrap.Result(Of TInner)), System.Func(Of T, TInner, TReturn))
  nameWithType: ResultExtensions.SelectMany<T, TInner, TReturn>(Result<T>, Func<T, Result<TInner>>, Func<T, TInner, TReturn>)
  nameWithType.vb: ResultExtensions.SelectMany(Of T, TInner, TReturn)(Result(Of T), Func(Of T, Result(Of TInner)), Func(Of T, TInner, TReturn))
- uid: Wrap.Linq.ResultExtensions.Select``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: Select<T, TReturn>(Task<Result<T>>, Func<T, Task<TReturn>>)
  href: api/Wrap.Linq.ResultExtensions.Select.html#Wrap_Linq_ResultExtensions_Select__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.Linq.ResultExtensions.Select``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: Select(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.Linq.ResultExtensions.Select<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.Linq.ResultExtensions.Select(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: ResultExtensions.Select<T, TReturn>(Task<Result<T>>, Func<T, Task<TReturn>>)
  nameWithType.vb: ResultExtensions.Select(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.Linq.ResultExtensions.Select``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,``1})
  name: Select<T, TReturn>(Task<Result<T>>, Func<T, TReturn>)
  href: api/Wrap.Linq.ResultExtensions.Select.html#Wrap_Linq_ResultExtensions_Select__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func___0___1__
  commentId: M:Wrap.Linq.ResultExtensions.Select``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,``1})
  name.vb: Select(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, TReturn))
  fullName: Wrap.Linq.ResultExtensions.Select<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.Linq.ResultExtensions.Select(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of T, TReturn))
  nameWithType: ResultExtensions.Select<T, TReturn>(Task<Result<T>>, Func<T, TReturn>)
  nameWithType.vb: ResultExtensions.Select(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, TReturn))
- uid: Wrap.Linq.ResultExtensions.Select``2(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: Select<T, TReturn>(Result<T>, Func<T, Task<TReturn>>)
  href: api/Wrap.Linq.ResultExtensions.Select.html#Wrap_Linq_ResultExtensions_Select__2_Wrap_Result___0__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.Linq.ResultExtensions.Select``2(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: Select(Of T, TReturn)(Result(Of T), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.Linq.ResultExtensions.Select<T, TReturn>(Wrap.Result<T>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.Linq.ResultExtensions.Select(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: ResultExtensions.Select<T, TReturn>(Result<T>, Func<T, Task<TReturn>>)
  nameWithType.vb: ResultExtensions.Select(Of T, TReturn)(Result(Of T), Func(Of T, Task(Of TReturn)))
- uid: Wrap.Linq.ResultExtensions.Select``2(Wrap.Result{``0},System.Func{``0,``1})
  name: Select<T, TReturn>(Result<T>, Func<T, TReturn>)
  href: api/Wrap.Linq.ResultExtensions.Select.html#Wrap_Linq_ResultExtensions_Select__2_Wrap_Result___0__System_Func___0___1__
  commentId: M:Wrap.Linq.ResultExtensions.Select``2(Wrap.Result{``0},System.Func{``0,``1})
  name.vb: Select(Of T, TReturn)(Result(Of T), Func(Of T, TReturn))
  fullName: Wrap.Linq.ResultExtensions.Select<T, TReturn>(Wrap.Result<T>, System.Func<T, TReturn>)
  fullName.vb: Wrap.Linq.ResultExtensions.Select(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of T, TReturn))
  nameWithType: ResultExtensions.Select<T, TReturn>(Result<T>, Func<T, TReturn>)
  nameWithType.vb: ResultExtensions.Select(Of T, TReturn)(Result(Of T), Func(Of T, TReturn))
- uid: Wrap.Linq.ResultExtensions.Where*
  name: Where
  href: api/Wrap.Linq.ResultExtensions.Where.html
  commentId: Overload:Wrap.Linq.ResultExtensions.Where
  fullName: Wrap.Linq.ResultExtensions.Where
  nameWithType: ResultExtensions.Where
- uid: Wrap.Linq.ResultExtensions.Where``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Boolean})
  name: Where<T>(Task<Result<T>>, Func<T, bool>)
  href: api/Wrap.Linq.ResultExtensions.Where.html#Wrap_Linq_ResultExtensions_Where__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Func___0_System_Boolean__
  commentId: M:Wrap.Linq.ResultExtensions.Where``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Boolean})
  name.vb: Where(Of T)(Task(Of Result(Of T)), Func(Of T, Boolean))
  fullName: Wrap.Linq.ResultExtensions.Where<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<T, bool>)
  fullName.vb: Wrap.Linq.ResultExtensions.Where(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of T, Boolean))
  nameWithType: ResultExtensions.Where<T>(Task<Result<T>>, Func<T, bool>)
  nameWithType.vb: ResultExtensions.Where(Of T)(Task(Of Result(Of T)), Func(Of T, Boolean))
- uid: Wrap.Linq.ResultExtensions.Where``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: Where<T>(Task<Result<T>>, Func<T, Task<bool>>)
  href: api/Wrap.Linq.ResultExtensions.Where.html#Wrap_Linq_ResultExtensions_Where__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Wrap.Linq.ResultExtensions.Where``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: Where(Of T)(Task(Of Result(Of T)), Func(Of T, Task(Of Boolean)))
  fullName: Wrap.Linq.ResultExtensions.Where<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Wrap.Linq.ResultExtensions.Where(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: ResultExtensions.Where<T>(Task<Result<T>>, Func<T, Task<bool>>)
  nameWithType.vb: ResultExtensions.Where(Of T)(Task(Of Result(Of T)), Func(Of T, Task(Of Boolean)))
- uid: Wrap.Linq.ResultExtensions.Where``1(Wrap.Result{``0},System.Func{``0,System.Boolean})
  name: Where<T>(Result<T>, Func<T, bool>)
  href: api/Wrap.Linq.ResultExtensions.Where.html#Wrap_Linq_ResultExtensions_Where__1_Wrap_Result___0__System_Func___0_System_Boolean__
  commentId: M:Wrap.Linq.ResultExtensions.Where``1(Wrap.Result{``0},System.Func{``0,System.Boolean})
  name.vb: Where(Of T)(Result(Of T), Func(Of T, Boolean))
  fullName: Wrap.Linq.ResultExtensions.Where<T>(Wrap.Result<T>, System.Func<T, bool>)
  fullName.vb: Wrap.Linq.ResultExtensions.Where(Of T)(Wrap.Result(Of T), System.Func(Of T, Boolean))
  nameWithType: ResultExtensions.Where<T>(Result<T>, Func<T, bool>)
  nameWithType.vb: ResultExtensions.Where(Of T)(Result(Of T), Func(Of T, Boolean))
- uid: Wrap.Linq.ResultExtensions.Where``1(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: Where<T>(Result<T>, Func<T, Task<bool>>)
  href: api/Wrap.Linq.ResultExtensions.Where.html#Wrap_Linq_ResultExtensions_Where__1_Wrap_Result___0__System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Wrap.Linq.ResultExtensions.Where``1(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: Where(Of T)(Result(Of T), Func(Of T, Task(Of Boolean)))
  fullName: Wrap.Linq.ResultExtensions.Where<T>(Wrap.Result<T>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Wrap.Linq.ResultExtensions.Where(Of T)(Wrap.Result(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: ResultExtensions.Where<T>(Result<T>, Func<T, Task<bool>>)
  nameWithType.vb: ResultExtensions.Where(Of T)(Result(Of T), Func(Of T, Task(Of Boolean)))
- uid: Wrap.Logging
  name: Wrap.Logging
  href: api/Wrap.Logging.html
  commentId: N:Wrap.Logging
  fullName: Wrap.Logging
  nameWithType: Wrap.Logging
- uid: Wrap.Logging.LogLevel
  name: LogLevel
  href: api/Wrap.Logging.LogLevel.html
  commentId: T:Wrap.Logging.LogLevel
  fullName: Wrap.Logging.LogLevel
  nameWithType: LogLevel
- uid: Wrap.Logging.LogLevel.Debug
  name: Debug
  href: api/Wrap.Logging.LogLevel.html#Wrap_Logging_LogLevel_Debug
  commentId: F:Wrap.Logging.LogLevel.Debug
  fullName: Wrap.Logging.LogLevel.Debug
  nameWithType: LogLevel.Debug
- uid: Wrap.Logging.LogLevel.Error
  name: Error
  href: api/Wrap.Logging.LogLevel.html#Wrap_Logging_LogLevel_Error
  commentId: F:Wrap.Logging.LogLevel.Error
  fullName: Wrap.Logging.LogLevel.Error
  nameWithType: LogLevel.Error
- uid: Wrap.Logging.LogLevel.Fatal
  name: Fatal
  href: api/Wrap.Logging.LogLevel.html#Wrap_Logging_LogLevel_Fatal
  commentId: F:Wrap.Logging.LogLevel.Fatal
  fullName: Wrap.Logging.LogLevel.Fatal
  nameWithType: LogLevel.Fatal
- uid: Wrap.Logging.LogLevel.Information
  name: Information
  href: api/Wrap.Logging.LogLevel.html#Wrap_Logging_LogLevel_Information
  commentId: F:Wrap.Logging.LogLevel.Information
  fullName: Wrap.Logging.LogLevel.Information
  nameWithType: LogLevel.Information
- uid: Wrap.Logging.LogLevel.Unknown
  name: Unknown
  href: api/Wrap.Logging.LogLevel.html#Wrap_Logging_LogLevel_Unknown
  commentId: F:Wrap.Logging.LogLevel.Unknown
  fullName: Wrap.Logging.LogLevel.Unknown
  nameWithType: LogLevel.Unknown
- uid: Wrap.Logging.LogLevel.Verbose
  name: Verbose
  href: api/Wrap.Logging.LogLevel.html#Wrap_Logging_LogLevel_Verbose
  commentId: F:Wrap.Logging.LogLevel.Verbose
  fullName: Wrap.Logging.LogLevel.Verbose
  nameWithType: LogLevel.Verbose
- uid: Wrap.Logging.LogLevel.Warning
  name: Warning
  href: api/Wrap.Logging.LogLevel.html#Wrap_Logging_LogLevel_Warning
  commentId: F:Wrap.Logging.LogLevel.Warning
  fullName: Wrap.Logging.LogLevel.Warning
  nameWithType: LogLevel.Warning
- uid: Wrap.LongExtensions
  name: LongExtensions
  href: api/Wrap.LongExtensions.html
  commentId: T:Wrap.LongExtensions
  fullName: Wrap.LongExtensions
  nameWithType: LongExtensions
- uid: Wrap.LongExtensions.WrapId*
  name: WrapId
  href: api/Wrap.LongExtensions.WrapId.html
  commentId: Overload:Wrap.LongExtensions.WrapId
  fullName: Wrap.LongExtensions.WrapId
  nameWithType: LongExtensions.WrapId
- uid: Wrap.LongExtensions.WrapId``1(System.Int64)
  name: WrapId<TId>(long)
  href: api/Wrap.LongExtensions.WrapId.html#Wrap_LongExtensions_WrapId__1_System_Int64_
  commentId: M:Wrap.LongExtensions.WrapId``1(System.Int64)
  name.vb: WrapId(Of TId)(Long)
  fullName: Wrap.LongExtensions.WrapId<TId>(long)
  fullName.vb: Wrap.LongExtensions.WrapId(Of TId)(Long)
  nameWithType: LongExtensions.WrapId<TId>(long)
  nameWithType.vb: LongExtensions.WrapId(Of TId)(Long)
- uid: Wrap.LongId`1
  name: LongId<TId>
  href: api/Wrap.LongId-1.html
  commentId: T:Wrap.LongId`1
  name.vb: LongId(Of TId)
  fullName: Wrap.LongId<TId>
  fullName.vb: Wrap.LongId(Of TId)
  nameWithType: LongId<TId>
  nameWithType.vb: LongId(Of TId)
- uid: Wrap.LongId`1.#ctor
  name: LongId()
  href: api/Wrap.LongId-1.-ctor.html#Wrap_LongId_1__ctor
  commentId: M:Wrap.LongId`1.#ctor
  name.vb: New()
  fullName: Wrap.LongId<TId>.LongId()
  fullName.vb: Wrap.LongId(Of TId).New()
  nameWithType: LongId<TId>.LongId()
  nameWithType.vb: LongId(Of TId).New()
- uid: Wrap.LongId`1.#ctor(Wrap.LongId{`0})
  name: LongId(LongId<TId>)
  href: api/Wrap.LongId-1.-ctor.html#Wrap_LongId_1__ctor_Wrap_LongId__0__
  commentId: M:Wrap.LongId`1.#ctor(Wrap.LongId{`0})
  name.vb: New(LongId(Of TId))
  fullName: Wrap.LongId<TId>.LongId(Wrap.LongId<TId>)
  fullName.vb: Wrap.LongId(Of TId).New(Wrap.LongId(Of TId))
  nameWithType: LongId<TId>.LongId(LongId<TId>)
  nameWithType.vb: LongId(Of TId).New(LongId(Of TId))
- uid: Wrap.LongId`1.#ctor*
  name: LongId
  href: api/Wrap.LongId-1.-ctor.html
  commentId: Overload:Wrap.LongId`1.#ctor
  name.vb: New
  fullName: Wrap.LongId<TId>.LongId
  fullName.vb: Wrap.LongId(Of TId).New
  nameWithType: LongId<TId>.LongId
  nameWithType.vb: LongId(Of TId).New
- uid: Wrap.LongId`1.EqualityContract
  name: EqualityContract
  href: api/Wrap.LongId-1.EqualityContract.html#Wrap_LongId_1_EqualityContract
  commentId: P:Wrap.LongId`1.EqualityContract
  fullName: Wrap.LongId<TId>.EqualityContract
  fullName.vb: Wrap.LongId(Of TId).EqualityContract
  nameWithType: LongId<TId>.EqualityContract
  nameWithType.vb: LongId(Of TId).EqualityContract
- uid: Wrap.LongId`1.EqualityContract*
  name: EqualityContract
  href: api/Wrap.LongId-1.EqualityContract.html
  commentId: Overload:Wrap.LongId`1.EqualityContract
  fullName: Wrap.LongId<TId>.EqualityContract
  fullName.vb: Wrap.LongId(Of TId).EqualityContract
  nameWithType: LongId<TId>.EqualityContract
  nameWithType.vb: LongId(Of TId).EqualityContract
- uid: Wrap.LongId`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Wrap.LongId-1.Equals.html#Wrap_LongId_1_Equals_System_Object_
  commentId: M:Wrap.LongId`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.LongId<TId>.Equals(object?)
  fullName.vb: Wrap.LongId(Of TId).Equals(Object)
  nameWithType: LongId<TId>.Equals(object?)
  nameWithType.vb: LongId(Of TId).Equals(Object)
- uid: Wrap.LongId`1.Equals(Wrap.Id{`0,System.Int64})
  name: Equals(Id<TId, long>?)
  href: api/Wrap.LongId-1.Equals.html#Wrap_LongId_1_Equals_Wrap_Id__0_System_Int64__
  commentId: M:Wrap.LongId`1.Equals(Wrap.Id{`0,System.Int64})
  name.vb: Equals(Id(Of TId, Long))
  fullName: Wrap.LongId<TId>.Equals(Wrap.Id<TId, long>?)
  fullName.vb: Wrap.LongId(Of TId).Equals(Wrap.Id(Of TId, Long))
  nameWithType: LongId<TId>.Equals(Id<TId, long>?)
  nameWithType.vb: LongId(Of TId).Equals(Id(Of TId, Long))
- uid: Wrap.LongId`1.Equals(Wrap.LongId{`0})
  name: Equals(LongId<TId>?)
  href: api/Wrap.LongId-1.Equals.html#Wrap_LongId_1_Equals_Wrap_LongId__0__
  commentId: M:Wrap.LongId`1.Equals(Wrap.LongId{`0})
  name.vb: Equals(LongId(Of TId))
  fullName: Wrap.LongId<TId>.Equals(Wrap.LongId<TId>?)
  fullName.vb: Wrap.LongId(Of TId).Equals(Wrap.LongId(Of TId))
  nameWithType: LongId<TId>.Equals(LongId<TId>?)
  nameWithType.vb: LongId(Of TId).Equals(LongId(Of TId))
- uid: Wrap.LongId`1.Equals*
  name: Equals
  href: api/Wrap.LongId-1.Equals.html
  commentId: Overload:Wrap.LongId`1.Equals
  fullName: Wrap.LongId<TId>.Equals
  fullName.vb: Wrap.LongId(Of TId).Equals
  nameWithType: LongId<TId>.Equals
  nameWithType.vb: LongId(Of TId).Equals
- uid: Wrap.LongId`1.GetHashCode
  name: GetHashCode()
  href: api/Wrap.LongId-1.GetHashCode.html#Wrap_LongId_1_GetHashCode
  commentId: M:Wrap.LongId`1.GetHashCode
  fullName: Wrap.LongId<TId>.GetHashCode()
  fullName.vb: Wrap.LongId(Of TId).GetHashCode()
  nameWithType: LongId<TId>.GetHashCode()
  nameWithType.vb: LongId(Of TId).GetHashCode()
- uid: Wrap.LongId`1.GetHashCode*
  name: GetHashCode
  href: api/Wrap.LongId-1.GetHashCode.html
  commentId: Overload:Wrap.LongId`1.GetHashCode
  fullName: Wrap.LongId<TId>.GetHashCode
  fullName.vb: Wrap.LongId(Of TId).GetHashCode
  nameWithType: LongId<TId>.GetHashCode
  nameWithType.vb: LongId(Of TId).GetHashCode
- uid: Wrap.LongId`1.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Wrap.LongId-1.PrintMembers.html#Wrap_LongId_1_PrintMembers_System_Text_StringBuilder_
  commentId: M:Wrap.LongId`1.PrintMembers(System.Text.StringBuilder)
  fullName: Wrap.LongId<TId>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Wrap.LongId(Of TId).PrintMembers(System.Text.StringBuilder)
  nameWithType: LongId<TId>.PrintMembers(StringBuilder)
  nameWithType.vb: LongId(Of TId).PrintMembers(StringBuilder)
- uid: Wrap.LongId`1.PrintMembers*
  name: PrintMembers
  href: api/Wrap.LongId-1.PrintMembers.html
  commentId: Overload:Wrap.LongId`1.PrintMembers
  fullName: Wrap.LongId<TId>.PrintMembers
  fullName.vb: Wrap.LongId(Of TId).PrintMembers
  nameWithType: LongId<TId>.PrintMembers
  nameWithType.vb: LongId(Of TId).PrintMembers
- uid: Wrap.LongId`1.ToString
  name: ToString()
  href: api/Wrap.LongId-1.ToString.html#Wrap_LongId_1_ToString
  commentId: M:Wrap.LongId`1.ToString
  fullName: Wrap.LongId<TId>.ToString()
  fullName.vb: Wrap.LongId(Of TId).ToString()
  nameWithType: LongId<TId>.ToString()
  nameWithType.vb: LongId(Of TId).ToString()
- uid: Wrap.LongId`1.ToString*
  name: ToString
  href: api/Wrap.LongId-1.ToString.html
  commentId: Overload:Wrap.LongId`1.ToString
  fullName: Wrap.LongId<TId>.ToString
  fullName.vb: Wrap.LongId(Of TId).ToString
  nameWithType: LongId<TId>.ToString
  nameWithType.vb: LongId(Of TId).ToString
- uid: Wrap.LongId`1.op_Equality(Wrap.LongId{`0},Wrap.LongId{`0})
  name: operator ==(LongId<TId>?, LongId<TId>?)
  href: api/Wrap.LongId-1.op_Equality.html#Wrap_LongId_1_op_Equality_Wrap_LongId__0__Wrap_LongId__0__
  commentId: M:Wrap.LongId`1.op_Equality(Wrap.LongId{`0},Wrap.LongId{`0})
  name.vb: =(LongId(Of TId), LongId(Of TId))
  fullName: Wrap.LongId<TId>.operator ==(Wrap.LongId<TId>?, Wrap.LongId<TId>?)
  fullName.vb: Wrap.LongId(Of TId).=(Wrap.LongId(Of TId), Wrap.LongId(Of TId))
  nameWithType: LongId<TId>.operator ==(LongId<TId>?, LongId<TId>?)
  nameWithType.vb: LongId(Of TId).=(LongId(Of TId), LongId(Of TId))
- uid: Wrap.LongId`1.op_Equality*
  name: operator ==
  href: api/Wrap.LongId-1.op_Equality.html
  commentId: Overload:Wrap.LongId`1.op_Equality
  name.vb: =
  fullName: Wrap.LongId<TId>.operator ==
  fullName.vb: Wrap.LongId(Of TId).=
  nameWithType: LongId<TId>.operator ==
  nameWithType.vb: LongId(Of TId).=
- uid: Wrap.LongId`1.op_Inequality(Wrap.LongId{`0},Wrap.LongId{`0})
  name: operator !=(LongId<TId>?, LongId<TId>?)
  href: api/Wrap.LongId-1.op_Inequality.html#Wrap_LongId_1_op_Inequality_Wrap_LongId__0__Wrap_LongId__0__
  commentId: M:Wrap.LongId`1.op_Inequality(Wrap.LongId{`0},Wrap.LongId{`0})
  name.vb: <>(LongId(Of TId), LongId(Of TId))
  fullName: Wrap.LongId<TId>.operator !=(Wrap.LongId<TId>?, Wrap.LongId<TId>?)
  fullName.vb: Wrap.LongId(Of TId).<>(Wrap.LongId(Of TId), Wrap.LongId(Of TId))
  nameWithType: LongId<TId>.operator !=(LongId<TId>?, LongId<TId>?)
  nameWithType.vb: LongId(Of TId).<>(LongId(Of TId), LongId(Of TId))
- uid: Wrap.LongId`1.op_Inequality*
  name: operator !=
  href: api/Wrap.LongId-1.op_Inequality.html
  commentId: Overload:Wrap.LongId`1.op_Inequality
  name.vb: <>
  fullName: Wrap.LongId<TId>.operator !=
  fullName.vb: Wrap.LongId(Of TId).<>
  nameWithType: LongId<TId>.operator !=
  nameWithType.vb: LongId(Of TId).<>
- uid: Wrap.M
  name: M
  href: api/Wrap.M.html
  commentId: T:Wrap.M
  fullName: Wrap.M
  nameWithType: M
- uid: Wrap.M.DefaultCulture
  name: DefaultCulture
  href: api/Wrap.M.DefaultCulture.html#Wrap_M_DefaultCulture
  commentId: P:Wrap.M.DefaultCulture
  fullName: Wrap.M.DefaultCulture
  nameWithType: M.DefaultCulture
- uid: Wrap.M.DefaultCulture*
  name: DefaultCulture
  href: api/Wrap.M.DefaultCulture.html
  commentId: Overload:Wrap.M.DefaultCulture
  fullName: Wrap.M.DefaultCulture
  nameWithType: M.DefaultCulture
- uid: Wrap.M.Match*
  name: Match
  href: api/Wrap.M.Match.html
  commentId: Overload:Wrap.M.Match
  fullName: Wrap.M.Match
  nameWithType: M.Match
- uid: Wrap.M.MatchAsync*
  name: MatchAsync
  href: api/Wrap.M.MatchAsync.html
  commentId: Overload:Wrap.M.MatchAsync
  fullName: Wrap.M.MatchAsync
  nameWithType: M.MatchAsync
- uid: Wrap.M.MatchAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: MatchAsync<T>(Task<Maybe<T>>, Func<Task>, Func<T, Task>)
  href: api/Wrap.M.MatchAsync.html#Wrap_M_MatchAsync__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.M.MatchAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task), Func(Of T, Task))
  fullName: Wrap.M.MatchAsync<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.M.MatchAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: M.MatchAsync<T>(Task<Maybe<T>>, Func<Task>, Func<T, Task>)
  nameWithType.vb: M.MatchAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task), Func(Of T, Task))
- uid: Wrap.M.MatchAsync``1(Wrap.Maybe{``0},System.Action,System.Func{``0,System.Threading.Tasks.Task})
  name: MatchAsync<T>(Maybe<T>, Action, Func<T, Task>)
  href: api/Wrap.M.MatchAsync.html#Wrap_M_MatchAsync__1_Wrap_Maybe___0__System_Action_System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.M.MatchAsync``1(Wrap.Maybe{``0},System.Action,System.Func{``0,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of T)(Maybe(Of T), Action, Func(Of T, Task))
  fullName: Wrap.M.MatchAsync<T>(Wrap.Maybe<T>, System.Action, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.M.MatchAsync(Of T)(Wrap.Maybe(Of T), System.Action, System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: M.MatchAsync<T>(Maybe<T>, Action, Func<T, Task>)
  nameWithType.vb: M.MatchAsync(Of T)(Maybe(Of T), Action, Func(Of T, Task))
- uid: Wrap.M.MatchAsync``1(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Action{``0})
  name: MatchAsync<T>(Maybe<T>, Func<Task>, Action<T>)
  href: api/Wrap.M.MatchAsync.html#Wrap_M_MatchAsync__1_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task__System_Action___0__
  commentId: M:Wrap.M.MatchAsync``1(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Action{``0})
  name.vb: MatchAsync(Of T)(Maybe(Of T), Func(Of Task), Action(Of T))
  fullName: Wrap.M.MatchAsync<T>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task>, System.Action<T>)
  fullName.vb: Wrap.M.MatchAsync(Of T)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task), System.Action(Of T))
  nameWithType: M.MatchAsync<T>(Maybe<T>, Func<Task>, Action<T>)
  nameWithType.vb: M.MatchAsync(Of T)(Maybe(Of T), Func(Of Task), Action(Of T))
- uid: Wrap.M.MatchAsync``1(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: MatchAsync<T>(Maybe<T>, Func<Task>, Func<T, Task>)
  href: api/Wrap.M.MatchAsync.html#Wrap_M_MatchAsync__1_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.M.MatchAsync``1(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of T)(Maybe(Of T), Func(Of Task), Func(Of T, Task))
  fullName: Wrap.M.MatchAsync<T>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.M.MatchAsync(Of T)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: M.MatchAsync<T>(Maybe<T>, Func<Task>, Func<T, Task>)
  nameWithType.vb: M.MatchAsync(Of T)(Maybe(Of T), Func(Of Task), Func(Of T, Task))
- uid: Wrap.M.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Wrap.M.MatchAsync.html#Wrap_M_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.M.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.M.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.M.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: M.MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: M.MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.M.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.M.MatchAsync.html#Wrap_M_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.M.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.M.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.M.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: M.MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: M.MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.M.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.M.MatchAsync.html#Wrap_M_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.M.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.M.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.M.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: M.MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: M.MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.M.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,``1})
  name: MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, TReturn>)
  href: api/Wrap.M.MatchAsync.html#Wrap_M_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___1__System_Func___0___1__
  commentId: M:Wrap.M.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,``1})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, TReturn))
  fullName: Wrap.M.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.M.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of TReturn), System.Func(Of T, TReturn))
  nameWithType: M.MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, TReturn>)
  nameWithType.vb: M.MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, TReturn))
- uid: Wrap.M.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, Task<TReturn>>)
  href: api/Wrap.M.MatchAsync.html#Wrap_M_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0_____1_System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.M.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, Task(Of TReturn)))
  fullName: Wrap.M.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, TReturn, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.M.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), TReturn, System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: M.MatchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, Task<TReturn>>)
  nameWithType.vb: M.MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, Task(Of TReturn)))
- uid: Wrap.M.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},``1,System.Func{``0,``1})
  name: MatchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, TReturn>)
  href: api/Wrap.M.MatchAsync.html#Wrap_M_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0_____1_System_Func___0___1__
  commentId: M:Wrap.M.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},``1,System.Func{``0,``1})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, TReturn))
  fullName: Wrap.M.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, TReturn, System.Func<T, TReturn>)
  fullName.vb: Wrap.M.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), TReturn, System.Func(Of T, TReturn))
  nameWithType: M.MatchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, TReturn>)
  nameWithType.vb: M.MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, TReturn))
- uid: Wrap.M.MatchAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Wrap.M.MatchAsync.html#Wrap_M_MatchAsync__2_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.M.MatchAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.M.MatchAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.M.MatchAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: M.MatchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: M.MatchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.M.MatchAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.M.MatchAsync.html#Wrap_M_MatchAsync__2_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.M.MatchAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.M.MatchAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.M.MatchAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: M.MatchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: M.MatchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.M.MatchAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.M.MatchAsync.html#Wrap_M_MatchAsync__2_Wrap_Maybe___0__System_Func___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.M.MatchAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.M.MatchAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.M.MatchAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: M.MatchAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: M.MatchAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.M.MatchAsync``2(Wrap.Maybe{``0},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Maybe<T>, TReturn, Func<T, Task<TReturn>>)
  href: api/Wrap.M.MatchAsync.html#Wrap_M_MatchAsync__2_Wrap_Maybe___0____1_System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.M.MatchAsync``2(Wrap.Maybe{``0},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, Task(Of TReturn)))
  fullName: Wrap.M.MatchAsync<T, TReturn>(Wrap.Maybe<T>, TReturn, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.M.MatchAsync(Of T, TReturn)(Wrap.Maybe(Of T), TReturn, System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: M.MatchAsync<T, TReturn>(Maybe<T>, TReturn, Func<T, Task<TReturn>>)
  nameWithType.vb: M.MatchAsync(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, Task(Of TReturn)))
- uid: Wrap.M.Match``1(Wrap.Maybe{``0},System.Action,System.Action{``0})
  name: Match<T>(Maybe<T>, Action, Action<T>)
  href: api/Wrap.M.Match.html#Wrap_M_Match__1_Wrap_Maybe___0__System_Action_System_Action___0__
  commentId: M:Wrap.M.Match``1(Wrap.Maybe{``0},System.Action,System.Action{``0})
  name.vb: Match(Of T)(Maybe(Of T), Action, Action(Of T))
  fullName: Wrap.M.Match<T>(Wrap.Maybe<T>, System.Action, System.Action<T>)
  fullName.vb: Wrap.M.Match(Of T)(Wrap.Maybe(Of T), System.Action, System.Action(Of T))
  nameWithType: M.Match<T>(Maybe<T>, Action, Action<T>)
  nameWithType.vb: M.Match(Of T)(Maybe(Of T), Action, Action(Of T))
- uid: Wrap.M.Match``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,``1})
  name: Match<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, TReturn>)
  href: api/Wrap.M.Match.html#Wrap_M_Match__2_Wrap_Maybe___0__System_Func___1__System_Func___0___1__
  commentId: M:Wrap.M.Match``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,``1})
  name.vb: Match(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, TReturn))
  fullName: Wrap.M.Match<T, TReturn>(Wrap.Maybe<T>, System.Func<TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.M.Match(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, TReturn))
  nameWithType: M.Match<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, TReturn>)
  nameWithType.vb: M.Match(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, TReturn))
- uid: Wrap.M.Match``2(Wrap.Maybe{``0},``1,System.Func{``0,``1})
  name: Match<T, TReturn>(Maybe<T>, TReturn, Func<T, TReturn>)
  href: api/Wrap.M.Match.html#Wrap_M_Match__2_Wrap_Maybe___0____1_System_Func___0___1__
  commentId: M:Wrap.M.Match``2(Wrap.Maybe{``0},``1,System.Func{``0,``1})
  name.vb: Match(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, TReturn))
  fullName: Wrap.M.Match<T, TReturn>(Wrap.Maybe<T>, TReturn, System.Func<T, TReturn>)
  fullName.vb: Wrap.M.Match(Of T, TReturn)(Wrap.Maybe(Of T), TReturn, System.Func(Of T, TReturn))
  nameWithType: M.Match<T, TReturn>(Maybe<T>, TReturn, Func<T, TReturn>)
  nameWithType.vb: M.Match(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, TReturn))
- uid: Wrap.M.None
  name: None
  href: api/Wrap.M.None.html#Wrap_M_None
  commentId: P:Wrap.M.None
  fullName: Wrap.M.None
  nameWithType: M.None
- uid: Wrap.M.None*
  name: None
  href: api/Wrap.M.None.html
  commentId: Overload:Wrap.M.None
  fullName: Wrap.M.None
  nameWithType: M.None
- uid: Wrap.M.ParseBool(System.ReadOnlySpan{System.Char})
  name: ParseBool(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseBool.html#Wrap_M_ParseBool_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseBool(System.ReadOnlySpan{System.Char})
  name.vb: ParseBool(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseBool(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseBool(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseBool(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseBool(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseBool(System.String)
  name: ParseBool(string?)
  href: api/Wrap.M.ParseBool.html#Wrap_M_ParseBool_System_String_
  commentId: M:Wrap.M.ParseBool(System.String)
  name.vb: ParseBool(String)
  fullName: Wrap.M.ParseBool(string?)
  fullName.vb: Wrap.M.ParseBool(String)
  nameWithType: M.ParseBool(string?)
  nameWithType.vb: M.ParseBool(String)
- uid: Wrap.M.ParseBool*
  name: ParseBool
  href: api/Wrap.M.ParseBool.html
  commentId: Overload:Wrap.M.ParseBool
  fullName: Wrap.M.ParseBool
  nameWithType: M.ParseBool
- uid: Wrap.M.ParseByte(System.ReadOnlySpan{System.Char})
  name: ParseByte(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseByte.html#Wrap_M_ParseByte_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseByte(System.ReadOnlySpan{System.Char})
  name.vb: ParseByte(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseByte(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseByte(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseByte(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseByte(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseByte(System.String)
  name: ParseByte(string?)
  href: api/Wrap.M.ParseByte.html#Wrap_M_ParseByte_System_String_
  commentId: M:Wrap.M.ParseByte(System.String)
  name.vb: ParseByte(String)
  fullName: Wrap.M.ParseByte(string?)
  fullName.vb: Wrap.M.ParseByte(String)
  nameWithType: M.ParseByte(string?)
  nameWithType.vb: M.ParseByte(String)
- uid: Wrap.M.ParseByte*
  name: ParseByte
  href: api/Wrap.M.ParseByte.html
  commentId: Overload:Wrap.M.ParseByte
  fullName: Wrap.M.ParseByte
  nameWithType: M.ParseByte
- uid: Wrap.M.ParseChar(System.String)
  name: ParseChar(string?)
  href: api/Wrap.M.ParseChar.html#Wrap_M_ParseChar_System_String_
  commentId: M:Wrap.M.ParseChar(System.String)
  name.vb: ParseChar(String)
  fullName: Wrap.M.ParseChar(string?)
  fullName.vb: Wrap.M.ParseChar(String)
  nameWithType: M.ParseChar(string?)
  nameWithType.vb: M.ParseChar(String)
- uid: Wrap.M.ParseChar*
  name: ParseChar
  href: api/Wrap.M.ParseChar.html
  commentId: Overload:Wrap.M.ParseChar
  fullName: Wrap.M.ParseChar
  nameWithType: M.ParseChar
- uid: Wrap.M.ParseDateOnly(System.ReadOnlySpan{System.Char})
  name: ParseDateOnly(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseDateOnly.html#Wrap_M_ParseDateOnly_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseDateOnly(System.ReadOnlySpan{System.Char})
  name.vb: ParseDateOnly(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseDateOnly(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseDateOnly(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseDateOnly(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseDateOnly(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseDateOnly(System.String)
  name: ParseDateOnly(string?)
  href: api/Wrap.M.ParseDateOnly.html#Wrap_M_ParseDateOnly_System_String_
  commentId: M:Wrap.M.ParseDateOnly(System.String)
  name.vb: ParseDateOnly(String)
  fullName: Wrap.M.ParseDateOnly(string?)
  fullName.vb: Wrap.M.ParseDateOnly(String)
  nameWithType: M.ParseDateOnly(string?)
  nameWithType.vb: M.ParseDateOnly(String)
- uid: Wrap.M.ParseDateOnly*
  name: ParseDateOnly
  href: api/Wrap.M.ParseDateOnly.html
  commentId: Overload:Wrap.M.ParseDateOnly
  fullName: Wrap.M.ParseDateOnly
  nameWithType: M.ParseDateOnly
- uid: Wrap.M.ParseDateTime(System.ReadOnlySpan{System.Char})
  name: ParseDateTime(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseDateTime.html#Wrap_M_ParseDateTime_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseDateTime(System.ReadOnlySpan{System.Char})
  name.vb: ParseDateTime(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseDateTime(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseDateTime(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseDateTime(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseDateTime(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseDateTime(System.String)
  name: ParseDateTime(string?)
  href: api/Wrap.M.ParseDateTime.html#Wrap_M_ParseDateTime_System_String_
  commentId: M:Wrap.M.ParseDateTime(System.String)
  name.vb: ParseDateTime(String)
  fullName: Wrap.M.ParseDateTime(string?)
  fullName.vb: Wrap.M.ParseDateTime(String)
  nameWithType: M.ParseDateTime(string?)
  nameWithType.vb: M.ParseDateTime(String)
- uid: Wrap.M.ParseDateTime*
  name: ParseDateTime
  href: api/Wrap.M.ParseDateTime.html
  commentId: Overload:Wrap.M.ParseDateTime
  fullName: Wrap.M.ParseDateTime
  nameWithType: M.ParseDateTime
- uid: Wrap.M.ParseDateTimeOffset(System.ReadOnlySpan{System.Char})
  name: ParseDateTimeOffset(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseDateTimeOffset.html#Wrap_M_ParseDateTimeOffset_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseDateTimeOffset(System.ReadOnlySpan{System.Char})
  name.vb: ParseDateTimeOffset(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseDateTimeOffset(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseDateTimeOffset(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseDateTimeOffset(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseDateTimeOffset(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseDateTimeOffset(System.String)
  name: ParseDateTimeOffset(string?)
  href: api/Wrap.M.ParseDateTimeOffset.html#Wrap_M_ParseDateTimeOffset_System_String_
  commentId: M:Wrap.M.ParseDateTimeOffset(System.String)
  name.vb: ParseDateTimeOffset(String)
  fullName: Wrap.M.ParseDateTimeOffset(string?)
  fullName.vb: Wrap.M.ParseDateTimeOffset(String)
  nameWithType: M.ParseDateTimeOffset(string?)
  nameWithType.vb: M.ParseDateTimeOffset(String)
- uid: Wrap.M.ParseDateTimeOffset*
  name: ParseDateTimeOffset
  href: api/Wrap.M.ParseDateTimeOffset.html
  commentId: Overload:Wrap.M.ParseDateTimeOffset
  fullName: Wrap.M.ParseDateTimeOffset
  nameWithType: M.ParseDateTimeOffset
- uid: Wrap.M.ParseDecimal(System.ReadOnlySpan{System.Char})
  name: ParseDecimal(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseDecimal.html#Wrap_M_ParseDecimal_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseDecimal(System.ReadOnlySpan{System.Char})
  name.vb: ParseDecimal(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseDecimal(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseDecimal(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseDecimal(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseDecimal(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseDecimal(System.String)
  name: ParseDecimal(string?)
  href: api/Wrap.M.ParseDecimal.html#Wrap_M_ParseDecimal_System_String_
  commentId: M:Wrap.M.ParseDecimal(System.String)
  name.vb: ParseDecimal(String)
  fullName: Wrap.M.ParseDecimal(string?)
  fullName.vb: Wrap.M.ParseDecimal(String)
  nameWithType: M.ParseDecimal(string?)
  nameWithType.vb: M.ParseDecimal(String)
- uid: Wrap.M.ParseDecimal*
  name: ParseDecimal
  href: api/Wrap.M.ParseDecimal.html
  commentId: Overload:Wrap.M.ParseDecimal
  fullName: Wrap.M.ParseDecimal
  nameWithType: M.ParseDecimal
- uid: Wrap.M.ParseDouble(System.ReadOnlySpan{System.Char})
  name: ParseDouble(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseDouble.html#Wrap_M_ParseDouble_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseDouble(System.ReadOnlySpan{System.Char})
  name.vb: ParseDouble(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseDouble(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseDouble(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseDouble(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseDouble(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseDouble(System.String)
  name: ParseDouble(string?)
  href: api/Wrap.M.ParseDouble.html#Wrap_M_ParseDouble_System_String_
  commentId: M:Wrap.M.ParseDouble(System.String)
  name.vb: ParseDouble(String)
  fullName: Wrap.M.ParseDouble(string?)
  fullName.vb: Wrap.M.ParseDouble(String)
  nameWithType: M.ParseDouble(string?)
  nameWithType.vb: M.ParseDouble(String)
- uid: Wrap.M.ParseDouble*
  name: ParseDouble
  href: api/Wrap.M.ParseDouble.html
  commentId: Overload:Wrap.M.ParseDouble
  fullName: Wrap.M.ParseDouble
  nameWithType: M.ParseDouble
- uid: Wrap.M.ParseGuid(System.ReadOnlySpan{System.Char})
  name: ParseGuid(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseGuid.html#Wrap_M_ParseGuid_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseGuid(System.ReadOnlySpan{System.Char})
  name.vb: ParseGuid(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseGuid(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseGuid(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseGuid(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseGuid(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseGuid(System.String)
  name: ParseGuid(string?)
  href: api/Wrap.M.ParseGuid.html#Wrap_M_ParseGuid_System_String_
  commentId: M:Wrap.M.ParseGuid(System.String)
  name.vb: ParseGuid(String)
  fullName: Wrap.M.ParseGuid(string?)
  fullName.vb: Wrap.M.ParseGuid(String)
  nameWithType: M.ParseGuid(string?)
  nameWithType.vb: M.ParseGuid(String)
- uid: Wrap.M.ParseGuid*
  name: ParseGuid
  href: api/Wrap.M.ParseGuid.html
  commentId: Overload:Wrap.M.ParseGuid
  fullName: Wrap.M.ParseGuid
  nameWithType: M.ParseGuid
- uid: Wrap.M.ParseInt16(System.ReadOnlySpan{System.Char})
  name: ParseInt16(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseInt16.html#Wrap_M_ParseInt16_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseInt16(System.ReadOnlySpan{System.Char})
  name.vb: ParseInt16(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseInt16(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseInt16(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseInt16(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseInt16(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseInt16(System.String)
  name: ParseInt16(string?)
  href: api/Wrap.M.ParseInt16.html#Wrap_M_ParseInt16_System_String_
  commentId: M:Wrap.M.ParseInt16(System.String)
  name.vb: ParseInt16(String)
  fullName: Wrap.M.ParseInt16(string?)
  fullName.vb: Wrap.M.ParseInt16(String)
  nameWithType: M.ParseInt16(string?)
  nameWithType.vb: M.ParseInt16(String)
- uid: Wrap.M.ParseInt16*
  name: ParseInt16
  href: api/Wrap.M.ParseInt16.html
  commentId: Overload:Wrap.M.ParseInt16
  fullName: Wrap.M.ParseInt16
  nameWithType: M.ParseInt16
- uid: Wrap.M.ParseInt32(System.ReadOnlySpan{System.Char})
  name: ParseInt32(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseInt32.html#Wrap_M_ParseInt32_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseInt32(System.ReadOnlySpan{System.Char})
  name.vb: ParseInt32(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseInt32(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseInt32(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseInt32(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseInt32(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseInt32(System.String)
  name: ParseInt32(string?)
  href: api/Wrap.M.ParseInt32.html#Wrap_M_ParseInt32_System_String_
  commentId: M:Wrap.M.ParseInt32(System.String)
  name.vb: ParseInt32(String)
  fullName: Wrap.M.ParseInt32(string?)
  fullName.vb: Wrap.M.ParseInt32(String)
  nameWithType: M.ParseInt32(string?)
  nameWithType.vb: M.ParseInt32(String)
- uid: Wrap.M.ParseInt32*
  name: ParseInt32
  href: api/Wrap.M.ParseInt32.html
  commentId: Overload:Wrap.M.ParseInt32
  fullName: Wrap.M.ParseInt32
  nameWithType: M.ParseInt32
- uid: Wrap.M.ParseInt64(System.ReadOnlySpan{System.Char})
  name: ParseInt64(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseInt64.html#Wrap_M_ParseInt64_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseInt64(System.ReadOnlySpan{System.Char})
  name.vb: ParseInt64(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseInt64(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseInt64(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseInt64(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseInt64(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseInt64(System.String)
  name: ParseInt64(string?)
  href: api/Wrap.M.ParseInt64.html#Wrap_M_ParseInt64_System_String_
  commentId: M:Wrap.M.ParseInt64(System.String)
  name.vb: ParseInt64(String)
  fullName: Wrap.M.ParseInt64(string?)
  fullName.vb: Wrap.M.ParseInt64(String)
  nameWithType: M.ParseInt64(string?)
  nameWithType.vb: M.ParseInt64(String)
- uid: Wrap.M.ParseInt64*
  name: ParseInt64
  href: api/Wrap.M.ParseInt64.html
  commentId: Overload:Wrap.M.ParseInt64
  fullName: Wrap.M.ParseInt64
  nameWithType: M.ParseInt64
- uid: Wrap.M.ParseIntPtr(System.ReadOnlySpan{System.Char})
  name: ParseIntPtr(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseIntPtr.html#Wrap_M_ParseIntPtr_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseIntPtr(System.ReadOnlySpan{System.Char})
  name.vb: ParseIntPtr(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseIntPtr(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseIntPtr(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseIntPtr(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseIntPtr(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseIntPtr(System.String)
  name: ParseIntPtr(string?)
  href: api/Wrap.M.ParseIntPtr.html#Wrap_M_ParseIntPtr_System_String_
  commentId: M:Wrap.M.ParseIntPtr(System.String)
  name.vb: ParseIntPtr(String)
  fullName: Wrap.M.ParseIntPtr(string?)
  fullName.vb: Wrap.M.ParseIntPtr(String)
  nameWithType: M.ParseIntPtr(string?)
  nameWithType.vb: M.ParseIntPtr(String)
- uid: Wrap.M.ParseIntPtr*
  name: ParseIntPtr
  href: api/Wrap.M.ParseIntPtr.html
  commentId: Overload:Wrap.M.ParseIntPtr
  fullName: Wrap.M.ParseIntPtr
  nameWithType: M.ParseIntPtr
- uid: Wrap.M.ParseSByte(System.ReadOnlySpan{System.Char})
  name: ParseSByte(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseSByte.html#Wrap_M_ParseSByte_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseSByte(System.ReadOnlySpan{System.Char})
  name.vb: ParseSByte(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseSByte(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseSByte(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseSByte(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseSByte(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseSByte(System.String)
  name: ParseSByte(string?)
  href: api/Wrap.M.ParseSByte.html#Wrap_M_ParseSByte_System_String_
  commentId: M:Wrap.M.ParseSByte(System.String)
  name.vb: ParseSByte(String)
  fullName: Wrap.M.ParseSByte(string?)
  fullName.vb: Wrap.M.ParseSByte(String)
  nameWithType: M.ParseSByte(string?)
  nameWithType.vb: M.ParseSByte(String)
- uid: Wrap.M.ParseSByte*
  name: ParseSByte
  href: api/Wrap.M.ParseSByte.html
  commentId: Overload:Wrap.M.ParseSByte
  fullName: Wrap.M.ParseSByte
  nameWithType: M.ParseSByte
- uid: Wrap.M.ParseSingle(System.ReadOnlySpan{System.Char})
  name: ParseSingle(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseSingle.html#Wrap_M_ParseSingle_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseSingle(System.ReadOnlySpan{System.Char})
  name.vb: ParseSingle(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseSingle(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseSingle(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseSingle(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseSingle(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseSingle(System.String)
  name: ParseSingle(string?)
  href: api/Wrap.M.ParseSingle.html#Wrap_M_ParseSingle_System_String_
  commentId: M:Wrap.M.ParseSingle(System.String)
  name.vb: ParseSingle(String)
  fullName: Wrap.M.ParseSingle(string?)
  fullName.vb: Wrap.M.ParseSingle(String)
  nameWithType: M.ParseSingle(string?)
  nameWithType.vb: M.ParseSingle(String)
- uid: Wrap.M.ParseSingle*
  name: ParseSingle
  href: api/Wrap.M.ParseSingle.html
  commentId: Overload:Wrap.M.ParseSingle
  fullName: Wrap.M.ParseSingle
  nameWithType: M.ParseSingle
- uid: Wrap.M.ParseTimeOnly(System.ReadOnlySpan{System.Char})
  name: ParseTimeOnly(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseTimeOnly.html#Wrap_M_ParseTimeOnly_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseTimeOnly(System.ReadOnlySpan{System.Char})
  name.vb: ParseTimeOnly(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseTimeOnly(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseTimeOnly(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseTimeOnly(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseTimeOnly(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseTimeOnly(System.String)
  name: ParseTimeOnly(string?)
  href: api/Wrap.M.ParseTimeOnly.html#Wrap_M_ParseTimeOnly_System_String_
  commentId: M:Wrap.M.ParseTimeOnly(System.String)
  name.vb: ParseTimeOnly(String)
  fullName: Wrap.M.ParseTimeOnly(string?)
  fullName.vb: Wrap.M.ParseTimeOnly(String)
  nameWithType: M.ParseTimeOnly(string?)
  nameWithType.vb: M.ParseTimeOnly(String)
- uid: Wrap.M.ParseTimeOnly*
  name: ParseTimeOnly
  href: api/Wrap.M.ParseTimeOnly.html
  commentId: Overload:Wrap.M.ParseTimeOnly
  fullName: Wrap.M.ParseTimeOnly
  nameWithType: M.ParseTimeOnly
- uid: Wrap.M.ParseUInt16(System.ReadOnlySpan{System.Char})
  name: ParseUInt16(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseUInt16.html#Wrap_M_ParseUInt16_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseUInt16(System.ReadOnlySpan{System.Char})
  name.vb: ParseUInt16(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseUInt16(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseUInt16(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseUInt16(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseUInt16(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseUInt16(System.String)
  name: ParseUInt16(string?)
  href: api/Wrap.M.ParseUInt16.html#Wrap_M_ParseUInt16_System_String_
  commentId: M:Wrap.M.ParseUInt16(System.String)
  name.vb: ParseUInt16(String)
  fullName: Wrap.M.ParseUInt16(string?)
  fullName.vb: Wrap.M.ParseUInt16(String)
  nameWithType: M.ParseUInt16(string?)
  nameWithType.vb: M.ParseUInt16(String)
- uid: Wrap.M.ParseUInt16*
  name: ParseUInt16
  href: api/Wrap.M.ParseUInt16.html
  commentId: Overload:Wrap.M.ParseUInt16
  fullName: Wrap.M.ParseUInt16
  nameWithType: M.ParseUInt16
- uid: Wrap.M.ParseUInt32(System.ReadOnlySpan{System.Char})
  name: ParseUInt32(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseUInt32.html#Wrap_M_ParseUInt32_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseUInt32(System.ReadOnlySpan{System.Char})
  name.vb: ParseUInt32(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseUInt32(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseUInt32(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseUInt32(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseUInt32(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseUInt32(System.String)
  name: ParseUInt32(string?)
  href: api/Wrap.M.ParseUInt32.html#Wrap_M_ParseUInt32_System_String_
  commentId: M:Wrap.M.ParseUInt32(System.String)
  name.vb: ParseUInt32(String)
  fullName: Wrap.M.ParseUInt32(string?)
  fullName.vb: Wrap.M.ParseUInt32(String)
  nameWithType: M.ParseUInt32(string?)
  nameWithType.vb: M.ParseUInt32(String)
- uid: Wrap.M.ParseUInt32*
  name: ParseUInt32
  href: api/Wrap.M.ParseUInt32.html
  commentId: Overload:Wrap.M.ParseUInt32
  fullName: Wrap.M.ParseUInt32
  nameWithType: M.ParseUInt32
- uid: Wrap.M.ParseUInt64(System.ReadOnlySpan{System.Char})
  name: ParseUInt64(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseUInt64.html#Wrap_M_ParseUInt64_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseUInt64(System.ReadOnlySpan{System.Char})
  name.vb: ParseUInt64(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseUInt64(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseUInt64(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseUInt64(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseUInt64(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseUInt64(System.String)
  name: ParseUInt64(string?)
  href: api/Wrap.M.ParseUInt64.html#Wrap_M_ParseUInt64_System_String_
  commentId: M:Wrap.M.ParseUInt64(System.String)
  name.vb: ParseUInt64(String)
  fullName: Wrap.M.ParseUInt64(string?)
  fullName.vb: Wrap.M.ParseUInt64(String)
  nameWithType: M.ParseUInt64(string?)
  nameWithType.vb: M.ParseUInt64(String)
- uid: Wrap.M.ParseUInt64*
  name: ParseUInt64
  href: api/Wrap.M.ParseUInt64.html
  commentId: Overload:Wrap.M.ParseUInt64
  fullName: Wrap.M.ParseUInt64
  nameWithType: M.ParseUInt64
- uid: Wrap.M.ParseUIntPtr(System.ReadOnlySpan{System.Char})
  name: ParseUIntPtr(ReadOnlySpan<char>)
  href: api/Wrap.M.ParseUIntPtr.html#Wrap_M_ParseUIntPtr_System_ReadOnlySpan_System_Char__
  commentId: M:Wrap.M.ParseUIntPtr(System.ReadOnlySpan{System.Char})
  name.vb: ParseUIntPtr(ReadOnlySpan(Of Char))
  fullName: Wrap.M.ParseUIntPtr(System.ReadOnlySpan<char>)
  fullName.vb: Wrap.M.ParseUIntPtr(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseUIntPtr(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseUIntPtr(ReadOnlySpan(Of Char))
- uid: Wrap.M.ParseUIntPtr(System.String)
  name: ParseUIntPtr(string?)
  href: api/Wrap.M.ParseUIntPtr.html#Wrap_M_ParseUIntPtr_System_String_
  commentId: M:Wrap.M.ParseUIntPtr(System.String)
  name.vb: ParseUIntPtr(String)
  fullName: Wrap.M.ParseUIntPtr(string?)
  fullName.vb: Wrap.M.ParseUIntPtr(String)
  nameWithType: M.ParseUIntPtr(string?)
  nameWithType.vb: M.ParseUIntPtr(String)
- uid: Wrap.M.ParseUIntPtr*
  name: ParseUIntPtr
  href: api/Wrap.M.ParseUIntPtr.html
  commentId: Overload:Wrap.M.ParseUIntPtr
  fullName: Wrap.M.ParseUIntPtr
  nameWithType: M.ParseUIntPtr
- uid: Wrap.M.Wrap*
  name: Wrap
  href: api/Wrap.M.Wrap.html
  commentId: Overload:Wrap.M.Wrap
  fullName: Wrap.M.Wrap
  nameWithType: M.Wrap
- uid: Wrap.M.Wrap``1(``0)
  name: Wrap<T>(T)
  href: api/Wrap.M.Wrap.html#Wrap_M_Wrap__1___0_
  commentId: M:Wrap.M.Wrap``1(``0)
  name.vb: Wrap(Of T)(T)
  fullName: Wrap.M.Wrap<T>(T)
  fullName.vb: Wrap.M.Wrap(Of T)(T)
  nameWithType: M.Wrap<T>(T)
  nameWithType.vb: M.Wrap(Of T)(T)
- uid: Wrap.MaybeExtensions
  name: MaybeExtensions
  href: api/Wrap.MaybeExtensions.html
  commentId: T:Wrap.MaybeExtensions
  fullName: Wrap.MaybeExtensions
  nameWithType: MaybeExtensions
- uid: Wrap.MaybeExtensions.Audit*
  name: Audit
  href: api/Wrap.MaybeExtensions.Audit.html
  commentId: Overload:Wrap.MaybeExtensions.Audit
  fullName: Wrap.MaybeExtensions.Audit
  nameWithType: MaybeExtensions.Audit
- uid: Wrap.MaybeExtensions.AuditAsync*
  name: AuditAsync
  href: api/Wrap.MaybeExtensions.AuditAsync.html
  commentId: Overload:Wrap.MaybeExtensions.AuditAsync
  fullName: Wrap.MaybeExtensions.AuditAsync
  nameWithType: MaybeExtensions.AuditAsync
- uid: Wrap.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Action,System.Action{``0})
  name: AuditAsync<T>(Task<Maybe<T>>, Action?, Action<T>?)
  href: api/Wrap.MaybeExtensions.AuditAsync.html#Wrap_MaybeExtensions_AuditAsync__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Action_System_Action___0__
  commentId: M:Wrap.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Action,System.Action{``0})
  name.vb: AuditAsync(Of T)(Task(Of Maybe(Of T)), Action, Action(Of T))
  fullName: Wrap.MaybeExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Action?, System.Action<T>?)
  fullName.vb: Wrap.MaybeExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Action, System.Action(Of T))
  nameWithType: MaybeExtensions.AuditAsync<T>(Task<Maybe<T>>, Action?, Action<T>?)
  nameWithType.vb: MaybeExtensions.AuditAsync(Of T)(Task(Of Maybe(Of T)), Action, Action(Of T))
- uid: Wrap.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Action{Wrap.Maybe{``0}})
  name: AuditAsync<T>(Task<Maybe<T>>, Action<Maybe<T>>)
  href: api/Wrap.MaybeExtensions.AuditAsync.html#Wrap_MaybeExtensions_AuditAsync__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Action_Wrap_Maybe___0___
  commentId: M:Wrap.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Action{Wrap.Maybe{``0}})
  name.vb: AuditAsync(Of T)(Task(Of Maybe(Of T)), Action(Of Maybe(Of T)))
  fullName: Wrap.MaybeExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Action<Wrap.Maybe<T>>)
  fullName.vb: Wrap.MaybeExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Action(Of Wrap.Maybe(Of T)))
  nameWithType: MaybeExtensions.AuditAsync<T>(Task<Maybe<T>>, Action<Maybe<T>>)
  nameWithType.vb: MaybeExtensions.AuditAsync(Of T)(Task(Of Maybe(Of T)), Action(Of Maybe(Of T)))
- uid: Wrap.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: AuditAsync<T>(Task<Maybe<T>>, Func<Task>?, Func<T, Task>?)
  href: api/Wrap.MaybeExtensions.AuditAsync.html#Wrap_MaybeExtensions_AuditAsync__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task), Func(Of T, Task))
  fullName: Wrap.MaybeExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task>?, System.Func<T, System.Threading.Tasks.Task>?)
  fullName.vb: Wrap.MaybeExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.AuditAsync<T>(Task<Maybe<T>>, Func<Task>?, Func<T, Task>?)
  nameWithType.vb: MaybeExtensions.AuditAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task), Func(Of T, Task))
- uid: Wrap.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{Wrap.Maybe{``0},System.Threading.Tasks.Task})
  name: AuditAsync<T>(Task<Maybe<T>>, Func<Maybe<T>, Task>)
  href: api/Wrap.MaybeExtensions.AuditAsync.html#Wrap_MaybeExtensions_AuditAsync__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_Wrap_Maybe___0__System_Threading_Tasks_Task__
  commentId: M:Wrap.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{Wrap.Maybe{``0},System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Maybe(Of T), Task))
  fullName: Wrap.MaybeExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<Wrap.Maybe<T>, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.MaybeExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of Wrap.Maybe(Of T), System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.AuditAsync<T>(Task<Maybe<T>>, Func<Maybe<T>, Task>)
  nameWithType.vb: MaybeExtensions.AuditAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Maybe(Of T), Task))
- uid: Wrap.MaybeExtensions.AuditAsync``1(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: AuditAsync<T>(Maybe<T>, Func<Task>?, Func<T, Task>?)
  href: api/Wrap.MaybeExtensions.AuditAsync.html#Wrap_MaybeExtensions_AuditAsync__1_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.MaybeExtensions.AuditAsync``1(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Maybe(Of T), Func(Of Task), Func(Of T, Task))
  fullName: Wrap.MaybeExtensions.AuditAsync<T>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task>?, System.Func<T, System.Threading.Tasks.Task>?)
  fullName.vb: Wrap.MaybeExtensions.AuditAsync(Of T)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.AuditAsync<T>(Maybe<T>, Func<Task>?, Func<T, Task>?)
  nameWithType.vb: MaybeExtensions.AuditAsync(Of T)(Maybe(Of T), Func(Of Task), Func(Of T, Task))
- uid: Wrap.MaybeExtensions.AuditAsync``1(Wrap.Maybe{``0},System.Func{Wrap.Maybe{``0},System.Threading.Tasks.Task})
  name: AuditAsync<T>(Maybe<T>, Func<Maybe<T>, Task>)
  href: api/Wrap.MaybeExtensions.AuditAsync.html#Wrap_MaybeExtensions_AuditAsync__1_Wrap_Maybe___0__System_Func_Wrap_Maybe___0__System_Threading_Tasks_Task__
  commentId: M:Wrap.MaybeExtensions.AuditAsync``1(Wrap.Maybe{``0},System.Func{Wrap.Maybe{``0},System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Maybe(Of T), Func(Of Maybe(Of T), Task))
  fullName: Wrap.MaybeExtensions.AuditAsync<T>(Wrap.Maybe<T>, System.Func<Wrap.Maybe<T>, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.MaybeExtensions.AuditAsync(Of T)(Wrap.Maybe(Of T), System.Func(Of Wrap.Maybe(Of T), System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.AuditAsync<T>(Maybe<T>, Func<Maybe<T>, Task>)
  nameWithType.vb: MaybeExtensions.AuditAsync(Of T)(Maybe(Of T), Func(Of Maybe(Of T), Task))
- uid: Wrap.MaybeExtensions.Audit``1(Wrap.Maybe{``0},System.Action,System.Action{``0})
  name: Audit<T>(Maybe<T>, Action?, Action<T>?)
  href: api/Wrap.MaybeExtensions.Audit.html#Wrap_MaybeExtensions_Audit__1_Wrap_Maybe___0__System_Action_System_Action___0__
  commentId: M:Wrap.MaybeExtensions.Audit``1(Wrap.Maybe{``0},System.Action,System.Action{``0})
  name.vb: Audit(Of T)(Maybe(Of T), Action, Action(Of T))
  fullName: Wrap.MaybeExtensions.Audit<T>(Wrap.Maybe<T>, System.Action?, System.Action<T>?)
  fullName.vb: Wrap.MaybeExtensions.Audit(Of T)(Wrap.Maybe(Of T), System.Action, System.Action(Of T))
  nameWithType: MaybeExtensions.Audit<T>(Maybe<T>, Action?, Action<T>?)
  nameWithType.vb: MaybeExtensions.Audit(Of T)(Maybe(Of T), Action, Action(Of T))
- uid: Wrap.MaybeExtensions.Audit``1(Wrap.Maybe{``0},System.Action{Wrap.Maybe{``0}})
  name: Audit<T>(Maybe<T>, Action<Maybe<T>>)
  href: api/Wrap.MaybeExtensions.Audit.html#Wrap_MaybeExtensions_Audit__1_Wrap_Maybe___0__System_Action_Wrap_Maybe___0___
  commentId: M:Wrap.MaybeExtensions.Audit``1(Wrap.Maybe{``0},System.Action{Wrap.Maybe{``0}})
  name.vb: Audit(Of T)(Maybe(Of T), Action(Of Maybe(Of T)))
  fullName: Wrap.MaybeExtensions.Audit<T>(Wrap.Maybe<T>, System.Action<Wrap.Maybe<T>>)
  fullName.vb: Wrap.MaybeExtensions.Audit(Of T)(Wrap.Maybe(Of T), System.Action(Of Wrap.Maybe(Of T)))
  nameWithType: MaybeExtensions.Audit<T>(Maybe<T>, Action<Maybe<T>>)
  nameWithType.vb: MaybeExtensions.Audit(Of T)(Maybe(Of T), Action(Of Maybe(Of T)))
- uid: Wrap.MaybeExtensions.Bind*
  name: Bind
  href: api/Wrap.MaybeExtensions.Bind.html
  commentId: Overload:Wrap.MaybeExtensions.Bind
  fullName: Wrap.MaybeExtensions.Bind
  nameWithType: MaybeExtensions.Bind
- uid: Wrap.MaybeExtensions.BindAsync*
  name: BindAsync
  href: api/Wrap.MaybeExtensions.BindAsync.html
  commentId: Overload:Wrap.MaybeExtensions.BindAsync
  fullName: Wrap.MaybeExtensions.BindAsync
  nameWithType: MaybeExtensions.BindAsync
- uid: Wrap.MaybeExtensions.BindAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name: BindAsync<T, TReturn>(Task<Maybe<T>>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Wrap.MaybeExtensions.BindAsync.html#Wrap_MaybeExtensions_BindAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_Wrap_Maybe___1____
  commentId: M:Wrap.MaybeExtensions.BindAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name.vb: BindAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Wrap.MaybeExtensions.BindAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<Wrap.Maybe<TReturn>>>)
  fullName.vb: Wrap.MaybeExtensions.BindAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Wrap.Maybe(Of TReturn))))
  nameWithType: MaybeExtensions.BindAsync<T, TReturn>(Task<Maybe<T>>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: MaybeExtensions.BindAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Wrap.MaybeExtensions.BindAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,Wrap.Maybe{``1}})
  name: BindAsync<T, TReturn>(Task<Maybe<T>>, Func<T, Maybe<TReturn>>)
  href: api/Wrap.MaybeExtensions.BindAsync.html#Wrap_MaybeExtensions_BindAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___0_Wrap_Maybe___1___
  commentId: M:Wrap.MaybeExtensions.BindAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,Wrap.Maybe{``1}})
  name.vb: BindAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Maybe(Of TReturn)))
  fullName: Wrap.MaybeExtensions.BindAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<T, Wrap.Maybe<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.BindAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of T, Wrap.Maybe(Of TReturn)))
  nameWithType: MaybeExtensions.BindAsync<T, TReturn>(Task<Maybe<T>>, Func<T, Maybe<TReturn>>)
  nameWithType.vb: MaybeExtensions.BindAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Maybe(Of TReturn)))
- uid: Wrap.MaybeExtensions.BindAsync``2(Wrap.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name: BindAsync<T, TReturn>(Maybe<T>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Wrap.MaybeExtensions.BindAsync.html#Wrap_MaybeExtensions_BindAsync__2_Wrap_Maybe___0__System_Func___0_System_Threading_Tasks_Task_Wrap_Maybe___1____
  commentId: M:Wrap.MaybeExtensions.BindAsync``2(Wrap.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{Wrap.Maybe{``1}}})
  name.vb: BindAsync(Of T, TReturn)(Maybe(Of T), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Wrap.MaybeExtensions.BindAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<T, System.Threading.Tasks.Task<Wrap.Maybe<TReturn>>>)
  fullName.vb: Wrap.MaybeExtensions.BindAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Wrap.Maybe(Of TReturn))))
  nameWithType: MaybeExtensions.BindAsync<T, TReturn>(Maybe<T>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: MaybeExtensions.BindAsync(Of T, TReturn)(Maybe(Of T), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Wrap.MaybeExtensions.Bind``2(Wrap.Maybe{``0},System.Func{``0,Wrap.Maybe{``1}})
  name: Bind<T, TReturn>(Maybe<T>, Func<T, Maybe<TReturn>>)
  href: api/Wrap.MaybeExtensions.Bind.html#Wrap_MaybeExtensions_Bind__2_Wrap_Maybe___0__System_Func___0_Wrap_Maybe___1___
  commentId: M:Wrap.MaybeExtensions.Bind``2(Wrap.Maybe{``0},System.Func{``0,Wrap.Maybe{``1}})
  name.vb: Bind(Of T, TReturn)(Maybe(Of T), Func(Of T, Maybe(Of TReturn)))
  fullName: Wrap.MaybeExtensions.Bind<T, TReturn>(Wrap.Maybe<T>, System.Func<T, Wrap.Maybe<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.Bind(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of T, Wrap.Maybe(Of TReturn)))
  nameWithType: MaybeExtensions.Bind<T, TReturn>(Maybe<T>, Func<T, Maybe<TReturn>>)
  nameWithType.vb: MaybeExtensions.Bind(Of T, TReturn)(Maybe(Of T), Func(Of T, Maybe(Of TReturn)))
- uid: Wrap.MaybeExtensions.Filter*
  name: Filter
  href: api/Wrap.MaybeExtensions.Filter.html
  commentId: Overload:Wrap.MaybeExtensions.Filter
  fullName: Wrap.MaybeExtensions.Filter
  nameWithType: MaybeExtensions.Filter
- uid: Wrap.MaybeExtensions.FilterAsync*
  name: FilterAsync
  href: api/Wrap.MaybeExtensions.FilterAsync.html
  commentId: Overload:Wrap.MaybeExtensions.FilterAsync
  fullName: Wrap.MaybeExtensions.FilterAsync
  nameWithType: MaybeExtensions.FilterAsync
- uid: Wrap.MaybeExtensions.FilterAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Boolean})
  name: FilterAsync<T>(Task<Maybe<T>>, Func<T, bool>)
  href: api/Wrap.MaybeExtensions.FilterAsync.html#Wrap_MaybeExtensions_FilterAsync__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___0_System_Boolean__
  commentId: M:Wrap.MaybeExtensions.FilterAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Boolean})
  name.vb: FilterAsync(Of T)(Task(Of Maybe(Of T)), Func(Of T, Boolean))
  fullName: Wrap.MaybeExtensions.FilterAsync<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<T, bool>)
  fullName.vb: Wrap.MaybeExtensions.FilterAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of T, Boolean))
  nameWithType: MaybeExtensions.FilterAsync<T>(Task<Maybe<T>>, Func<T, bool>)
  nameWithType.vb: MaybeExtensions.FilterAsync(Of T)(Task(Of Maybe(Of T)), Func(Of T, Boolean))
- uid: Wrap.MaybeExtensions.FilterAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: FilterAsync<T>(Task<Maybe<T>>, Func<T, Task<bool>>)
  href: api/Wrap.MaybeExtensions.FilterAsync.html#Wrap_MaybeExtensions_FilterAsync__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Wrap.MaybeExtensions.FilterAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: FilterAsync(Of T)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
  fullName: Wrap.MaybeExtensions.FilterAsync<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Wrap.MaybeExtensions.FilterAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: MaybeExtensions.FilterAsync<T>(Task<Maybe<T>>, Func<T, Task<bool>>)
  nameWithType.vb: MaybeExtensions.FilterAsync(Of T)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
- uid: Wrap.MaybeExtensions.FilterAsync``1(Wrap.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: FilterAsync<T>(Maybe<T>, Func<T, Task<bool>>)
  href: api/Wrap.MaybeExtensions.FilterAsync.html#Wrap_MaybeExtensions_FilterAsync__1_Wrap_Maybe___0__System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Wrap.MaybeExtensions.FilterAsync``1(Wrap.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: FilterAsync(Of T)(Maybe(Of T), Func(Of T, Task(Of Boolean)))
  fullName: Wrap.MaybeExtensions.FilterAsync<T>(Wrap.Maybe<T>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Wrap.MaybeExtensions.FilterAsync(Of T)(Wrap.Maybe(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: MaybeExtensions.FilterAsync<T>(Maybe<T>, Func<T, Task<bool>>)
  nameWithType.vb: MaybeExtensions.FilterAsync(Of T)(Maybe(Of T), Func(Of T, Task(Of Boolean)))
- uid: Wrap.MaybeExtensions.Filter``1(Wrap.Maybe{``0},System.Func{``0,System.Boolean})
  name: Filter<T>(Maybe<T>, Func<T, bool>)
  href: api/Wrap.MaybeExtensions.Filter.html#Wrap_MaybeExtensions_Filter__1_Wrap_Maybe___0__System_Func___0_System_Boolean__
  commentId: M:Wrap.MaybeExtensions.Filter``1(Wrap.Maybe{``0},System.Func{``0,System.Boolean})
  name.vb: Filter(Of T)(Maybe(Of T), Func(Of T, Boolean))
  fullName: Wrap.MaybeExtensions.Filter<T>(Wrap.Maybe<T>, System.Func<T, bool>)
  fullName.vb: Wrap.MaybeExtensions.Filter(Of T)(Wrap.Maybe(Of T), System.Func(Of T, Boolean))
  nameWithType: MaybeExtensions.Filter<T>(Maybe<T>, Func<T, bool>)
  nameWithType.vb: MaybeExtensions.Filter(Of T)(Maybe(Of T), Func(Of T, Boolean))
- uid: Wrap.MaybeExtensions.IfNone*
  name: IfNone
  href: api/Wrap.MaybeExtensions.IfNone.html
  commentId: Overload:Wrap.MaybeExtensions.IfNone
  fullName: Wrap.MaybeExtensions.IfNone
  nameWithType: MaybeExtensions.IfNone
- uid: Wrap.MaybeExtensions.IfNoneAsync*
  name: IfNoneAsync
  href: api/Wrap.MaybeExtensions.IfNoneAsync.html
  commentId: Overload:Wrap.MaybeExtensions.IfNoneAsync
  fullName: Wrap.MaybeExtensions.IfNoneAsync
  nameWithType: MaybeExtensions.IfNoneAsync
- uid: Wrap.MaybeExtensions.IfNoneAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Action)
  name: IfNoneAsync<T>(Task<Maybe<T>>, Action)
  href: api/Wrap.MaybeExtensions.IfNoneAsync.html#Wrap_MaybeExtensions_IfNoneAsync__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Action_
  commentId: M:Wrap.MaybeExtensions.IfNoneAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Action)
  name.vb: IfNoneAsync(Of T)(Task(Of Maybe(Of T)), Action)
  fullName: Wrap.MaybeExtensions.IfNoneAsync<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Action)
  fullName.vb: Wrap.MaybeExtensions.IfNoneAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Action)
  nameWithType: MaybeExtensions.IfNoneAsync<T>(Task<Maybe<T>>, Action)
  nameWithType.vb: MaybeExtensions.IfNoneAsync(Of T)(Task(Of Maybe(Of T)), Action)
- uid: Wrap.MaybeExtensions.IfNoneAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task})
  name: IfNoneAsync<T>(Task<Maybe<T>>, Func<Task>)
  href: api/Wrap.MaybeExtensions.IfNoneAsync.html#Wrap_MaybeExtensions_IfNoneAsync__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task__
  commentId: M:Wrap.MaybeExtensions.IfNoneAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task})
  name.vb: IfNoneAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task))
  fullName: Wrap.MaybeExtensions.IfNoneAsync<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task>)
  fullName.vb: Wrap.MaybeExtensions.IfNoneAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.IfNoneAsync<T>(Task<Maybe<T>>, Func<Task>)
  nameWithType.vb: MaybeExtensions.IfNoneAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task))
- uid: Wrap.MaybeExtensions.IfNoneAsync``1(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task})
  name: IfNoneAsync<T>(Maybe<T>, Func<Task>)
  href: api/Wrap.MaybeExtensions.IfNoneAsync.html#Wrap_MaybeExtensions_IfNoneAsync__1_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task__
  commentId: M:Wrap.MaybeExtensions.IfNoneAsync``1(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task})
  name.vb: IfNoneAsync(Of T)(Maybe(Of T), Func(Of Task))
  fullName: Wrap.MaybeExtensions.IfNoneAsync<T>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task>)
  fullName.vb: Wrap.MaybeExtensions.IfNoneAsync(Of T)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.IfNoneAsync<T>(Maybe<T>, Func<Task>)
  nameWithType.vb: MaybeExtensions.IfNoneAsync(Of T)(Maybe(Of T), Func(Of Task))
- uid: Wrap.MaybeExtensions.IfNone``1(Wrap.Maybe{``0},System.Action)
  name: IfNone<T>(Maybe<T>, Action)
  href: api/Wrap.MaybeExtensions.IfNone.html#Wrap_MaybeExtensions_IfNone__1_Wrap_Maybe___0__System_Action_
  commentId: M:Wrap.MaybeExtensions.IfNone``1(Wrap.Maybe{``0},System.Action)
  name.vb: IfNone(Of T)(Maybe(Of T), Action)
  fullName: Wrap.MaybeExtensions.IfNone<T>(Wrap.Maybe<T>, System.Action)
  fullName.vb: Wrap.MaybeExtensions.IfNone(Of T)(Wrap.Maybe(Of T), System.Action)
  nameWithType: MaybeExtensions.IfNone<T>(Maybe<T>, Action)
  nameWithType.vb: MaybeExtensions.IfNone(Of T)(Maybe(Of T), Action)
- uid: Wrap.MaybeExtensions.IfSome*
  name: IfSome
  href: api/Wrap.MaybeExtensions.IfSome.html
  commentId: Overload:Wrap.MaybeExtensions.IfSome
  fullName: Wrap.MaybeExtensions.IfSome
  nameWithType: MaybeExtensions.IfSome
- uid: Wrap.MaybeExtensions.IfSomeAsync*
  name: IfSomeAsync
  href: api/Wrap.MaybeExtensions.IfSomeAsync.html
  commentId: Overload:Wrap.MaybeExtensions.IfSomeAsync
  fullName: Wrap.MaybeExtensions.IfSomeAsync
  nameWithType: MaybeExtensions.IfSomeAsync
- uid: Wrap.MaybeExtensions.IfSomeAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Action{``0})
  name: IfSomeAsync<T>(Task<Maybe<T>>, Action<T>)
  href: api/Wrap.MaybeExtensions.IfSomeAsync.html#Wrap_MaybeExtensions_IfSomeAsync__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Action___0__
  commentId: M:Wrap.MaybeExtensions.IfSomeAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Action{``0})
  name.vb: IfSomeAsync(Of T)(Task(Of Maybe(Of T)), Action(Of T))
  fullName: Wrap.MaybeExtensions.IfSomeAsync<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Action<T>)
  fullName.vb: Wrap.MaybeExtensions.IfSomeAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Action(Of T))
  nameWithType: MaybeExtensions.IfSomeAsync<T>(Task<Maybe<T>>, Action<T>)
  nameWithType.vb: MaybeExtensions.IfSomeAsync(Of T)(Task(Of Maybe(Of T)), Action(Of T))
- uid: Wrap.MaybeExtensions.IfSomeAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task})
  name: IfSomeAsync<T>(Task<Maybe<T>>, Func<T, Task>)
  href: api/Wrap.MaybeExtensions.IfSomeAsync.html#Wrap_MaybeExtensions_IfSomeAsync__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.MaybeExtensions.IfSomeAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: IfSomeAsync(Of T)(Task(Of Maybe(Of T)), Func(Of T, Task))
  fullName: Wrap.MaybeExtensions.IfSomeAsync<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.MaybeExtensions.IfSomeAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.IfSomeAsync<T>(Task<Maybe<T>>, Func<T, Task>)
  nameWithType.vb: MaybeExtensions.IfSomeAsync(Of T)(Task(Of Maybe(Of T)), Func(Of T, Task))
- uid: Wrap.MaybeExtensions.IfSomeAsync``1(Wrap.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task})
  name: IfSomeAsync<T>(Maybe<T>, Func<T, Task>)
  href: api/Wrap.MaybeExtensions.IfSomeAsync.html#Wrap_MaybeExtensions_IfSomeAsync__1_Wrap_Maybe___0__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.MaybeExtensions.IfSomeAsync``1(Wrap.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: IfSomeAsync(Of T)(Maybe(Of T), Func(Of T, Task))
  fullName: Wrap.MaybeExtensions.IfSomeAsync<T>(Wrap.Maybe<T>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.MaybeExtensions.IfSomeAsync(Of T)(Wrap.Maybe(Of T), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.IfSomeAsync<T>(Maybe<T>, Func<T, Task>)
  nameWithType.vb: MaybeExtensions.IfSomeAsync(Of T)(Maybe(Of T), Func(Of T, Task))
- uid: Wrap.MaybeExtensions.IfSome``1(Wrap.Maybe{``0},System.Action{``0})
  name: IfSome<T>(Maybe<T>, Action<T>)
  href: api/Wrap.MaybeExtensions.IfSome.html#Wrap_MaybeExtensions_IfSome__1_Wrap_Maybe___0__System_Action___0__
  commentId: M:Wrap.MaybeExtensions.IfSome``1(Wrap.Maybe{``0},System.Action{``0})
  name.vb: IfSome(Of T)(Maybe(Of T), Action(Of T))
  fullName: Wrap.MaybeExtensions.IfSome<T>(Wrap.Maybe<T>, System.Action<T>)
  fullName.vb: Wrap.MaybeExtensions.IfSome(Of T)(Wrap.Maybe(Of T), System.Action(Of T))
  nameWithType: MaybeExtensions.IfSome<T>(Maybe<T>, Action<T>)
  nameWithType.vb: MaybeExtensions.IfSome(Of T)(Maybe(Of T), Action(Of T))
- uid: Wrap.MaybeExtensions.IsFalse(Wrap.Maybe{System.Boolean})
  name: IsFalse(Maybe<bool>)
  href: api/Wrap.MaybeExtensions.IsFalse.html#Wrap_MaybeExtensions_IsFalse_Wrap_Maybe_System_Boolean__
  commentId: M:Wrap.MaybeExtensions.IsFalse(Wrap.Maybe{System.Boolean})
  name.vb: IsFalse(Maybe(Of Boolean))
  fullName: Wrap.MaybeExtensions.IsFalse(Wrap.Maybe<bool>)
  fullName.vb: Wrap.MaybeExtensions.IsFalse(Wrap.Maybe(Of Boolean))
  nameWithType: MaybeExtensions.IsFalse(Maybe<bool>)
  nameWithType.vb: MaybeExtensions.IsFalse(Maybe(Of Boolean))
- uid: Wrap.MaybeExtensions.IsFalse*
  name: IsFalse
  href: api/Wrap.MaybeExtensions.IsFalse.html
  commentId: Overload:Wrap.MaybeExtensions.IsFalse
  fullName: Wrap.MaybeExtensions.IsFalse
  nameWithType: MaybeExtensions.IsFalse
- uid: Wrap.MaybeExtensions.IsFalseAsync(System.Threading.Tasks.Task{Wrap.Maybe{System.Boolean}})
  name: IsFalseAsync(Task<Maybe<bool>>)
  href: api/Wrap.MaybeExtensions.IsFalseAsync.html#Wrap_MaybeExtensions_IsFalseAsync_System_Threading_Tasks_Task_Wrap_Maybe_System_Boolean___
  commentId: M:Wrap.MaybeExtensions.IsFalseAsync(System.Threading.Tasks.Task{Wrap.Maybe{System.Boolean}})
  name.vb: IsFalseAsync(Task(Of Maybe(Of Boolean)))
  fullName: Wrap.MaybeExtensions.IsFalseAsync(System.Threading.Tasks.Task<Wrap.Maybe<bool>>)
  fullName.vb: Wrap.MaybeExtensions.IsFalseAsync(System.Threading.Tasks.Task(Of Wrap.Maybe(Of Boolean)))
  nameWithType: MaybeExtensions.IsFalseAsync(Task<Maybe<bool>>)
  nameWithType.vb: MaybeExtensions.IsFalseAsync(Task(Of Maybe(Of Boolean)))
- uid: Wrap.MaybeExtensions.IsFalseAsync*
  name: IsFalseAsync
  href: api/Wrap.MaybeExtensions.IsFalseAsync.html
  commentId: Overload:Wrap.MaybeExtensions.IsFalseAsync
  fullName: Wrap.MaybeExtensions.IsFalseAsync
  nameWithType: MaybeExtensions.IsFalseAsync
- uid: Wrap.MaybeExtensions.IsTrue(Wrap.Maybe{System.Boolean})
  name: IsTrue(Maybe<bool>)
  href: api/Wrap.MaybeExtensions.IsTrue.html#Wrap_MaybeExtensions_IsTrue_Wrap_Maybe_System_Boolean__
  commentId: M:Wrap.MaybeExtensions.IsTrue(Wrap.Maybe{System.Boolean})
  name.vb: IsTrue(Maybe(Of Boolean))
  fullName: Wrap.MaybeExtensions.IsTrue(Wrap.Maybe<bool>)
  fullName.vb: Wrap.MaybeExtensions.IsTrue(Wrap.Maybe(Of Boolean))
  nameWithType: MaybeExtensions.IsTrue(Maybe<bool>)
  nameWithType.vb: MaybeExtensions.IsTrue(Maybe(Of Boolean))
- uid: Wrap.MaybeExtensions.IsTrue*
  name: IsTrue
  href: api/Wrap.MaybeExtensions.IsTrue.html
  commentId: Overload:Wrap.MaybeExtensions.IsTrue
  fullName: Wrap.MaybeExtensions.IsTrue
  nameWithType: MaybeExtensions.IsTrue
- uid: Wrap.MaybeExtensions.IsTrueAsync(System.Threading.Tasks.Task{Wrap.Maybe{System.Boolean}})
  name: IsTrueAsync(Task<Maybe<bool>>)
  href: api/Wrap.MaybeExtensions.IsTrueAsync.html#Wrap_MaybeExtensions_IsTrueAsync_System_Threading_Tasks_Task_Wrap_Maybe_System_Boolean___
  commentId: M:Wrap.MaybeExtensions.IsTrueAsync(System.Threading.Tasks.Task{Wrap.Maybe{System.Boolean}})
  name.vb: IsTrueAsync(Task(Of Maybe(Of Boolean)))
  fullName: Wrap.MaybeExtensions.IsTrueAsync(System.Threading.Tasks.Task<Wrap.Maybe<bool>>)
  fullName.vb: Wrap.MaybeExtensions.IsTrueAsync(System.Threading.Tasks.Task(Of Wrap.Maybe(Of Boolean)))
  nameWithType: MaybeExtensions.IsTrueAsync(Task<Maybe<bool>>)
  nameWithType.vb: MaybeExtensions.IsTrueAsync(Task(Of Maybe(Of Boolean)))
- uid: Wrap.MaybeExtensions.IsTrueAsync*
  name: IsTrueAsync
  href: api/Wrap.MaybeExtensions.IsTrueAsync.html
  commentId: Overload:Wrap.MaybeExtensions.IsTrueAsync
  fullName: Wrap.MaybeExtensions.IsTrueAsync
  nameWithType: MaybeExtensions.IsTrueAsync
- uid: Wrap.MaybeExtensions.Map*
  name: Map
  href: api/Wrap.MaybeExtensions.Map.html
  commentId: Overload:Wrap.MaybeExtensions.Map
  fullName: Wrap.MaybeExtensions.Map
  nameWithType: MaybeExtensions.Map
- uid: Wrap.MaybeExtensions.MapAsync*
  name: MapAsync
  href: api/Wrap.MaybeExtensions.MapAsync.html
  commentId: Overload:Wrap.MaybeExtensions.MapAsync
  fullName: Wrap.MaybeExtensions.MapAsync
  nameWithType: MaybeExtensions.MapAsync
- uid: Wrap.MaybeExtensions.MapAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MapAsync<T, TReturn>(Task<Maybe<T>>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MapAsync.html#Wrap_MaybeExtensions_MapAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MapAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MapAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MapAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MapAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MapAsync<T, TReturn>(Task<Maybe<T>>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MapAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MapAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,``1})
  name: MapAsync<T, TReturn>(Task<Maybe<T>>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MapAsync.html#Wrap_MaybeExtensions_MapAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MapAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0,``1})
  name.vb: MapAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MapAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MapAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MapAsync<T, TReturn>(Task<Maybe<T>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MapAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MapAsync``2(Wrap.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MapAsync<T, TReturn>(Maybe<T>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MapAsync.html#Wrap_MaybeExtensions_MapAsync__2_Wrap_Maybe___0__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MapAsync``2(Wrap.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MapAsync(Of T, TReturn)(Maybe(Of T), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MapAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MapAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MapAsync<T, TReturn>(Maybe<T>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MapAsync(Of T, TReturn)(Maybe(Of T), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.Map``2(Wrap.Maybe{``0},System.Func{``0,``1})
  name: Map<T, TReturn>(Maybe<T>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.Map.html#Wrap_MaybeExtensions_Map__2_Wrap_Maybe___0__System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.Map``2(Wrap.Maybe{``0},System.Func{``0,``1})
  name.vb: Map(Of T, TReturn)(Maybe(Of T), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.Map<T, TReturn>(Wrap.Maybe<T>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.Map(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.Map<T, TReturn>(Maybe<T>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.Map(Of T, TReturn)(Maybe(Of T), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.Match*
  name: Match
  href: api/Wrap.MaybeExtensions.Match.html
  commentId: Overload:Wrap.MaybeExtensions.Match
  fullName: Wrap.MaybeExtensions.Match
  nameWithType: MaybeExtensions.Match
- uid: Wrap.MaybeExtensions.MatchAsync*
  name: MatchAsync
  href: api/Wrap.MaybeExtensions.MatchAsync.html
  commentId: Overload:Wrap.MaybeExtensions.MatchAsync
  fullName: Wrap.MaybeExtensions.MatchAsync
  nameWithType: MaybeExtensions.MatchAsync
- uid: Wrap.MaybeExtensions.MatchAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: MatchAsync<T>(Task<Maybe<T>>, Func<Task>, Func<T, Task>)
  href: api/Wrap.MaybeExtensions.MatchAsync.html#Wrap_MaybeExtensions_MatchAsync__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.MaybeExtensions.MatchAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task), Func(Of T, Task))
  fullName: Wrap.MaybeExtensions.MatchAsync<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.MaybeExtensions.MatchAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.MatchAsync<T>(Task<Maybe<T>>, Func<Task>, Func<T, Task>)
  nameWithType.vb: MaybeExtensions.MatchAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task), Func(Of T, Task))
- uid: Wrap.MaybeExtensions.MatchAsync``1(Wrap.Maybe{``0},System.Action,System.Func{``0,System.Threading.Tasks.Task})
  name: MatchAsync<T>(Maybe<T>, Action, Func<T, Task>)
  href: api/Wrap.MaybeExtensions.MatchAsync.html#Wrap_MaybeExtensions_MatchAsync__1_Wrap_Maybe___0__System_Action_System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.MaybeExtensions.MatchAsync``1(Wrap.Maybe{``0},System.Action,System.Func{``0,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of T)(Maybe(Of T), Action, Func(Of T, Task))
  fullName: Wrap.MaybeExtensions.MatchAsync<T>(Wrap.Maybe<T>, System.Action, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.MaybeExtensions.MatchAsync(Of T)(Wrap.Maybe(Of T), System.Action, System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.MatchAsync<T>(Maybe<T>, Action, Func<T, Task>)
  nameWithType.vb: MaybeExtensions.MatchAsync(Of T)(Maybe(Of T), Action, Func(Of T, Task))
- uid: Wrap.MaybeExtensions.MatchAsync``1(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Action{``0})
  name: MatchAsync<T>(Maybe<T>, Func<Task>, Action<T>)
  href: api/Wrap.MaybeExtensions.MatchAsync.html#Wrap_MaybeExtensions_MatchAsync__1_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task__System_Action___0__
  commentId: M:Wrap.MaybeExtensions.MatchAsync``1(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Action{``0})
  name.vb: MatchAsync(Of T)(Maybe(Of T), Func(Of Task), Action(Of T))
  fullName: Wrap.MaybeExtensions.MatchAsync<T>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task>, System.Action<T>)
  fullName.vb: Wrap.MaybeExtensions.MatchAsync(Of T)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task), System.Action(Of T))
  nameWithType: MaybeExtensions.MatchAsync<T>(Maybe<T>, Func<Task>, Action<T>)
  nameWithType.vb: MaybeExtensions.MatchAsync(Of T)(Maybe(Of T), Func(Of Task), Action(Of T))
- uid: Wrap.MaybeExtensions.MatchAsync``1(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: MatchAsync<T>(Maybe<T>, Func<Task>, Func<T, Task>)
  href: api/Wrap.MaybeExtensions.MatchAsync.html#Wrap_MaybeExtensions_MatchAsync__1_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.MaybeExtensions.MatchAsync``1(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of T)(Maybe(Of T), Func(Of Task), Func(Of T, Task))
  fullName: Wrap.MaybeExtensions.MatchAsync<T>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.MaybeExtensions.MatchAsync(Of T)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.MatchAsync<T>(Maybe<T>, Func<Task>, Func<T, Task>)
  nameWithType.vb: MaybeExtensions.MatchAsync(Of T)(Maybe(Of T), Func(Of Task), Func(Of T, Task))
- uid: Wrap.MaybeExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchAsync.html#Wrap_MaybeExtensions_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchAsync.html#Wrap_MaybeExtensions_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchAsync.html#Wrap_MaybeExtensions_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,``1})
  name: MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchAsync.html#Wrap_MaybeExtensions_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___1__System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,``1})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of TReturn), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchAsync.html#Wrap_MaybeExtensions_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0_____1_System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, TReturn, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), TReturn, System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},``1,System.Func{``0,``1})
  name: MatchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchAsync.html#Wrap_MaybeExtensions_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0_____1_System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},``1,System.Func{``0,``1})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, TReturn, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), TReturn, System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchAsync.html#Wrap_MaybeExtensions_MatchAsync__2_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchAsync.html#Wrap_MaybeExtensions_MatchAsync__2_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchAsync.html#Wrap_MaybeExtensions_MatchAsync__2_Wrap_Maybe___0__System_Func___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchAsync``2(Wrap.Maybe{``0},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Maybe<T>, TReturn, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchAsync.html#Wrap_MaybeExtensions_MatchAsync__2_Wrap_Maybe___0____1_System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchAsync``2(Wrap.Maybe{``0},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchAsync<T, TReturn>(Wrap.Maybe<T>, TReturn, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchAsync(Of T, TReturn)(Wrap.Maybe(Of T), TReturn, System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchAsync<T, TReturn>(Maybe<T>, TReturn, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchAsync(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIf*
  name: MatchIf
  href: api/Wrap.MaybeExtensions.MatchIf.html
  commentId: Overload:Wrap.MaybeExtensions.MatchIf
  fullName: Wrap.MaybeExtensions.MatchIf
  nameWithType: MaybeExtensions.MatchIf
- uid: Wrap.MaybeExtensions.MatchIfAsync*
  name: MatchIfAsync
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html
  commentId: Overload:Wrap.MaybeExtensions.MatchIfAsync
  fullName: Wrap.MaybeExtensions.MatchIfAsync
  nameWithType: MaybeExtensions.MatchIfAsync
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, bool>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Boolean__System_Func___0___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, bool>, System.Func<T, TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, Boolean), System.Func(Of T, TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, bool>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,``1})
  name: MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, bool>, Func<T, TReturn>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Boolean__System_Func___0___1__System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,``1})
  name.vb: MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, bool>, System.Func<T, TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, Boolean), System.Func(Of T, TReturn), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, bool>, Func<T, TReturn>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,``1})
  name: MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0___1__System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,``1})
  name.vb: MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, TReturn), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___1__System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<TReturn>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of TReturn), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___1__System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<TReturn>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of TReturn), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, bool>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___1__System_Func___0_System_Boolean__System_Func___0___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<TReturn>, System.Func<T, bool>, System.Func<T, TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of TReturn), System.Func(Of T, Boolean), System.Func(Of T, TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, bool>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,``1})
  name: MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, bool>, Func<T, TReturn>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___1__System_Func___0_System_Boolean__System_Func___0___1__System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,``1})
  name.vb: MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<TReturn>, System.Func<T, bool>, System.Func<T, TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of TReturn), System.Func(Of T, Boolean), System.Func(Of T, TReturn), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, bool>, Func<T, TReturn>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, Task<bool>>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___1__System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<TReturn>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, Task<bool>>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___1__System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<TReturn>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,``1})
  name: MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___1__System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0___1__System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,``1})
  name.vb: MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<TReturn>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, TReturn), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, bool>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Boolean__System_Func___0___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, bool>, System.Func<T, TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, Boolean), System.Func(Of T, TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, bool>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,``1})
  name: MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, bool>, Func<T, TReturn>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Boolean__System_Func___0___1__System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,``1})
  name.vb: MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, bool>, System.Func<T, TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, Boolean), System.Func(Of T, TReturn), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, bool>, Func<T, TReturn>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,``1})
  name: MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0___1__System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,``1})
  name.vb: MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, TReturn), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchIfAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_Wrap_Maybe___0__System_Func___1__System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<TReturn>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchIfAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_Wrap_Maybe___0__System_Func___1__System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<TReturn>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, bool>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchIfAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, bool>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_Wrap_Maybe___0__System_Func___1__System_Func___0_System_Boolean__System_Func___0___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<TReturn>, System.Func<T, bool>, System.Func<T, TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, Boolean), System.Func(Of T, TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, bool>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchIfAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<bool>>, Func<T, Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_Wrap_Maybe___0__System_Func___1__System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<TReturn>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<bool>>, Func<T, Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchIfAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<bool>>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_Wrap_Maybe___0__System_Func___1__System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<TReturn>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<bool>>, Func<T, Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchIfAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_Wrap_Maybe___0__System_Func___1__System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<TReturn>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,``1})
  name: MatchIfAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIfAsync.html#Wrap_MaybeExtensions_MatchIfAsync__2_Wrap_Maybe___0__System_Func___1__System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0___1__System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIfAsync``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1},System.Func{``0,``1})
  name.vb: MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIfAsync<T, TReturn>(Wrap.Maybe<T>, System.Func<TReturn>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIfAsync(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, TReturn), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIfAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<bool>>, Func<T, TReturn>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIfAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.MatchIf``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,``1})
  name: MatchIf<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, bool>, Func<T, TReturn>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.MatchIf.html#Wrap_MaybeExtensions_MatchIf__2_Wrap_Maybe___0__System_Func___1__System_Func___0_System_Boolean__System_Func___0___1__System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.MatchIf``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,``1})
  name.vb: MatchIf(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.MatchIf<T, TReturn>(Wrap.Maybe<T>, System.Func<TReturn>, System.Func<T, bool>, System.Func<T, TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.MatchIf(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, Boolean), System.Func(Of T, TReturn), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MatchIf<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, bool>, Func<T, TReturn>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MatchIf(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Boolean), Func(Of T, TReturn), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.Match``1(Wrap.Maybe{``0},System.Action,System.Action{``0})
  name: Match<T>(Maybe<T>, Action, Action<T>)
  href: api/Wrap.MaybeExtensions.Match.html#Wrap_MaybeExtensions_Match__1_Wrap_Maybe___0__System_Action_System_Action___0__
  commentId: M:Wrap.MaybeExtensions.Match``1(Wrap.Maybe{``0},System.Action,System.Action{``0})
  name.vb: Match(Of T)(Maybe(Of T), Action, Action(Of T))
  fullName: Wrap.MaybeExtensions.Match<T>(Wrap.Maybe<T>, System.Action, System.Action<T>)
  fullName.vb: Wrap.MaybeExtensions.Match(Of T)(Wrap.Maybe(Of T), System.Action, System.Action(Of T))
  nameWithType: MaybeExtensions.Match<T>(Maybe<T>, Action, Action<T>)
  nameWithType.vb: MaybeExtensions.Match(Of T)(Maybe(Of T), Action, Action(Of T))
- uid: Wrap.MaybeExtensions.Match``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,``1})
  name: Match<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.Match.html#Wrap_MaybeExtensions_Match__2_Wrap_Maybe___0__System_Func___1__System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.Match``2(Wrap.Maybe{``0},System.Func{``1},System.Func{``0,``1})
  name.vb: Match(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.Match<T, TReturn>(Wrap.Maybe<T>, System.Func<TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.Match(Of T, TReturn)(Wrap.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.Match<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.Match(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.Match``2(Wrap.Maybe{``0},``1,System.Func{``0,``1})
  name: Match<T, TReturn>(Maybe<T>, TReturn, Func<T, TReturn>)
  href: api/Wrap.MaybeExtensions.Match.html#Wrap_MaybeExtensions_Match__2_Wrap_Maybe___0____1_System_Func___0___1__
  commentId: M:Wrap.MaybeExtensions.Match``2(Wrap.Maybe{``0},``1,System.Func{``0,``1})
  name.vb: Match(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, TReturn))
  fullName: Wrap.MaybeExtensions.Match<T, TReturn>(Wrap.Maybe<T>, TReturn, System.Func<T, TReturn>)
  fullName.vb: Wrap.MaybeExtensions.Match(Of T, TReturn)(Wrap.Maybe(Of T), TReturn, System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.Match<T, TReturn>(Maybe<T>, TReturn, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.Match(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, TReturn))
- uid: Wrap.MaybeExtensions.ToResult*
  name: ToResult
  href: api/Wrap.MaybeExtensions.ToResult.html
  commentId: Overload:Wrap.MaybeExtensions.ToResult
  fullName: Wrap.MaybeExtensions.ToResult
  nameWithType: MaybeExtensions.ToResult
- uid: Wrap.MaybeExtensions.ToResult``1(Wrap.Maybe{``0})
  name: ToResult<T>(Maybe<T>)
  href: api/Wrap.MaybeExtensions.ToResult.html#Wrap_MaybeExtensions_ToResult__1_Wrap_Maybe___0__
  commentId: M:Wrap.MaybeExtensions.ToResult``1(Wrap.Maybe{``0})
  name.vb: ToResult(Of T)(Maybe(Of T))
  fullName: Wrap.MaybeExtensions.ToResult<T>(Wrap.Maybe<T>)
  fullName.vb: Wrap.MaybeExtensions.ToResult(Of T)(Wrap.Maybe(Of T))
  nameWithType: MaybeExtensions.ToResult<T>(Maybe<T>)
  nameWithType.vb: MaybeExtensions.ToResult(Of T)(Maybe(Of T))
- uid: Wrap.MaybeExtensions.ToResult``1(Wrap.Maybe{``0},System.String,System.String)
  name: ToResult<T>(Maybe<T>, string, string)
  href: api/Wrap.MaybeExtensions.ToResult.html#Wrap_MaybeExtensions_ToResult__1_Wrap_Maybe___0__System_String_System_String_
  commentId: M:Wrap.MaybeExtensions.ToResult``1(Wrap.Maybe{``0},System.String,System.String)
  name.vb: ToResult(Of T)(Maybe(Of T), String, String)
  fullName: Wrap.MaybeExtensions.ToResult<T>(Wrap.Maybe<T>, string, string)
  fullName.vb: Wrap.MaybeExtensions.ToResult(Of T)(Wrap.Maybe(Of T), String, String)
  nameWithType: MaybeExtensions.ToResult<T>(Maybe<T>, string, string)
  nameWithType.vb: MaybeExtensions.ToResult(Of T)(Maybe(Of T), String, String)
- uid: Wrap.MaybeExtensions.Unsafe*
  name: Unsafe
  href: api/Wrap.MaybeExtensions.Unsafe.html
  commentId: Overload:Wrap.MaybeExtensions.Unsafe
  fullName: Wrap.MaybeExtensions.Unsafe
  nameWithType: MaybeExtensions.Unsafe
- uid: Wrap.MaybeExtensions.Unsafe``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}})
  name: Unsafe<T>(Task<Maybe<T>>)
  href: api/Wrap.MaybeExtensions.Unsafe.html#Wrap_MaybeExtensions_Unsafe__1_System_Threading_Tasks_Task_Wrap_Maybe___0___
  commentId: M:Wrap.MaybeExtensions.Unsafe``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}})
  name.vb: Unsafe(Of T)(Task(Of Maybe(Of T)))
  fullName: Wrap.MaybeExtensions.Unsafe<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>)
  fullName.vb: Wrap.MaybeExtensions.Unsafe(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)))
  nameWithType: MaybeExtensions.Unsafe<T>(Task<Maybe<T>>)
  nameWithType.vb: MaybeExtensions.Unsafe(Of T)(Task(Of Maybe(Of T)))
- uid: Wrap.MaybeExtensions.Unsafe``1(Wrap.Maybe{``0})
  name: Unsafe<T>(Maybe<T>)
  href: api/Wrap.MaybeExtensions.Unsafe.html#Wrap_MaybeExtensions_Unsafe__1_Wrap_Maybe___0__
  commentId: M:Wrap.MaybeExtensions.Unsafe``1(Wrap.Maybe{``0})
  name.vb: Unsafe(Of T)(Maybe(Of T))
  fullName: Wrap.MaybeExtensions.Unsafe<T>(Wrap.Maybe<T>)
  fullName.vb: Wrap.MaybeExtensions.Unsafe(Of T)(Wrap.Maybe(Of T))
  nameWithType: MaybeExtensions.Unsafe<T>(Maybe<T>)
  nameWithType.vb: MaybeExtensions.Unsafe(Of T)(Maybe(Of T))
- uid: Wrap.MaybeExtensions.Unwrap*
  name: Unwrap
  href: api/Wrap.MaybeExtensions.Unwrap.html
  commentId: Overload:Wrap.MaybeExtensions.Unwrap
  fullName: Wrap.MaybeExtensions.Unwrap
  nameWithType: MaybeExtensions.Unwrap
- uid: Wrap.MaybeExtensions.UnwrapAsync*
  name: UnwrapAsync
  href: api/Wrap.MaybeExtensions.UnwrapAsync.html
  commentId: Overload:Wrap.MaybeExtensions.UnwrapAsync
  fullName: Wrap.MaybeExtensions.UnwrapAsync
  nameWithType: MaybeExtensions.UnwrapAsync
- uid: Wrap.MaybeExtensions.UnwrapAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``0}})
  name: UnwrapAsync<T>(Task<Maybe<T>>, Func<Task<T>>)
  href: api/Wrap.MaybeExtensions.UnwrapAsync.html#Wrap_MaybeExtensions_UnwrapAsync__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task___0___
  commentId: M:Wrap.MaybeExtensions.UnwrapAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``0}})
  name.vb: UnwrapAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task(Of T)))
  fullName: Wrap.MaybeExtensions.UnwrapAsync<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task<T>>)
  fullName.vb: Wrap.MaybeExtensions.UnwrapAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of T)))
  nameWithType: MaybeExtensions.UnwrapAsync<T>(Task<Maybe<T>>, Func<Task<T>>)
  nameWithType.vb: MaybeExtensions.UnwrapAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task(Of T)))
- uid: Wrap.MaybeExtensions.UnwrapAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0})
  name: UnwrapAsync<T>(Task<Maybe<T>>, Func<T>)
  href: api/Wrap.MaybeExtensions.UnwrapAsync.html#Wrap_MaybeExtensions_UnwrapAsync__1_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___0__
  commentId: M:Wrap.MaybeExtensions.UnwrapAsync``1(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``0})
  name.vb: UnwrapAsync(Of T)(Task(Of Maybe(Of T)), Func(Of T))
  fullName: Wrap.MaybeExtensions.UnwrapAsync<T>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<T>)
  fullName.vb: Wrap.MaybeExtensions.UnwrapAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of T))
  nameWithType: MaybeExtensions.UnwrapAsync<T>(Task<Maybe<T>>, Func<T>)
  nameWithType.vb: MaybeExtensions.UnwrapAsync(Of T)(Task(Of Maybe(Of T)), Func(Of T))
- uid: Wrap.MaybeExtensions.UnwrapAsync``1(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``0}})
  name: UnwrapAsync<T>(Maybe<T>, Func<Task<T>>)
  href: api/Wrap.MaybeExtensions.UnwrapAsync.html#Wrap_MaybeExtensions_UnwrapAsync__1_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task___0___
  commentId: M:Wrap.MaybeExtensions.UnwrapAsync``1(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``0}})
  name.vb: UnwrapAsync(Of T)(Maybe(Of T), Func(Of Task(Of T)))
  fullName: Wrap.MaybeExtensions.UnwrapAsync<T>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task<T>>)
  fullName.vb: Wrap.MaybeExtensions.UnwrapAsync(Of T)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of T)))
  nameWithType: MaybeExtensions.UnwrapAsync<T>(Maybe<T>, Func<Task<T>>)
  nameWithType.vb: MaybeExtensions.UnwrapAsync(Of T)(Maybe(Of T), Func(Of Task(Of T)))
- uid: Wrap.MaybeExtensions.UnwrapSingle*
  name: UnwrapSingle
  href: api/Wrap.MaybeExtensions.UnwrapSingle.html
  commentId: Overload:Wrap.MaybeExtensions.UnwrapSingle
  fullName: Wrap.MaybeExtensions.UnwrapSingle
  nameWithType: MaybeExtensions.UnwrapSingle
- uid: Wrap.MaybeExtensions.UnwrapSingleAsync*
  name: UnwrapSingleAsync
  href: api/Wrap.MaybeExtensions.UnwrapSingleAsync.html
  commentId: Overload:Wrap.MaybeExtensions.UnwrapSingleAsync
  fullName: Wrap.MaybeExtensions.UnwrapSingleAsync
  nameWithType: MaybeExtensions.UnwrapSingleAsync
- uid: Wrap.MaybeExtensions.UnwrapSingleAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}})
  name: UnwrapSingleAsync<T, TSingle>(Task<Maybe<T>>, Func<Task<TSingle>>)
  href: api/Wrap.MaybeExtensions.UnwrapSingleAsync.html#Wrap_MaybeExtensions_UnwrapSingleAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.UnwrapSingleAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}})
  name.vb: UnwrapSingleAsync(Of T, TSingle)(Task(Of Maybe(Of T)), Func(Of Task(Of TSingle)))
  fullName: Wrap.MaybeExtensions.UnwrapSingleAsync<T, TSingle>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TSingle>>)
  fullName.vb: Wrap.MaybeExtensions.UnwrapSingleAsync(Of T, TSingle)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TSingle)))
  nameWithType: MaybeExtensions.UnwrapSingleAsync<T, TSingle>(Task<Maybe<T>>, Func<Task<TSingle>>)
  nameWithType.vb: MaybeExtensions.UnwrapSingleAsync(Of T, TSingle)(Task(Of Maybe(Of T)), Func(Of Task(Of TSingle)))
- uid: Wrap.MaybeExtensions.UnwrapSingleAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1})
  name: UnwrapSingleAsync<T, TSingle>(Task<Maybe<T>>, Func<TSingle>)
  href: api/Wrap.MaybeExtensions.UnwrapSingleAsync.html#Wrap_MaybeExtensions_UnwrapSingleAsync__2_System_Threading_Tasks_Task_Wrap_Maybe___0___System_Func___1__
  commentId: M:Wrap.MaybeExtensions.UnwrapSingleAsync``2(System.Threading.Tasks.Task{Wrap.Maybe{``0}},System.Func{``1})
  name.vb: UnwrapSingleAsync(Of T, TSingle)(Task(Of Maybe(Of T)), Func(Of TSingle))
  fullName: Wrap.MaybeExtensions.UnwrapSingleAsync<T, TSingle>(System.Threading.Tasks.Task<Wrap.Maybe<T>>, System.Func<TSingle>)
  fullName.vb: Wrap.MaybeExtensions.UnwrapSingleAsync(Of T, TSingle)(System.Threading.Tasks.Task(Of Wrap.Maybe(Of T)), System.Func(Of TSingle))
  nameWithType: MaybeExtensions.UnwrapSingleAsync<T, TSingle>(Task<Maybe<T>>, Func<TSingle>)
  nameWithType.vb: MaybeExtensions.UnwrapSingleAsync(Of T, TSingle)(Task(Of Maybe(Of T)), Func(Of TSingle))
- uid: Wrap.MaybeExtensions.UnwrapSingleAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}})
  name: UnwrapSingleAsync<T, TSingle>(Maybe<T>, Func<Task<TSingle>>)
  href: api/Wrap.MaybeExtensions.UnwrapSingleAsync.html#Wrap_MaybeExtensions_UnwrapSingleAsync__2_Wrap_Maybe___0__System_Func_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.MaybeExtensions.UnwrapSingleAsync``2(Wrap.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}})
  name.vb: UnwrapSingleAsync(Of T, TSingle)(Maybe(Of T), Func(Of Task(Of TSingle)))
  fullName: Wrap.MaybeExtensions.UnwrapSingleAsync<T, TSingle>(Wrap.Maybe<T>, System.Func<System.Threading.Tasks.Task<TSingle>>)
  fullName.vb: Wrap.MaybeExtensions.UnwrapSingleAsync(Of T, TSingle)(Wrap.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TSingle)))
  nameWithType: MaybeExtensions.UnwrapSingleAsync<T, TSingle>(Maybe<T>, Func<Task<TSingle>>)
  nameWithType.vb: MaybeExtensions.UnwrapSingleAsync(Of T, TSingle)(Maybe(Of T), Func(Of Task(Of TSingle)))
- uid: Wrap.MaybeExtensions.UnwrapSingle``2(Wrap.Maybe{``0},System.Func{``1})
  name: UnwrapSingle<T, TSingle>(Maybe<T>, Func<TSingle>)
  href: api/Wrap.MaybeExtensions.UnwrapSingle.html#Wrap_MaybeExtensions_UnwrapSingle__2_Wrap_Maybe___0__System_Func___1__
  commentId: M:Wrap.MaybeExtensions.UnwrapSingle``2(Wrap.Maybe{``0},System.Func{``1})
  name.vb: UnwrapSingle(Of T, TSingle)(Maybe(Of T), Func(Of TSingle))
  fullName: Wrap.MaybeExtensions.UnwrapSingle<T, TSingle>(Wrap.Maybe<T>, System.Func<TSingle>)
  fullName.vb: Wrap.MaybeExtensions.UnwrapSingle(Of T, TSingle)(Wrap.Maybe(Of T), System.Func(Of TSingle))
  nameWithType: MaybeExtensions.UnwrapSingle<T, TSingle>(Maybe<T>, Func<TSingle>)
  nameWithType.vb: MaybeExtensions.UnwrapSingle(Of T, TSingle)(Maybe(Of T), Func(Of TSingle))
- uid: Wrap.MaybeExtensions.Unwrap``1(Wrap.Maybe{``0},System.Func{``0})
  name: Unwrap<T>(Maybe<T>, Func<T>)
  href: api/Wrap.MaybeExtensions.Unwrap.html#Wrap_MaybeExtensions_Unwrap__1_Wrap_Maybe___0__System_Func___0__
  commentId: M:Wrap.MaybeExtensions.Unwrap``1(Wrap.Maybe{``0},System.Func{``0})
  name.vb: Unwrap(Of T)(Maybe(Of T), Func(Of T))
  fullName: Wrap.MaybeExtensions.Unwrap<T>(Wrap.Maybe<T>, System.Func<T>)
  fullName.vb: Wrap.MaybeExtensions.Unwrap(Of T)(Wrap.Maybe(Of T), System.Func(Of T))
  nameWithType: MaybeExtensions.Unwrap<T>(Maybe<T>, Func<T>)
  nameWithType.vb: MaybeExtensions.Unwrap(Of T)(Maybe(Of T), Func(Of T))
- uid: Wrap.Maybe`1
  name: Maybe<T>
  href: api/Wrap.Maybe-1.html
  commentId: T:Wrap.Maybe`1
  name.vb: Maybe(Of T)
  fullName: Wrap.Maybe<T>
  fullName.vb: Wrap.Maybe(Of T)
  nameWithType: Maybe<T>
  nameWithType.vb: Maybe(Of T)
- uid: Wrap.Maybe`1.#ctor
  name: Maybe()
  href: api/Wrap.Maybe-1.-ctor.html#Wrap_Maybe_1__ctor
  commentId: M:Wrap.Maybe`1.#ctor
  name.vb: New()
  fullName: Wrap.Maybe<T>.Maybe()
  fullName.vb: Wrap.Maybe(Of T).New()
  nameWithType: Maybe<T>.Maybe()
  nameWithType.vb: Maybe(Of T).New()
- uid: Wrap.Maybe`1.#ctor(Wrap.Maybe{`0})
  name: Maybe(Maybe<T>)
  href: api/Wrap.Maybe-1.-ctor.html#Wrap_Maybe_1__ctor_Wrap_Maybe__0__
  commentId: M:Wrap.Maybe`1.#ctor(Wrap.Maybe{`0})
  name.vb: New(Maybe(Of T))
  fullName: Wrap.Maybe<T>.Maybe(Wrap.Maybe<T>)
  fullName.vb: Wrap.Maybe(Of T).New(Wrap.Maybe(Of T))
  nameWithType: Maybe<T>.Maybe(Maybe<T>)
  nameWithType.vb: Maybe(Of T).New(Maybe(Of T))
- uid: Wrap.Maybe`1.#ctor*
  name: Maybe
  href: api/Wrap.Maybe-1.-ctor.html
  commentId: Overload:Wrap.Maybe`1.#ctor
  name.vb: New
  fullName: Wrap.Maybe<T>.Maybe
  fullName.vb: Wrap.Maybe(Of T).New
  nameWithType: Maybe<T>.Maybe
  nameWithType.vb: Maybe(Of T).New
- uid: Wrap.Maybe`1.AsTask
  name: AsTask()
  href: api/Wrap.Maybe-1.AsTask.html#Wrap_Maybe_1_AsTask
  commentId: M:Wrap.Maybe`1.AsTask
  fullName: Wrap.Maybe<T>.AsTask()
  fullName.vb: Wrap.Maybe(Of T).AsTask()
  nameWithType: Maybe<T>.AsTask()
  nameWithType.vb: Maybe(Of T).AsTask()
- uid: Wrap.Maybe`1.AsTask*
  name: AsTask
  href: api/Wrap.Maybe-1.AsTask.html
  commentId: Overload:Wrap.Maybe`1.AsTask
  fullName: Wrap.Maybe<T>.AsTask
  fullName.vb: Wrap.Maybe(Of T).AsTask
  nameWithType: Maybe<T>.AsTask
  nameWithType.vb: Maybe(Of T).AsTask
- uid: Wrap.Maybe`1.EqualityContract
  name: EqualityContract
  href: api/Wrap.Maybe-1.EqualityContract.html#Wrap_Maybe_1_EqualityContract
  commentId: P:Wrap.Maybe`1.EqualityContract
  fullName: Wrap.Maybe<T>.EqualityContract
  fullName.vb: Wrap.Maybe(Of T).EqualityContract
  nameWithType: Maybe<T>.EqualityContract
  nameWithType.vb: Maybe(Of T).EqualityContract
- uid: Wrap.Maybe`1.EqualityContract*
  name: EqualityContract
  href: api/Wrap.Maybe-1.EqualityContract.html
  commentId: Overload:Wrap.Maybe`1.EqualityContract
  fullName: Wrap.Maybe<T>.EqualityContract
  fullName.vb: Wrap.Maybe(Of T).EqualityContract
  nameWithType: Maybe<T>.EqualityContract
  nameWithType.vb: Maybe(Of T).EqualityContract
- uid: Wrap.Maybe`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Wrap.Maybe-1.Equals.html#Wrap_Maybe_1_Equals_System_Object_
  commentId: M:Wrap.Maybe`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.Maybe<T>.Equals(object?)
  fullName.vb: Wrap.Maybe(Of T).Equals(Object)
  nameWithType: Maybe<T>.Equals(object?)
  nameWithType.vb: Maybe(Of T).Equals(Object)
- uid: Wrap.Maybe`1.Equals(Wrap.Maybe{`0})
  name: Equals(Maybe<T>?)
  href: api/Wrap.Maybe-1.Equals.html#Wrap_Maybe_1_Equals_Wrap_Maybe__0__
  commentId: M:Wrap.Maybe`1.Equals(Wrap.Maybe{`0})
  name.vb: Equals(Maybe(Of T))
  fullName: Wrap.Maybe<T>.Equals(Wrap.Maybe<T>?)
  fullName.vb: Wrap.Maybe(Of T).Equals(Wrap.Maybe(Of T))
  nameWithType: Maybe<T>.Equals(Maybe<T>?)
  nameWithType.vb: Maybe(Of T).Equals(Maybe(Of T))
- uid: Wrap.Maybe`1.Equals*
  name: Equals
  href: api/Wrap.Maybe-1.Equals.html
  commentId: Overload:Wrap.Maybe`1.Equals
  fullName: Wrap.Maybe<T>.Equals
  fullName.vb: Wrap.Maybe(Of T).Equals
  nameWithType: Maybe<T>.Equals
  nameWithType.vb: Maybe(Of T).Equals
- uid: Wrap.Maybe`1.GetEnumerator
  name: GetEnumerator()
  href: api/Wrap.Maybe-1.GetEnumerator.html#Wrap_Maybe_1_GetEnumerator
  commentId: M:Wrap.Maybe`1.GetEnumerator
  fullName: Wrap.Maybe<T>.GetEnumerator()
  fullName.vb: Wrap.Maybe(Of T).GetEnumerator()
  nameWithType: Maybe<T>.GetEnumerator()
  nameWithType.vb: Maybe(Of T).GetEnumerator()
- uid: Wrap.Maybe`1.GetEnumerator*
  name: GetEnumerator
  href: api/Wrap.Maybe-1.GetEnumerator.html
  commentId: Overload:Wrap.Maybe`1.GetEnumerator
  fullName: Wrap.Maybe<T>.GetEnumerator
  fullName.vb: Wrap.Maybe(Of T).GetEnumerator
  nameWithType: Maybe<T>.GetEnumerator
  nameWithType.vb: Maybe(Of T).GetEnumerator
- uid: Wrap.Maybe`1.GetHashCode
  name: GetHashCode()
  href: api/Wrap.Maybe-1.GetHashCode.html#Wrap_Maybe_1_GetHashCode
  commentId: M:Wrap.Maybe`1.GetHashCode
  fullName: Wrap.Maybe<T>.GetHashCode()
  fullName.vb: Wrap.Maybe(Of T).GetHashCode()
  nameWithType: Maybe<T>.GetHashCode()
  nameWithType.vb: Maybe(Of T).GetHashCode()
- uid: Wrap.Maybe`1.GetHashCode*
  name: GetHashCode
  href: api/Wrap.Maybe-1.GetHashCode.html
  commentId: Overload:Wrap.Maybe`1.GetHashCode
  fullName: Wrap.Maybe<T>.GetHashCode
  fullName.vb: Wrap.Maybe(Of T).GetHashCode
  nameWithType: Maybe<T>.GetHashCode
  nameWithType.vb: Maybe(Of T).GetHashCode
- uid: Wrap.Maybe`1.IsNone
  name: IsNone
  href: api/Wrap.Maybe-1.IsNone.html#Wrap_Maybe_1_IsNone
  commentId: P:Wrap.Maybe`1.IsNone
  fullName: Wrap.Maybe<T>.IsNone
  fullName.vb: Wrap.Maybe(Of T).IsNone
  nameWithType: Maybe<T>.IsNone
  nameWithType.vb: Maybe(Of T).IsNone
- uid: Wrap.Maybe`1.IsNone*
  name: IsNone
  href: api/Wrap.Maybe-1.IsNone.html
  commentId: Overload:Wrap.Maybe`1.IsNone
  fullName: Wrap.Maybe<T>.IsNone
  fullName.vb: Wrap.Maybe(Of T).IsNone
  nameWithType: Maybe<T>.IsNone
  nameWithType.vb: Maybe(Of T).IsNone
- uid: Wrap.Maybe`1.IsSome
  name: IsSome
  href: api/Wrap.Maybe-1.IsSome.html#Wrap_Maybe_1_IsSome
  commentId: P:Wrap.Maybe`1.IsSome
  fullName: Wrap.Maybe<T>.IsSome
  fullName.vb: Wrap.Maybe(Of T).IsSome
  nameWithType: Maybe<T>.IsSome
  nameWithType.vb: Maybe(Of T).IsSome
- uid: Wrap.Maybe`1.IsSome*
  name: IsSome
  href: api/Wrap.Maybe-1.IsSome.html
  commentId: Overload:Wrap.Maybe`1.IsSome
  fullName: Wrap.Maybe<T>.IsSome
  fullName.vb: Wrap.Maybe(Of T).IsSome
  nameWithType: Maybe<T>.IsSome
  nameWithType.vb: Maybe(Of T).IsSome
- uid: Wrap.Maybe`1.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Wrap.Maybe-1.PrintMembers.html#Wrap_Maybe_1_PrintMembers_System_Text_StringBuilder_
  commentId: M:Wrap.Maybe`1.PrintMembers(System.Text.StringBuilder)
  fullName: Wrap.Maybe<T>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Wrap.Maybe(Of T).PrintMembers(System.Text.StringBuilder)
  nameWithType: Maybe<T>.PrintMembers(StringBuilder)
  nameWithType.vb: Maybe(Of T).PrintMembers(StringBuilder)
- uid: Wrap.Maybe`1.PrintMembers*
  name: PrintMembers
  href: api/Wrap.Maybe-1.PrintMembers.html
  commentId: Overload:Wrap.Maybe`1.PrintMembers
  fullName: Wrap.Maybe<T>.PrintMembers
  fullName.vb: Wrap.Maybe(Of T).PrintMembers
  nameWithType: Maybe<T>.PrintMembers
  nameWithType.vb: Maybe(Of T).PrintMembers
- uid: Wrap.Maybe`1.ToString
  name: ToString()
  href: api/Wrap.Maybe-1.ToString.html#Wrap_Maybe_1_ToString
  commentId: M:Wrap.Maybe`1.ToString
  fullName: Wrap.Maybe<T>.ToString()
  fullName.vb: Wrap.Maybe(Of T).ToString()
  nameWithType: Maybe<T>.ToString()
  nameWithType.vb: Maybe(Of T).ToString()
- uid: Wrap.Maybe`1.ToString*
  name: ToString
  href: api/Wrap.Maybe-1.ToString.html
  commentId: Overload:Wrap.Maybe`1.ToString
  fullName: Wrap.Maybe<T>.ToString
  fullName.vb: Wrap.Maybe(Of T).ToString
  nameWithType: Maybe<T>.ToString
  nameWithType.vb: Maybe(Of T).ToString
- uid: Wrap.Maybe`1.op_Equality(Wrap.Maybe{`0},Wrap.Maybe{`0})
  name: operator ==(Maybe<T>?, Maybe<T>?)
  href: api/Wrap.Maybe-1.op_Equality.html#Wrap_Maybe_1_op_Equality_Wrap_Maybe__0__Wrap_Maybe__0__
  commentId: M:Wrap.Maybe`1.op_Equality(Wrap.Maybe{`0},Wrap.Maybe{`0})
  name.vb: =(Maybe(Of T), Maybe(Of T))
  fullName: Wrap.Maybe<T>.operator ==(Wrap.Maybe<T>?, Wrap.Maybe<T>?)
  fullName.vb: Wrap.Maybe(Of T).=(Wrap.Maybe(Of T), Wrap.Maybe(Of T))
  nameWithType: Maybe<T>.operator ==(Maybe<T>?, Maybe<T>?)
  nameWithType.vb: Maybe(Of T).=(Maybe(Of T), Maybe(Of T))
- uid: Wrap.Maybe`1.op_Equality(Wrap.Maybe{`0},`0)
  name: operator ==(Maybe<T>, T)
  href: api/Wrap.Maybe-1.op_Equality.html#Wrap_Maybe_1_op_Equality_Wrap_Maybe__0___0_
  commentId: M:Wrap.Maybe`1.op_Equality(Wrap.Maybe{`0},`0)
  name.vb: =(Maybe(Of T), T)
  fullName: Wrap.Maybe<T>.operator ==(Wrap.Maybe<T>, T)
  fullName.vb: Wrap.Maybe(Of T).=(Wrap.Maybe(Of T), T)
  nameWithType: Maybe<T>.operator ==(Maybe<T>, T)
  nameWithType.vb: Maybe(Of T).=(Maybe(Of T), T)
- uid: Wrap.Maybe`1.op_Equality(`0,Wrap.Maybe{`0})
  name: operator ==(T, Maybe<T>)
  href: api/Wrap.Maybe-1.op_Equality.html#Wrap_Maybe_1_op_Equality__0_Wrap_Maybe__0__
  commentId: M:Wrap.Maybe`1.op_Equality(`0,Wrap.Maybe{`0})
  name.vb: =(T, Maybe(Of T))
  fullName: Wrap.Maybe<T>.operator ==(T, Wrap.Maybe<T>)
  fullName.vb: Wrap.Maybe(Of T).=(T, Wrap.Maybe(Of T))
  nameWithType: Maybe<T>.operator ==(T, Maybe<T>)
  nameWithType.vb: Maybe(Of T).=(T, Maybe(Of T))
- uid: Wrap.Maybe`1.op_Equality*
  name: operator ==
  href: api/Wrap.Maybe-1.op_Equality.html
  commentId: Overload:Wrap.Maybe`1.op_Equality
  name.vb: =
  fullName: Wrap.Maybe<T>.operator ==
  fullName.vb: Wrap.Maybe(Of T).=
  nameWithType: Maybe<T>.operator ==
  nameWithType.vb: Maybe(Of T).=
- uid: Wrap.Maybe`1.op_Implicit(Wrap.None)~Wrap.Maybe{`0}
  name: implicit operator Maybe<T>(None)
  href: api/Wrap.Maybe-1.op_Implicit.html#Wrap_Maybe_1_op_Implicit_Wrap_None__Wrap_Maybe__0_
  commentId: M:Wrap.Maybe`1.op_Implicit(Wrap.None)~Wrap.Maybe{`0}
  name.vb: CType(None)
  fullName: Wrap.Maybe<T>.implicit operator Wrap.Maybe<T>(Wrap.None)
  fullName.vb: Wrap.Maybe(Of T).CType(Wrap.None)
  nameWithType: Maybe<T>.implicit operator Maybe<T>(None)
  nameWithType.vb: Maybe(Of T).CType(None)
- uid: Wrap.Maybe`1.op_Implicit(`0)~Wrap.Maybe{`0}
  name: implicit operator Maybe<T>(T)
  href: api/Wrap.Maybe-1.op_Implicit.html#Wrap_Maybe_1_op_Implicit__0__Wrap_Maybe__0_
  commentId: M:Wrap.Maybe`1.op_Implicit(`0)~Wrap.Maybe{`0}
  name.vb: CType(T)
  fullName: Wrap.Maybe<T>.implicit operator Wrap.Maybe<T>(T)
  fullName.vb: Wrap.Maybe(Of T).CType(T)
  nameWithType: Maybe<T>.implicit operator Maybe<T>(T)
  nameWithType.vb: Maybe(Of T).CType(T)
- uid: Wrap.Maybe`1.op_Implicit*
  name: implicit operator
  href: api/Wrap.Maybe-1.op_Implicit.html
  commentId: Overload:Wrap.Maybe`1.op_Implicit
  name.vb: CType
  fullName: Wrap.Maybe<T>.implicit operator
  fullName.vb: Wrap.Maybe(Of T).CType
  nameWithType: Maybe<T>.implicit operator
  nameWithType.vb: Maybe(Of T).CType
- uid: Wrap.Maybe`1.op_Inequality(Wrap.Maybe{`0},Wrap.Maybe{`0})
  name: operator !=(Maybe<T>?, Maybe<T>?)
  href: api/Wrap.Maybe-1.op_Inequality.html#Wrap_Maybe_1_op_Inequality_Wrap_Maybe__0__Wrap_Maybe__0__
  commentId: M:Wrap.Maybe`1.op_Inequality(Wrap.Maybe{`0},Wrap.Maybe{`0})
  name.vb: <>(Maybe(Of T), Maybe(Of T))
  fullName: Wrap.Maybe<T>.operator !=(Wrap.Maybe<T>?, Wrap.Maybe<T>?)
  fullName.vb: Wrap.Maybe(Of T).<>(Wrap.Maybe(Of T), Wrap.Maybe(Of T))
  nameWithType: Maybe<T>.operator !=(Maybe<T>?, Maybe<T>?)
  nameWithType.vb: Maybe(Of T).<>(Maybe(Of T), Maybe(Of T))
- uid: Wrap.Maybe`1.op_Inequality(Wrap.Maybe{`0},`0)
  name: operator !=(Maybe<T>, T)
  href: api/Wrap.Maybe-1.op_Inequality.html#Wrap_Maybe_1_op_Inequality_Wrap_Maybe__0___0_
  commentId: M:Wrap.Maybe`1.op_Inequality(Wrap.Maybe{`0},`0)
  name.vb: <>(Maybe(Of T), T)
  fullName: Wrap.Maybe<T>.operator !=(Wrap.Maybe<T>, T)
  fullName.vb: Wrap.Maybe(Of T).<>(Wrap.Maybe(Of T), T)
  nameWithType: Maybe<T>.operator !=(Maybe<T>, T)
  nameWithType.vb: Maybe(Of T).<>(Maybe(Of T), T)
- uid: Wrap.Maybe`1.op_Inequality(`0,Wrap.Maybe{`0})
  name: operator !=(T, Maybe<T>)
  href: api/Wrap.Maybe-1.op_Inequality.html#Wrap_Maybe_1_op_Inequality__0_Wrap_Maybe__0__
  commentId: M:Wrap.Maybe`1.op_Inequality(`0,Wrap.Maybe{`0})
  name.vb: <>(T, Maybe(Of T))
  fullName: Wrap.Maybe<T>.operator !=(T, Wrap.Maybe<T>)
  fullName.vb: Wrap.Maybe(Of T).<>(T, Wrap.Maybe(Of T))
  nameWithType: Maybe<T>.operator !=(T, Maybe<T>)
  nameWithType.vb: Maybe(Of T).<>(T, Maybe(Of T))
- uid: Wrap.Maybe`1.op_Inequality*
  name: operator !=
  href: api/Wrap.Maybe-1.op_Inequality.html
  commentId: Overload:Wrap.Maybe`1.op_Inequality
  name.vb: <>
  fullName: Wrap.Maybe<T>.operator !=
  fullName.vb: Wrap.Maybe(Of T).<>
  nameWithType: Maybe<T>.operator !=
  nameWithType.vb: Maybe(Of T).<>
- uid: Wrap.None
  name: None
  href: api/Wrap.None.html
  commentId: T:Wrap.None
  fullName: Wrap.None
  nameWithType: None
- uid: Wrap.ObjectExtensions
  name: ObjectExtensions
  href: api/Wrap.ObjectExtensions.html
  commentId: T:Wrap.ObjectExtensions
  fullName: Wrap.ObjectExtensions
  nameWithType: ObjectExtensions
- uid: Wrap.ObjectExtensions.WrapLeft*
  name: WrapLeft
  href: api/Wrap.ObjectExtensions.WrapLeft.html
  commentId: Overload:Wrap.ObjectExtensions.WrapLeft
  fullName: Wrap.ObjectExtensions.WrapLeft
  nameWithType: ObjectExtensions.WrapLeft
- uid: Wrap.ObjectExtensions.WrapLeft``2(``0)
  name: WrapLeft<TLeft, TRight>(TLeft)
  href: api/Wrap.ObjectExtensions.WrapLeft.html#Wrap_ObjectExtensions_WrapLeft__2___0_
  commentId: M:Wrap.ObjectExtensions.WrapLeft``2(``0)
  name.vb: WrapLeft(Of TLeft, TRight)(TLeft)
  fullName: Wrap.ObjectExtensions.WrapLeft<TLeft, TRight>(TLeft)
  fullName.vb: Wrap.ObjectExtensions.WrapLeft(Of TLeft, TRight)(TLeft)
  nameWithType: ObjectExtensions.WrapLeft<TLeft, TRight>(TLeft)
  nameWithType.vb: ObjectExtensions.WrapLeft(Of TLeft, TRight)(TLeft)
- uid: Wrap.ObjectExtensions.WrapMaybe*
  name: WrapMaybe
  href: api/Wrap.ObjectExtensions.WrapMaybe.html
  commentId: Overload:Wrap.ObjectExtensions.WrapMaybe
  fullName: Wrap.ObjectExtensions.WrapMaybe
  nameWithType: ObjectExtensions.WrapMaybe
- uid: Wrap.ObjectExtensions.WrapMaybe``1(``0)
  name: WrapMaybe<T>(T)
  href: api/Wrap.ObjectExtensions.WrapMaybe.html#Wrap_ObjectExtensions_WrapMaybe__1___0_
  commentId: M:Wrap.ObjectExtensions.WrapMaybe``1(``0)
  name.vb: WrapMaybe(Of T)(T)
  fullName: Wrap.ObjectExtensions.WrapMaybe<T>(T)
  fullName.vb: Wrap.ObjectExtensions.WrapMaybe(Of T)(T)
  nameWithType: ObjectExtensions.WrapMaybe<T>(T)
  nameWithType.vb: ObjectExtensions.WrapMaybe(Of T)(T)
- uid: Wrap.ObjectExtensions.WrapResult*
  name: WrapResult
  href: api/Wrap.ObjectExtensions.WrapResult.html
  commentId: Overload:Wrap.ObjectExtensions.WrapResult
  fullName: Wrap.ObjectExtensions.WrapResult
  nameWithType: ObjectExtensions.WrapResult
- uid: Wrap.ObjectExtensions.WrapResult``1(``0)
  name: WrapResult<T>(T)
  href: api/Wrap.ObjectExtensions.WrapResult.html#Wrap_ObjectExtensions_WrapResult__1___0_
  commentId: M:Wrap.ObjectExtensions.WrapResult``1(``0)
  name.vb: WrapResult(Of T)(T)
  fullName: Wrap.ObjectExtensions.WrapResult<T>(T)
  fullName.vb: Wrap.ObjectExtensions.WrapResult(Of T)(T)
  nameWithType: ObjectExtensions.WrapResult<T>(T)
  nameWithType.vb: ObjectExtensions.WrapResult(Of T)(T)
- uid: Wrap.ObjectExtensions.WrapRight*
  name: WrapRight
  href: api/Wrap.ObjectExtensions.WrapRight.html
  commentId: Overload:Wrap.ObjectExtensions.WrapRight
  fullName: Wrap.ObjectExtensions.WrapRight
  nameWithType: ObjectExtensions.WrapRight
- uid: Wrap.ObjectExtensions.WrapRight``2(``1)
  name: WrapRight<TLeft, TRight>(TRight)
  href: api/Wrap.ObjectExtensions.WrapRight.html#Wrap_ObjectExtensions_WrapRight__2___1_
  commentId: M:Wrap.ObjectExtensions.WrapRight``2(``1)
  name.vb: WrapRight(Of TLeft, TRight)(TRight)
  fullName: Wrap.ObjectExtensions.WrapRight<TLeft, TRight>(TRight)
  fullName.vb: Wrap.ObjectExtensions.WrapRight(Of TLeft, TRight)(TRight)
  nameWithType: ObjectExtensions.WrapRight<TLeft, TRight>(TRight)
  nameWithType.vb: ObjectExtensions.WrapRight(Of TLeft, TRight)(TRight)
- uid: Wrap.Ok`1
  name: Ok<T>
  href: api/Wrap.Ok-1.html
  commentId: T:Wrap.Ok`1
  name.vb: Ok(Of T)
  fullName: Wrap.Ok<T>
  fullName.vb: Wrap.Ok(Of T)
  nameWithType: Ok<T>
  nameWithType.vb: Ok(Of T)
- uid: Wrap.Ok`1.EqualityContract
  name: EqualityContract
  href: api/Wrap.Ok-1.EqualityContract.html#Wrap_Ok_1_EqualityContract
  commentId: P:Wrap.Ok`1.EqualityContract
  fullName: Wrap.Ok<T>.EqualityContract
  fullName.vb: Wrap.Ok(Of T).EqualityContract
  nameWithType: Ok<T>.EqualityContract
  nameWithType.vb: Ok(Of T).EqualityContract
- uid: Wrap.Ok`1.EqualityContract*
  name: EqualityContract
  href: api/Wrap.Ok-1.EqualityContract.html
  commentId: Overload:Wrap.Ok`1.EqualityContract
  fullName: Wrap.Ok<T>.EqualityContract
  fullName.vb: Wrap.Ok(Of T).EqualityContract
  nameWithType: Ok<T>.EqualityContract
  nameWithType.vb: Ok(Of T).EqualityContract
- uid: Wrap.Ok`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Wrap.Ok-1.Equals.html#Wrap_Ok_1_Equals_System_Object_
  commentId: M:Wrap.Ok`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.Ok<T>.Equals(object?)
  fullName.vb: Wrap.Ok(Of T).Equals(Object)
  nameWithType: Ok<T>.Equals(object?)
  nameWithType.vb: Ok(Of T).Equals(Object)
- uid: Wrap.Ok`1.Equals(Wrap.Ok{`0})
  name: Equals(Ok<T>?)
  href: api/Wrap.Ok-1.Equals.html#Wrap_Ok_1_Equals_Wrap_Ok__0__
  commentId: M:Wrap.Ok`1.Equals(Wrap.Ok{`0})
  name.vb: Equals(Ok(Of T))
  fullName: Wrap.Ok<T>.Equals(Wrap.Ok<T>?)
  fullName.vb: Wrap.Ok(Of T).Equals(Wrap.Ok(Of T))
  nameWithType: Ok<T>.Equals(Ok<T>?)
  nameWithType.vb: Ok(Of T).Equals(Ok(Of T))
- uid: Wrap.Ok`1.Equals(Wrap.Result{`0})
  name: Equals(Result<T>?)
  href: api/Wrap.Ok-1.Equals.html#Wrap_Ok_1_Equals_Wrap_Result__0__
  commentId: M:Wrap.Ok`1.Equals(Wrap.Result{`0})
  name.vb: Equals(Result(Of T))
  fullName: Wrap.Ok<T>.Equals(Wrap.Result<T>?)
  fullName.vb: Wrap.Ok(Of T).Equals(Wrap.Result(Of T))
  nameWithType: Ok<T>.Equals(Result<T>?)
  nameWithType.vb: Ok(Of T).Equals(Result(Of T))
- uid: Wrap.Ok`1.Equals*
  name: Equals
  href: api/Wrap.Ok-1.Equals.html
  commentId: Overload:Wrap.Ok`1.Equals
  fullName: Wrap.Ok<T>.Equals
  fullName.vb: Wrap.Ok(Of T).Equals
  nameWithType: Ok<T>.Equals
  nameWithType.vb: Ok(Of T).Equals
- uid: Wrap.Ok`1.GetHashCode
  name: GetHashCode()
  href: api/Wrap.Ok-1.GetHashCode.html#Wrap_Ok_1_GetHashCode
  commentId: M:Wrap.Ok`1.GetHashCode
  fullName: Wrap.Ok<T>.GetHashCode()
  fullName.vb: Wrap.Ok(Of T).GetHashCode()
  nameWithType: Ok<T>.GetHashCode()
  nameWithType.vb: Ok(Of T).GetHashCode()
- uid: Wrap.Ok`1.GetHashCode*
  name: GetHashCode
  href: api/Wrap.Ok-1.GetHashCode.html
  commentId: Overload:Wrap.Ok`1.GetHashCode
  fullName: Wrap.Ok<T>.GetHashCode
  fullName.vb: Wrap.Ok(Of T).GetHashCode
  nameWithType: Ok<T>.GetHashCode
  nameWithType.vb: Ok(Of T).GetHashCode
- uid: Wrap.Ok`1.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Wrap.Ok-1.PrintMembers.html#Wrap_Ok_1_PrintMembers_System_Text_StringBuilder_
  commentId: M:Wrap.Ok`1.PrintMembers(System.Text.StringBuilder)
  fullName: Wrap.Ok<T>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Wrap.Ok(Of T).PrintMembers(System.Text.StringBuilder)
  nameWithType: Ok<T>.PrintMembers(StringBuilder)
  nameWithType.vb: Ok(Of T).PrintMembers(StringBuilder)
- uid: Wrap.Ok`1.PrintMembers*
  name: PrintMembers
  href: api/Wrap.Ok-1.PrintMembers.html
  commentId: Overload:Wrap.Ok`1.PrintMembers
  fullName: Wrap.Ok<T>.PrintMembers
  fullName.vb: Wrap.Ok(Of T).PrintMembers
  nameWithType: Ok<T>.PrintMembers
  nameWithType.vb: Ok(Of T).PrintMembers
- uid: Wrap.Ok`1.Value
  name: Value
  href: api/Wrap.Ok-1.Value.html#Wrap_Ok_1_Value
  commentId: P:Wrap.Ok`1.Value
  fullName: Wrap.Ok<T>.Value
  fullName.vb: Wrap.Ok(Of T).Value
  nameWithType: Ok<T>.Value
  nameWithType.vb: Ok(Of T).Value
- uid: Wrap.Ok`1.Value*
  name: Value
  href: api/Wrap.Ok-1.Value.html
  commentId: Overload:Wrap.Ok`1.Value
  fullName: Wrap.Ok<T>.Value
  fullName.vb: Wrap.Ok(Of T).Value
  nameWithType: Ok<T>.Value
  nameWithType.vb: Ok(Of T).Value
- uid: Wrap.Ok`1.op_Equality(Wrap.Ok{`0},Wrap.Ok{`0})
  name: operator ==(Ok<T>?, Ok<T>?)
  href: api/Wrap.Ok-1.op_Equality.html#Wrap_Ok_1_op_Equality_Wrap_Ok__0__Wrap_Ok__0__
  commentId: M:Wrap.Ok`1.op_Equality(Wrap.Ok{`0},Wrap.Ok{`0})
  name.vb: =(Ok(Of T), Ok(Of T))
  fullName: Wrap.Ok<T>.operator ==(Wrap.Ok<T>?, Wrap.Ok<T>?)
  fullName.vb: Wrap.Ok(Of T).=(Wrap.Ok(Of T), Wrap.Ok(Of T))
  nameWithType: Ok<T>.operator ==(Ok<T>?, Ok<T>?)
  nameWithType.vb: Ok(Of T).=(Ok(Of T), Ok(Of T))
- uid: Wrap.Ok`1.op_Equality*
  name: operator ==
  href: api/Wrap.Ok-1.op_Equality.html
  commentId: Overload:Wrap.Ok`1.op_Equality
  name.vb: =
  fullName: Wrap.Ok<T>.operator ==
  fullName.vb: Wrap.Ok(Of T).=
  nameWithType: Ok<T>.operator ==
  nameWithType.vb: Ok(Of T).=
- uid: Wrap.Ok`1.op_Inequality(Wrap.Ok{`0},Wrap.Ok{`0})
  name: operator !=(Ok<T>?, Ok<T>?)
  href: api/Wrap.Ok-1.op_Inequality.html#Wrap_Ok_1_op_Inequality_Wrap_Ok__0__Wrap_Ok__0__
  commentId: M:Wrap.Ok`1.op_Inequality(Wrap.Ok{`0},Wrap.Ok{`0})
  name.vb: <>(Ok(Of T), Ok(Of T))
  fullName: Wrap.Ok<T>.operator !=(Wrap.Ok<T>?, Wrap.Ok<T>?)
  fullName.vb: Wrap.Ok(Of T).<>(Wrap.Ok(Of T), Wrap.Ok(Of T))
  nameWithType: Ok<T>.operator !=(Ok<T>?, Ok<T>?)
  nameWithType.vb: Ok(Of T).<>(Ok(Of T), Ok(Of T))
- uid: Wrap.Ok`1.op_Inequality*
  name: operator !=
  href: api/Wrap.Ok-1.op_Inequality.html
  commentId: Overload:Wrap.Ok`1.op_Inequality
  name.vb: <>
  fullName: Wrap.Ok<T>.operator !=
  fullName.vb: Wrap.Ok(Of T).<>
  nameWithType: Ok<T>.operator !=
  nameWithType.vb: Ok(Of T).<>
- uid: Wrap.R
  name: R
  href: api/Wrap.R.html
  commentId: T:Wrap.R
  fullName: Wrap.R
  nameWithType: R
- uid: Wrap.R.DefaultHandler
  name: DefaultHandler
  href: api/Wrap.R.DefaultHandler.html#Wrap_R_DefaultHandler
  commentId: P:Wrap.R.DefaultHandler
  fullName: Wrap.R.DefaultHandler
  nameWithType: R.DefaultHandler
- uid: Wrap.R.DefaultHandler*
  name: DefaultHandler
  href: api/Wrap.R.DefaultHandler.html
  commentId: Overload:Wrap.R.DefaultHandler
  fullName: Wrap.R.DefaultHandler
  nameWithType: R.DefaultHandler
- uid: Wrap.R.ExceptionHandler
  name: R.ExceptionHandler
  href: api/Wrap.R.ExceptionHandler.html
  commentId: T:Wrap.R.ExceptionHandler
  fullName: Wrap.R.ExceptionHandler
  nameWithType: R.ExceptionHandler
- uid: Wrap.R.ExceptionHandler.#ctor(System.Object,System.IntPtr)
  name: ExceptionHandler(object, nint)
  href: api/Wrap.R.ExceptionHandler.-ctor.html#Wrap_R_ExceptionHandler__ctor_System_Object_System_IntPtr_
  commentId: M:Wrap.R.ExceptionHandler.#ctor(System.Object,System.IntPtr)
  name.vb: New(Object, IntPtr)
  fullName: Wrap.R.ExceptionHandler.ExceptionHandler(object, nint)
  fullName.vb: Wrap.R.ExceptionHandler.New(Object, System.IntPtr)
  nameWithType: R.ExceptionHandler.ExceptionHandler(object, nint)
  nameWithType.vb: R.ExceptionHandler.New(Object, IntPtr)
- uid: Wrap.R.ExceptionHandler.#ctor*
  name: ExceptionHandler
  href: api/Wrap.R.ExceptionHandler.-ctor.html
  commentId: Overload:Wrap.R.ExceptionHandler.#ctor
  name.vb: New
  fullName: Wrap.R.ExceptionHandler.ExceptionHandler
  fullName.vb: Wrap.R.ExceptionHandler.New
  nameWithType: R.ExceptionHandler.ExceptionHandler
  nameWithType.vb: R.ExceptionHandler.New
- uid: Wrap.R.ExceptionHandler.BeginInvoke(System.Exception,System.AsyncCallback,System.Object)
  name: BeginInvoke(Exception, AsyncCallback, object)
  href: api/Wrap.R.ExceptionHandler.BeginInvoke.html#Wrap_R_ExceptionHandler_BeginInvoke_System_Exception_System_AsyncCallback_System_Object_
  commentId: M:Wrap.R.ExceptionHandler.BeginInvoke(System.Exception,System.AsyncCallback,System.Object)
  name.vb: BeginInvoke(Exception, AsyncCallback, Object)
  fullName: Wrap.R.ExceptionHandler.BeginInvoke(System.Exception, System.AsyncCallback, object)
  fullName.vb: Wrap.R.ExceptionHandler.BeginInvoke(System.Exception, System.AsyncCallback, Object)
  nameWithType: R.ExceptionHandler.BeginInvoke(Exception, AsyncCallback, object)
  nameWithType.vb: R.ExceptionHandler.BeginInvoke(Exception, AsyncCallback, Object)
- uid: Wrap.R.ExceptionHandler.BeginInvoke*
  name: BeginInvoke
  href: api/Wrap.R.ExceptionHandler.BeginInvoke.html
  commentId: Overload:Wrap.R.ExceptionHandler.BeginInvoke
  fullName: Wrap.R.ExceptionHandler.BeginInvoke
  nameWithType: R.ExceptionHandler.BeginInvoke
- uid: Wrap.R.ExceptionHandler.EndInvoke(System.IAsyncResult)
  name: EndInvoke(IAsyncResult)
  href: api/Wrap.R.ExceptionHandler.EndInvoke.html#Wrap_R_ExceptionHandler_EndInvoke_System_IAsyncResult_
  commentId: M:Wrap.R.ExceptionHandler.EndInvoke(System.IAsyncResult)
  fullName: Wrap.R.ExceptionHandler.EndInvoke(System.IAsyncResult)
  nameWithType: R.ExceptionHandler.EndInvoke(IAsyncResult)
- uid: Wrap.R.ExceptionHandler.EndInvoke*
  name: EndInvoke
  href: api/Wrap.R.ExceptionHandler.EndInvoke.html
  commentId: Overload:Wrap.R.ExceptionHandler.EndInvoke
  fullName: Wrap.R.ExceptionHandler.EndInvoke
  nameWithType: R.ExceptionHandler.EndInvoke
- uid: Wrap.R.ExceptionHandler.Invoke(System.Exception)
  name: Invoke(Exception)
  href: api/Wrap.R.ExceptionHandler.Invoke.html#Wrap_R_ExceptionHandler_Invoke_System_Exception_
  commentId: M:Wrap.R.ExceptionHandler.Invoke(System.Exception)
  fullName: Wrap.R.ExceptionHandler.Invoke(System.Exception)
  nameWithType: R.ExceptionHandler.Invoke(Exception)
- uid: Wrap.R.ExceptionHandler.Invoke*
  name: Invoke
  href: api/Wrap.R.ExceptionHandler.Invoke.html
  commentId: Overload:Wrap.R.ExceptionHandler.Invoke
  fullName: Wrap.R.ExceptionHandler.Invoke
  nameWithType: R.ExceptionHandler.Invoke
- uid: Wrap.R.Fail(System.Exception)
  name: Fail(Exception)
  href: api/Wrap.R.Fail.html#Wrap_R_Fail_System_Exception_
  commentId: M:Wrap.R.Fail(System.Exception)
  fullName: Wrap.R.Fail(System.Exception)
  nameWithType: R.Fail(Exception)
- uid: Wrap.R.Fail(System.String,System.Object[])
  name: Fail(string, params object?[])
  href: api/Wrap.R.Fail.html#Wrap_R_Fail_System_String_System_Object___
  commentId: M:Wrap.R.Fail(System.String,System.Object[])
  name.vb: Fail(String, ParamArray Object())
  fullName: Wrap.R.Fail(string, params object?[])
  fullName.vb: Wrap.R.Fail(String, ParamArray Object())
  nameWithType: R.Fail(string, params object?[])
  nameWithType.vb: R.Fail(String, ParamArray Object())
- uid: Wrap.R.Fail(System.String,System.String,System.Exception)
  name: Fail(string, string, Exception)
  href: api/Wrap.R.Fail.html#Wrap_R_Fail_System_String_System_String_System_Exception_
  commentId: M:Wrap.R.Fail(System.String,System.String,System.Exception)
  name.vb: Fail(String, String, Exception)
  fullName: Wrap.R.Fail(string, string, System.Exception)
  fullName.vb: Wrap.R.Fail(String, String, System.Exception)
  nameWithType: R.Fail(string, string, Exception)
  nameWithType.vb: R.Fail(String, String, Exception)
- uid: Wrap.R.Fail(System.String,System.String,System.String,System.Object[])
  name: Fail(string, string, string, params object?[])
  href: api/Wrap.R.Fail.html#Wrap_R_Fail_System_String_System_String_System_String_System_Object___
  commentId: M:Wrap.R.Fail(System.String,System.String,System.String,System.Object[])
  name.vb: Fail(String, String, String, ParamArray Object())
  fullName: Wrap.R.Fail(string, string, string, params object?[])
  fullName.vb: Wrap.R.Fail(String, String, String, ParamArray Object())
  nameWithType: R.Fail(string, string, string, params object?[])
  nameWithType.vb: R.Fail(String, String, String, ParamArray Object())
- uid: Wrap.R.Fail(Wrap.FailValue)
  name: Fail(FailValue)
  href: api/Wrap.R.Fail.html#Wrap_R_Fail_Wrap_FailValue_
  commentId: M:Wrap.R.Fail(Wrap.FailValue)
  fullName: Wrap.R.Fail(Wrap.FailValue)
  nameWithType: R.Fail(FailValue)
- uid: Wrap.R.Fail*
  name: Fail
  href: api/Wrap.R.Fail.html
  commentId: Overload:Wrap.R.Fail
  fullName: Wrap.R.Fail
  nameWithType: R.Fail
- uid: Wrap.R.Fail``1
  name: Fail<TException>()
  href: api/Wrap.R.Fail.html#Wrap_R_Fail__1
  commentId: M:Wrap.R.Fail``1
  name.vb: Fail(Of TException)()
  fullName: Wrap.R.Fail<TException>()
  fullName.vb: Wrap.R.Fail(Of TException)()
  nameWithType: R.Fail<TException>()
  nameWithType.vb: R.Fail(Of TException)()
- uid: Wrap.R.Fail``1(System.Exception)
  name: Fail<T>(Exception)
  href: api/Wrap.R.Fail.html#Wrap_R_Fail__1_System_Exception_
  commentId: M:Wrap.R.Fail``1(System.Exception)
  name.vb: Fail(Of T)(Exception)
  fullName: Wrap.R.Fail<T>(System.Exception)
  fullName.vb: Wrap.R.Fail(Of T)(System.Exception)
  nameWithType: R.Fail<T>(Exception)
  nameWithType.vb: R.Fail(Of T)(Exception)
- uid: Wrap.R.Fail``1(System.String,System.Object[])
  name: Fail<T>(string, params object?[])
  href: api/Wrap.R.Fail.html#Wrap_R_Fail__1_System_String_System_Object___
  commentId: M:Wrap.R.Fail``1(System.String,System.Object[])
  name.vb: Fail(Of T)(String, ParamArray Object())
  fullName: Wrap.R.Fail<T>(string, params object?[])
  fullName.vb: Wrap.R.Fail(Of T)(String, ParamArray Object())
  nameWithType: R.Fail<T>(string, params object?[])
  nameWithType.vb: R.Fail(Of T)(String, ParamArray Object())
- uid: Wrap.R.Fail``1(System.String,System.String)
  name: Fail<TException>(string, string)
  href: api/Wrap.R.Fail.html#Wrap_R_Fail__1_System_String_System_String_
  commentId: M:Wrap.R.Fail``1(System.String,System.String)
  name.vb: Fail(Of TException)(String, String)
  fullName: Wrap.R.Fail<TException>(string, string)
  fullName.vb: Wrap.R.Fail(Of TException)(String, String)
  nameWithType: R.Fail<TException>(string, string)
  nameWithType.vb: R.Fail(Of TException)(String, String)
- uid: Wrap.R.Fail``1(Wrap.FailValue)
  name: Fail<T>(FailValue)
  href: api/Wrap.R.Fail.html#Wrap_R_Fail__1_Wrap_FailValue_
  commentId: M:Wrap.R.Fail``1(Wrap.FailValue)
  name.vb: Fail(Of T)(FailValue)
  fullName: Wrap.R.Fail<T>(Wrap.FailValue)
  fullName.vb: Wrap.R.Fail(Of T)(Wrap.FailValue)
  nameWithType: R.Fail<T>(FailValue)
  nameWithType.vb: R.Fail(Of T)(FailValue)
- uid: Wrap.R.Fail``2
  name: Fail<TContext, TException>()
  href: api/Wrap.R.Fail.html#Wrap_R_Fail__2
  commentId: M:Wrap.R.Fail``2
  name.vb: Fail(Of TContext, TException)()
  fullName: Wrap.R.Fail<TContext, TException>()
  fullName.vb: Wrap.R.Fail(Of TContext, TException)()
  nameWithType: R.Fail<TContext, TException>()
  nameWithType.vb: R.Fail(Of TContext, TException)()
- uid: Wrap.R.Match*
  name: Match
  href: api/Wrap.R.Match.html
  commentId: Overload:Wrap.R.Match
  fullName: Wrap.R.Match
  nameWithType: R.Match
- uid: Wrap.R.MatchAsync*
  name: MatchAsync
  href: api/Wrap.R.MatchAsync.html
  commentId: Overload:Wrap.R.MatchAsync
  fullName: Wrap.R.MatchAsync
  nameWithType: R.MatchAsync
- uid: Wrap.R.MatchAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: MatchAsync<T>(Task<Result<T>>, Func<FailValue, Task>, Func<T, Task>)
  href: api/Wrap.R.MatchAsync.html#Wrap_R_MatchAsync__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Func_Wrap_FailValue_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.R.MatchAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of T)(Task(Of Result(Of T)), Func(Of FailValue, Task), Func(Of T, Task))
  fullName: Wrap.R.MatchAsync<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.R.MatchAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: R.MatchAsync<T>(Task<Result<T>>, Func<FailValue, Task>, Func<T, Task>)
  nameWithType.vb: R.MatchAsync(Of T)(Task(Of Result(Of T)), Func(Of FailValue, Task), Func(Of T, Task))
- uid: Wrap.R.MatchAsync``1(Wrap.Result{``0},System.Action{Wrap.FailValue},System.Func{``0,System.Threading.Tasks.Task})
  name: MatchAsync<T>(Result<T>, Action<FailValue>, Func<T, Task>)
  href: api/Wrap.R.MatchAsync.html#Wrap_R_MatchAsync__1_Wrap_Result___0__System_Action_Wrap_FailValue__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.R.MatchAsync``1(Wrap.Result{``0},System.Action{Wrap.FailValue},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of T)(Result(Of T), Action(Of FailValue), Func(Of T, Task))
  fullName: Wrap.R.MatchAsync<T>(Wrap.Result<T>, System.Action<Wrap.FailValue>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.R.MatchAsync(Of T)(Wrap.Result(Of T), System.Action(Of Wrap.FailValue), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: R.MatchAsync<T>(Result<T>, Action<FailValue>, Func<T, Task>)
  nameWithType.vb: R.MatchAsync(Of T)(Result(Of T), Action(Of FailValue), Func(Of T, Task))
- uid: Wrap.R.MatchAsync``1(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task},System.Action{``0})
  name: MatchAsync<T>(Result<T>, Func<FailValue, Task>, Action<T>)
  href: api/Wrap.R.MatchAsync.html#Wrap_R_MatchAsync__1_Wrap_Result___0__System_Func_Wrap_FailValue_System_Threading_Tasks_Task__System_Action___0__
  commentId: M:Wrap.R.MatchAsync``1(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task},System.Action{``0})
  name.vb: MatchAsync(Of T)(Result(Of T), Func(Of FailValue, Task), Action(Of T))
  fullName: Wrap.R.MatchAsync<T>(Wrap.Result<T>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task>, System.Action<T>)
  fullName.vb: Wrap.R.MatchAsync(Of T)(Wrap.Result(Of T), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task), System.Action(Of T))
  nameWithType: R.MatchAsync<T>(Result<T>, Func<FailValue, Task>, Action<T>)
  nameWithType.vb: R.MatchAsync(Of T)(Result(Of T), Func(Of FailValue, Task), Action(Of T))
- uid: Wrap.R.MatchAsync``1(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: MatchAsync<T>(Result<T>, Func<FailValue, Task>, Func<T, Task>)
  href: api/Wrap.R.MatchAsync.html#Wrap_R_MatchAsync__1_Wrap_Result___0__System_Func_Wrap_FailValue_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.R.MatchAsync``1(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of T)(Result(Of T), Func(Of FailValue, Task), Func(Of T, Task))
  fullName: Wrap.R.MatchAsync<T>(Wrap.Result<T>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.R.MatchAsync(Of T)(Wrap.Result(Of T), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: R.MatchAsync<T>(Result<T>, Func<FailValue, Task>, Func<T, Task>)
  nameWithType.vb: R.MatchAsync(Of T)(Result(Of T), Func(Of FailValue, Task), Func(Of T, Task))
- uid: Wrap.R.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Wrap.R.MatchAsync.html#Wrap_R_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func_Wrap_FailValue_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.R.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.R.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.R.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: R.MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: R.MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.R.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.R.MatchAsync.html#Wrap_R_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func_Wrap_FailValue_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.R.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.R.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.R.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: R.MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: R.MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.R.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.R.MatchAsync.html#Wrap_R_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func_Wrap_FailValue___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.R.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.R.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<Wrap.FailValue, TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.R.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of Wrap.FailValue, TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: R.MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: R.MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.R.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,``1},System.Func{``0,``1})
  name: MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, TReturn>, Func<T, TReturn>)
  href: api/Wrap.R.MatchAsync.html#Wrap_R_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func_Wrap_FailValue___1__System_Func___0___1__
  commentId: M:Wrap.R.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,``1},System.Func{``0,``1})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, TReturn), Func(Of T, TReturn))
  fullName: Wrap.R.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<Wrap.FailValue, TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.R.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of Wrap.FailValue, TReturn), System.Func(Of T, TReturn))
  nameWithType: R.MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, TReturn>, Func<T, TReturn>)
  nameWithType.vb: R.MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, TReturn), Func(Of T, TReturn))
- uid: Wrap.R.MatchAsync``2(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Result<T>, Func<FailValue, Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Wrap.R.MatchAsync.html#Wrap_R_MatchAsync__2_Wrap_Result___0__System_Func_Wrap_FailValue_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.R.MatchAsync``2(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Result(Of T), Func(Of FailValue, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.R.MatchAsync<T, TReturn>(Wrap.Result<T>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.R.MatchAsync(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: R.MatchAsync<T, TReturn>(Result<T>, Func<FailValue, Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: R.MatchAsync(Of T, TReturn)(Result(Of T), Func(Of FailValue, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.R.MatchAsync``2(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchAsync<T, TReturn>(Result<T>, Func<FailValue, Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.R.MatchAsync.html#Wrap_R_MatchAsync__2_Wrap_Result___0__System_Func_Wrap_FailValue_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.R.MatchAsync``2(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchAsync(Of T, TReturn)(Result(Of T), Func(Of FailValue, Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.R.MatchAsync<T, TReturn>(Wrap.Result<T>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.R.MatchAsync(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: R.MatchAsync<T, TReturn>(Result<T>, Func<FailValue, Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: R.MatchAsync(Of T, TReturn)(Result(Of T), Func(Of FailValue, Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.R.MatchAsync``2(Wrap.Result{``0},System.Func{Wrap.FailValue,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Result<T>, Func<FailValue, TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.R.MatchAsync.html#Wrap_R_MatchAsync__2_Wrap_Result___0__System_Func_Wrap_FailValue___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.R.MatchAsync``2(Wrap.Result{``0},System.Func{Wrap.FailValue,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Result(Of T), Func(Of FailValue, TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.R.MatchAsync<T, TReturn>(Wrap.Result<T>, System.Func<Wrap.FailValue, TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.R.MatchAsync(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of Wrap.FailValue, TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: R.MatchAsync<T, TReturn>(Result<T>, Func<FailValue, TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: R.MatchAsync(Of T, TReturn)(Result(Of T), Func(Of FailValue, TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.R.Match``1(Wrap.Result{``0},System.Action{Wrap.FailValue},System.Action{``0})
  name: Match<T>(Result<T>, Action<FailValue>, Action<T>)
  href: api/Wrap.R.Match.html#Wrap_R_Match__1_Wrap_Result___0__System_Action_Wrap_FailValue__System_Action___0__
  commentId: M:Wrap.R.Match``1(Wrap.Result{``0},System.Action{Wrap.FailValue},System.Action{``0})
  name.vb: Match(Of T)(Result(Of T), Action(Of FailValue), Action(Of T))
  fullName: Wrap.R.Match<T>(Wrap.Result<T>, System.Action<Wrap.FailValue>, System.Action<T>)
  fullName.vb: Wrap.R.Match(Of T)(Wrap.Result(Of T), System.Action(Of Wrap.FailValue), System.Action(Of T))
  nameWithType: R.Match<T>(Result<T>, Action<FailValue>, Action<T>)
  nameWithType.vb: R.Match(Of T)(Result(Of T), Action(Of FailValue), Action(Of T))
- uid: Wrap.R.Match``2(Wrap.Result{``0},System.Func{Wrap.FailValue,``1},System.Func{``0,``1})
  name: Match<T, TReturn>(Result<T>, Func<FailValue, TReturn>, Func<T, TReturn>)
  href: api/Wrap.R.Match.html#Wrap_R_Match__2_Wrap_Result___0__System_Func_Wrap_FailValue___1__System_Func___0___1__
  commentId: M:Wrap.R.Match``2(Wrap.Result{``0},System.Func{Wrap.FailValue,``1},System.Func{``0,``1})
  name.vb: Match(Of T, TReturn)(Result(Of T), Func(Of FailValue, TReturn), Func(Of T, TReturn))
  fullName: Wrap.R.Match<T, TReturn>(Wrap.Result<T>, System.Func<Wrap.FailValue, TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.R.Match(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of Wrap.FailValue, TReturn), System.Func(Of T, TReturn))
  nameWithType: R.Match<T, TReturn>(Result<T>, Func<FailValue, TReturn>, Func<T, TReturn>)
  nameWithType.vb: R.Match(Of T, TReturn)(Result(Of T), Func(Of FailValue, TReturn), Func(Of T, TReturn))
- uid: Wrap.R.Ok
  name: Ok()
  href: api/Wrap.R.Ok.html#Wrap_R_Ok
  commentId: M:Wrap.R.Ok
  fullName: Wrap.R.Ok()
  nameWithType: R.Ok()
- uid: Wrap.R.Ok*
  name: Ok
  href: api/Wrap.R.Ok.html
  commentId: Overload:Wrap.R.Ok
  fullName: Wrap.R.Ok
  nameWithType: R.Ok
- uid: Wrap.R.Try*
  name: Try
  href: api/Wrap.R.Try.html
  commentId: Overload:Wrap.R.Try
  fullName: Wrap.R.Try
  nameWithType: R.Try
- uid: Wrap.R.TryAsync*
  name: TryAsync
  href: api/Wrap.R.TryAsync.html
  commentId: Overload:Wrap.R.TryAsync
  fullName: Wrap.R.TryAsync
  nameWithType: R.TryAsync
- uid: Wrap.R.TryAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
  name: TryAsync<T>(Func<Task<T>>)
  href: api/Wrap.R.TryAsync.html#Wrap_R_TryAsync__1_System_Func_System_Threading_Tasks_Task___0___
  commentId: M:Wrap.R.TryAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
  name.vb: TryAsync(Of T)(Func(Of Task(Of T)))
  fullName: Wrap.R.TryAsync<T>(System.Func<System.Threading.Tasks.Task<T>>)
  fullName.vb: Wrap.R.TryAsync(Of T)(System.Func(Of System.Threading.Tasks.Task(Of T)))
  nameWithType: R.TryAsync<T>(Func<Task<T>>)
  nameWithType.vb: R.TryAsync(Of T)(Func(Of Task(Of T)))
- uid: Wrap.R.TryAsync``1(System.Func{System.Threading.Tasks.Task{``0}},Wrap.R.ExceptionHandler)
  name: TryAsync<T>(Func<Task<T>>, ExceptionHandler)
  href: api/Wrap.R.TryAsync.html#Wrap_R_TryAsync__1_System_Func_System_Threading_Tasks_Task___0___Wrap_R_ExceptionHandler_
  commentId: M:Wrap.R.TryAsync``1(System.Func{System.Threading.Tasks.Task{``0}},Wrap.R.ExceptionHandler)
  name.vb: TryAsync(Of T)(Func(Of Task(Of T)), ExceptionHandler)
  fullName: Wrap.R.TryAsync<T>(System.Func<System.Threading.Tasks.Task<T>>, Wrap.R.ExceptionHandler)
  fullName.vb: Wrap.R.TryAsync(Of T)(System.Func(Of System.Threading.Tasks.Task(Of T)), Wrap.R.ExceptionHandler)
  nameWithType: R.TryAsync<T>(Func<Task<T>>, R.ExceptionHandler)
  nameWithType.vb: R.TryAsync(Of T)(Func(Of Task(Of T)), R.ExceptionHandler)
- uid: Wrap.R.Try``1(System.Func{``0})
  name: Try<T>(Func<T>)
  href: api/Wrap.R.Try.html#Wrap_R_Try__1_System_Func___0__
  commentId: M:Wrap.R.Try``1(System.Func{``0})
  name.vb: Try(Of T)(Func(Of T))
  fullName: Wrap.R.Try<T>(System.Func<T>)
  fullName.vb: Wrap.R.Try(Of T)(System.Func(Of T))
  nameWithType: R.Try<T>(Func<T>)
  nameWithType.vb: R.Try(Of T)(Func(Of T))
- uid: Wrap.R.Try``1(System.Func{``0},Wrap.R.ExceptionHandler)
  name: Try<T>(Func<T>, ExceptionHandler)
  href: api/Wrap.R.Try.html#Wrap_R_Try__1_System_Func___0__Wrap_R_ExceptionHandler_
  commentId: M:Wrap.R.Try``1(System.Func{``0},Wrap.R.ExceptionHandler)
  name.vb: Try(Of T)(Func(Of T), ExceptionHandler)
  fullName: Wrap.R.Try<T>(System.Func<T>, Wrap.R.ExceptionHandler)
  fullName.vb: Wrap.R.Try(Of T)(System.Func(Of T), Wrap.R.ExceptionHandler)
  nameWithType: R.Try<T>(Func<T>, R.ExceptionHandler)
  nameWithType.vb: R.Try(Of T)(Func(Of T), R.ExceptionHandler)
- uid: Wrap.R.Wrap*
  name: Wrap
  href: api/Wrap.R.Wrap.html
  commentId: Overload:Wrap.R.Wrap
  fullName: Wrap.R.Wrap
  nameWithType: R.Wrap
- uid: Wrap.R.Wrap``1(``0)
  name: Wrap<T>(T)
  href: api/Wrap.R.Wrap.html#Wrap_R_Wrap__1___0_
  commentId: M:Wrap.R.Wrap``1(``0)
  name.vb: Wrap(Of T)(T)
  fullName: Wrap.R.Wrap<T>(T)
  fullName.vb: Wrap.R.Wrap(Of T)(T)
  nameWithType: R.Wrap<T>(T)
  nameWithType.vb: R.Wrap(Of T)(T)
- uid: Wrap.ResultExtensions
  name: ResultExtensions
  href: api/Wrap.ResultExtensions.html
  commentId: T:Wrap.ResultExtensions
  fullName: Wrap.ResultExtensions
  nameWithType: ResultExtensions
- uid: Wrap.ResultExtensions.Audit*
  name: Audit
  href: api/Wrap.ResultExtensions.Audit.html
  commentId: Overload:Wrap.ResultExtensions.Audit
  fullName: Wrap.ResultExtensions.Audit
  nameWithType: ResultExtensions.Audit
- uid: Wrap.ResultExtensions.AuditAsync*
  name: AuditAsync
  href: api/Wrap.ResultExtensions.AuditAsync.html
  commentId: Overload:Wrap.ResultExtensions.AuditAsync
  fullName: Wrap.ResultExtensions.AuditAsync
  nameWithType: ResultExtensions.AuditAsync
- uid: Wrap.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Action{Wrap.FailValue},System.Action{``0})
  name: AuditAsync<T>(Task<Result<T>>, Action<FailValue>?, Action<T>?)
  href: api/Wrap.ResultExtensions.AuditAsync.html#Wrap_ResultExtensions_AuditAsync__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Action_Wrap_FailValue__System_Action___0__
  commentId: M:Wrap.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Action{Wrap.FailValue},System.Action{``0})
  name.vb: AuditAsync(Of T)(Task(Of Result(Of T)), Action(Of FailValue), Action(Of T))
  fullName: Wrap.ResultExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Action<Wrap.FailValue>?, System.Action<T>?)
  fullName.vb: Wrap.ResultExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Action(Of Wrap.FailValue), System.Action(Of T))
  nameWithType: ResultExtensions.AuditAsync<T>(Task<Result<T>>, Action<FailValue>?, Action<T>?)
  nameWithType.vb: ResultExtensions.AuditAsync(Of T)(Task(Of Result(Of T)), Action(Of FailValue), Action(Of T))
- uid: Wrap.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Action{Wrap.Result{``0}})
  name: AuditAsync<T>(Task<Result<T>>, Action<Result<T>>)
  href: api/Wrap.ResultExtensions.AuditAsync.html#Wrap_ResultExtensions_AuditAsync__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Action_Wrap_Result___0___
  commentId: M:Wrap.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Action{Wrap.Result{``0}})
  name.vb: AuditAsync(Of T)(Task(Of Result(Of T)), Action(Of Result(Of T)))
  fullName: Wrap.ResultExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Action<Wrap.Result<T>>)
  fullName.vb: Wrap.ResultExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Action(Of Wrap.Result(Of T)))
  nameWithType: ResultExtensions.AuditAsync<T>(Task<Result<T>>, Action<Result<T>>)
  nameWithType.vb: ResultExtensions.AuditAsync(Of T)(Task(Of Result(Of T)), Action(Of Result(Of T)))
- uid: Wrap.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: AuditAsync<T>(Task<Result<T>>, Func<FailValue, Task>?, Func<T, Task>?)
  href: api/Wrap.ResultExtensions.AuditAsync.html#Wrap_ResultExtensions_AuditAsync__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Func_Wrap_FailValue_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Task(Of Result(Of T)), Func(Of FailValue, Task), Func(Of T, Task))
  fullName: Wrap.ResultExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task>?, System.Func<T, System.Threading.Tasks.Task>?)
  fullName.vb: Wrap.ResultExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: ResultExtensions.AuditAsync<T>(Task<Result<T>>, Func<FailValue, Task>?, Func<T, Task>?)
  nameWithType.vb: ResultExtensions.AuditAsync(Of T)(Task(Of Result(Of T)), Func(Of FailValue, Task), Func(Of T, Task))
- uid: Wrap.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.Result{``0},System.Threading.Tasks.Task})
  name: AuditAsync<T>(Task<Result<T>>, Func<Result<T>, Task>)
  href: api/Wrap.ResultExtensions.AuditAsync.html#Wrap_ResultExtensions_AuditAsync__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Func_Wrap_Result___0__System_Threading_Tasks_Task__
  commentId: M:Wrap.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.Result{``0},System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Task(Of Result(Of T)), Func(Of Result(Of T), Task))
  fullName: Wrap.ResultExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<Wrap.Result<T>, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.ResultExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of Wrap.Result(Of T), System.Threading.Tasks.Task))
  nameWithType: ResultExtensions.AuditAsync<T>(Task<Result<T>>, Func<Result<T>, Task>)
  nameWithType.vb: ResultExtensions.AuditAsync(Of T)(Task(Of Result(Of T)), Func(Of Result(Of T), Task))
- uid: Wrap.ResultExtensions.AuditAsync``1(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: AuditAsync<T>(Result<T>, Func<FailValue, Task>?, Func<T, Task>?)
  href: api/Wrap.ResultExtensions.AuditAsync.html#Wrap_ResultExtensions_AuditAsync__1_Wrap_Result___0__System_Func_Wrap_FailValue_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.ResultExtensions.AuditAsync``1(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Result(Of T), Func(Of FailValue, Task), Func(Of T, Task))
  fullName: Wrap.ResultExtensions.AuditAsync<T>(Wrap.Result<T>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task>?, System.Func<T, System.Threading.Tasks.Task>?)
  fullName.vb: Wrap.ResultExtensions.AuditAsync(Of T)(Wrap.Result(Of T), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: ResultExtensions.AuditAsync<T>(Result<T>, Func<FailValue, Task>?, Func<T, Task>?)
  nameWithType.vb: ResultExtensions.AuditAsync(Of T)(Result(Of T), Func(Of FailValue, Task), Func(Of T, Task))
- uid: Wrap.ResultExtensions.AuditAsync``1(Wrap.Result{``0},System.Func{Wrap.Result{``0},System.Threading.Tasks.Task})
  name: AuditAsync<T>(Result<T>, Func<Result<T>, Task>)
  href: api/Wrap.ResultExtensions.AuditAsync.html#Wrap_ResultExtensions_AuditAsync__1_Wrap_Result___0__System_Func_Wrap_Result___0__System_Threading_Tasks_Task__
  commentId: M:Wrap.ResultExtensions.AuditAsync``1(Wrap.Result{``0},System.Func{Wrap.Result{``0},System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Result(Of T), Func(Of Result(Of T), Task))
  fullName: Wrap.ResultExtensions.AuditAsync<T>(Wrap.Result<T>, System.Func<Wrap.Result<T>, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.ResultExtensions.AuditAsync(Of T)(Wrap.Result(Of T), System.Func(Of Wrap.Result(Of T), System.Threading.Tasks.Task))
  nameWithType: ResultExtensions.AuditAsync<T>(Result<T>, Func<Result<T>, Task>)
  nameWithType.vb: ResultExtensions.AuditAsync(Of T)(Result(Of T), Func(Of Result(Of T), Task))
- uid: Wrap.ResultExtensions.Audit``1(Wrap.Result{``0},System.Action{Wrap.FailValue},System.Action{``0})
  name: Audit<T>(Result<T>, Action<FailValue>?, Action<T>?)
  href: api/Wrap.ResultExtensions.Audit.html#Wrap_ResultExtensions_Audit__1_Wrap_Result___0__System_Action_Wrap_FailValue__System_Action___0__
  commentId: M:Wrap.ResultExtensions.Audit``1(Wrap.Result{``0},System.Action{Wrap.FailValue},System.Action{``0})
  name.vb: Audit(Of T)(Result(Of T), Action(Of FailValue), Action(Of T))
  fullName: Wrap.ResultExtensions.Audit<T>(Wrap.Result<T>, System.Action<Wrap.FailValue>?, System.Action<T>?)
  fullName.vb: Wrap.ResultExtensions.Audit(Of T)(Wrap.Result(Of T), System.Action(Of Wrap.FailValue), System.Action(Of T))
  nameWithType: ResultExtensions.Audit<T>(Result<T>, Action<FailValue>?, Action<T>?)
  nameWithType.vb: ResultExtensions.Audit(Of T)(Result(Of T), Action(Of FailValue), Action(Of T))
- uid: Wrap.ResultExtensions.Audit``1(Wrap.Result{``0},System.Action{Wrap.Result{``0}})
  name: Audit<T>(Result<T>, Action<Result<T>>)
  href: api/Wrap.ResultExtensions.Audit.html#Wrap_ResultExtensions_Audit__1_Wrap_Result___0__System_Action_Wrap_Result___0___
  commentId: M:Wrap.ResultExtensions.Audit``1(Wrap.Result{``0},System.Action{Wrap.Result{``0}})
  name.vb: Audit(Of T)(Result(Of T), Action(Of Result(Of T)))
  fullName: Wrap.ResultExtensions.Audit<T>(Wrap.Result<T>, System.Action<Wrap.Result<T>>)
  fullName.vb: Wrap.ResultExtensions.Audit(Of T)(Wrap.Result(Of T), System.Action(Of Wrap.Result(Of T)))
  nameWithType: ResultExtensions.Audit<T>(Result<T>, Action<Result<T>>)
  nameWithType.vb: ResultExtensions.Audit(Of T)(Result(Of T), Action(Of Result(Of T)))
- uid: Wrap.ResultExtensions.Bind*
  name: Bind
  href: api/Wrap.ResultExtensions.Bind.html
  commentId: Overload:Wrap.ResultExtensions.Bind
  fullName: Wrap.ResultExtensions.Bind
  nameWithType: ResultExtensions.Bind
- uid: Wrap.ResultExtensions.BindAsync*
  name: BindAsync
  href: api/Wrap.ResultExtensions.BindAsync.html
  commentId: Overload:Wrap.ResultExtensions.BindAsync
  fullName: Wrap.ResultExtensions.BindAsync
  nameWithType: ResultExtensions.BindAsync
- uid: Wrap.ResultExtensions.BindAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Result{``1}}})
  name: BindAsync<T, TReturn>(Task<Result<T>>, Func<T, Task<Result<TReturn>>>)
  href: api/Wrap.ResultExtensions.BindAsync.html#Wrap_ResultExtensions_BindAsync__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func___0_System_Threading_Tasks_Task_Wrap_Result___1____
  commentId: M:Wrap.ResultExtensions.BindAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{Wrap.Result{``1}}})
  name.vb: BindAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of Result(Of TReturn))))
  fullName: Wrap.ResultExtensions.BindAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<T, System.Threading.Tasks.Task<Wrap.Result<TReturn>>>)
  fullName.vb: Wrap.ResultExtensions.BindAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Wrap.Result(Of TReturn))))
  nameWithType: ResultExtensions.BindAsync<T, TReturn>(Task<Result<T>>, Func<T, Task<Result<TReturn>>>)
  nameWithType.vb: ResultExtensions.BindAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of Result(Of TReturn))))
- uid: Wrap.ResultExtensions.BindAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,Wrap.Result{``1}})
  name: BindAsync<T, TReturn>(Task<Result<T>>, Func<T, Result<TReturn>>)
  href: api/Wrap.ResultExtensions.BindAsync.html#Wrap_ResultExtensions_BindAsync__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func___0_Wrap_Result___1___
  commentId: M:Wrap.ResultExtensions.BindAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,Wrap.Result{``1}})
  name.vb: BindAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Result(Of TReturn)))
  fullName: Wrap.ResultExtensions.BindAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<T, Wrap.Result<TReturn>>)
  fullName.vb: Wrap.ResultExtensions.BindAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of T, Wrap.Result(Of TReturn)))
  nameWithType: ResultExtensions.BindAsync<T, TReturn>(Task<Result<T>>, Func<T, Result<TReturn>>)
  nameWithType.vb: ResultExtensions.BindAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Result(Of TReturn)))
- uid: Wrap.ResultExtensions.BindAsync``2(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task{Wrap.Result{``1}}})
  name: BindAsync<T, TReturn>(Result<T>, Func<T, Task<Result<TReturn>>>)
  href: api/Wrap.ResultExtensions.BindAsync.html#Wrap_ResultExtensions_BindAsync__2_Wrap_Result___0__System_Func___0_System_Threading_Tasks_Task_Wrap_Result___1____
  commentId: M:Wrap.ResultExtensions.BindAsync``2(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task{Wrap.Result{``1}}})
  name.vb: BindAsync(Of T, TReturn)(Result(Of T), Func(Of T, Task(Of Result(Of TReturn))))
  fullName: Wrap.ResultExtensions.BindAsync<T, TReturn>(Wrap.Result<T>, System.Func<T, System.Threading.Tasks.Task<Wrap.Result<TReturn>>>)
  fullName.vb: Wrap.ResultExtensions.BindAsync(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Wrap.Result(Of TReturn))))
  nameWithType: ResultExtensions.BindAsync<T, TReturn>(Result<T>, Func<T, Task<Result<TReturn>>>)
  nameWithType.vb: ResultExtensions.BindAsync(Of T, TReturn)(Result(Of T), Func(Of T, Task(Of Result(Of TReturn))))
- uid: Wrap.ResultExtensions.Bind``2(Wrap.Result{``0},System.Func{``0,Wrap.Result{``1}})
  name: Bind<T, TReturn>(Result<T>, Func<T, Result<TReturn>>)
  href: api/Wrap.ResultExtensions.Bind.html#Wrap_ResultExtensions_Bind__2_Wrap_Result___0__System_Func___0_Wrap_Result___1___
  commentId: M:Wrap.ResultExtensions.Bind``2(Wrap.Result{``0},System.Func{``0,Wrap.Result{``1}})
  name.vb: Bind(Of T, TReturn)(Result(Of T), Func(Of T, Result(Of TReturn)))
  fullName: Wrap.ResultExtensions.Bind<T, TReturn>(Wrap.Result<T>, System.Func<T, Wrap.Result<TReturn>>)
  fullName.vb: Wrap.ResultExtensions.Bind(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of T, Wrap.Result(Of TReturn)))
  nameWithType: ResultExtensions.Bind<T, TReturn>(Result<T>, Func<T, Result<TReturn>>)
  nameWithType.vb: ResultExtensions.Bind(Of T, TReturn)(Result(Of T), Func(Of T, Result(Of TReturn)))
- uid: Wrap.ResultExtensions.Discard*
  name: Discard
  href: api/Wrap.ResultExtensions.Discard.html
  commentId: Overload:Wrap.ResultExtensions.Discard
  fullName: Wrap.ResultExtensions.Discard
  nameWithType: ResultExtensions.Discard
- uid: Wrap.ResultExtensions.DiscardAsync*
  name: DiscardAsync
  href: api/Wrap.ResultExtensions.DiscardAsync.html
  commentId: Overload:Wrap.ResultExtensions.DiscardAsync
  fullName: Wrap.ResultExtensions.DiscardAsync
  nameWithType: ResultExtensions.DiscardAsync
- uid: Wrap.ResultExtensions.DiscardAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}})
  name: DiscardAsync<T>(Task<Result<T>>)
  href: api/Wrap.ResultExtensions.DiscardAsync.html#Wrap_ResultExtensions_DiscardAsync__1_System_Threading_Tasks_Task_Wrap_Result___0___
  commentId: M:Wrap.ResultExtensions.DiscardAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}})
  name.vb: DiscardAsync(Of T)(Task(Of Result(Of T)))
  fullName: Wrap.ResultExtensions.DiscardAsync<T>(System.Threading.Tasks.Task<Wrap.Result<T>>)
  fullName.vb: Wrap.ResultExtensions.DiscardAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)))
  nameWithType: ResultExtensions.DiscardAsync<T>(Task<Result<T>>)
  nameWithType.vb: ResultExtensions.DiscardAsync(Of T)(Task(Of Result(Of T)))
- uid: Wrap.ResultExtensions.Discard``1(Wrap.Result{``0})
  name: Discard<T>(Result<T>)
  href: api/Wrap.ResultExtensions.Discard.html#Wrap_ResultExtensions_Discard__1_Wrap_Result___0__
  commentId: M:Wrap.ResultExtensions.Discard``1(Wrap.Result{``0})
  name.vb: Discard(Of T)(Result(Of T))
  fullName: Wrap.ResultExtensions.Discard<T>(Wrap.Result<T>)
  fullName.vb: Wrap.ResultExtensions.Discard(Of T)(Wrap.Result(Of T))
  nameWithType: ResultExtensions.Discard<T>(Result<T>)
  nameWithType.vb: ResultExtensions.Discard(Of T)(Result(Of T))
- uid: Wrap.ResultExtensions.Filter*
  name: Filter
  href: api/Wrap.ResultExtensions.Filter.html
  commentId: Overload:Wrap.ResultExtensions.Filter
  fullName: Wrap.ResultExtensions.Filter
  nameWithType: ResultExtensions.Filter
- uid: Wrap.ResultExtensions.FilterAsync*
  name: FilterAsync
  href: api/Wrap.ResultExtensions.FilterAsync.html
  commentId: Overload:Wrap.ResultExtensions.FilterAsync
  fullName: Wrap.ResultExtensions.FilterAsync
  nameWithType: ResultExtensions.FilterAsync
- uid: Wrap.ResultExtensions.FilterAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Boolean})
  name: FilterAsync<T>(Task<Result<T>>, Func<T, bool>)
  href: api/Wrap.ResultExtensions.FilterAsync.html#Wrap_ResultExtensions_FilterAsync__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Func___0_System_Boolean__
  commentId: M:Wrap.ResultExtensions.FilterAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Boolean})
  name.vb: FilterAsync(Of T)(Task(Of Result(Of T)), Func(Of T, Boolean))
  fullName: Wrap.ResultExtensions.FilterAsync<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<T, bool>)
  fullName.vb: Wrap.ResultExtensions.FilterAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of T, Boolean))
  nameWithType: ResultExtensions.FilterAsync<T>(Task<Result<T>>, Func<T, bool>)
  nameWithType.vb: ResultExtensions.FilterAsync(Of T)(Task(Of Result(Of T)), Func(Of T, Boolean))
- uid: Wrap.ResultExtensions.FilterAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: FilterAsync<T>(Task<Result<T>>, Func<T, Task<bool>>)
  href: api/Wrap.ResultExtensions.FilterAsync.html#Wrap_ResultExtensions_FilterAsync__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Wrap.ResultExtensions.FilterAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: FilterAsync(Of T)(Task(Of Result(Of T)), Func(Of T, Task(Of Boolean)))
  fullName: Wrap.ResultExtensions.FilterAsync<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Wrap.ResultExtensions.FilterAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: ResultExtensions.FilterAsync<T>(Task<Result<T>>, Func<T, Task<bool>>)
  nameWithType.vb: ResultExtensions.FilterAsync(Of T)(Task(Of Result(Of T)), Func(Of T, Task(Of Boolean)))
- uid: Wrap.ResultExtensions.FilterAsync``1(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: FilterAsync<T>(Result<T>, Func<T, Task<bool>>)
  href: api/Wrap.ResultExtensions.FilterAsync.html#Wrap_ResultExtensions_FilterAsync__1_Wrap_Result___0__System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Wrap.ResultExtensions.FilterAsync``1(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: FilterAsync(Of T)(Result(Of T), Func(Of T, Task(Of Boolean)))
  fullName: Wrap.ResultExtensions.FilterAsync<T>(Wrap.Result<T>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Wrap.ResultExtensions.FilterAsync(Of T)(Wrap.Result(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: ResultExtensions.FilterAsync<T>(Result<T>, Func<T, Task<bool>>)
  nameWithType.vb: ResultExtensions.FilterAsync(Of T)(Result(Of T), Func(Of T, Task(Of Boolean)))
- uid: Wrap.ResultExtensions.Filter``1(Wrap.Result{``0},System.Func{``0,System.Boolean})
  name: Filter<T>(Result<T>, Func<T, bool>)
  href: api/Wrap.ResultExtensions.Filter.html#Wrap_ResultExtensions_Filter__1_Wrap_Result___0__System_Func___0_System_Boolean__
  commentId: M:Wrap.ResultExtensions.Filter``1(Wrap.Result{``0},System.Func{``0,System.Boolean})
  name.vb: Filter(Of T)(Result(Of T), Func(Of T, Boolean))
  fullName: Wrap.ResultExtensions.Filter<T>(Wrap.Result<T>, System.Func<T, bool>)
  fullName.vb: Wrap.ResultExtensions.Filter(Of T)(Wrap.Result(Of T), System.Func(Of T, Boolean))
  nameWithType: ResultExtensions.Filter<T>(Result<T>, Func<T, bool>)
  nameWithType.vb: ResultExtensions.Filter(Of T)(Result(Of T), Func(Of T, Boolean))
- uid: Wrap.ResultExtensions.IfFail*
  name: IfFail
  href: api/Wrap.ResultExtensions.IfFail.html
  commentId: Overload:Wrap.ResultExtensions.IfFail
  fullName: Wrap.ResultExtensions.IfFail
  nameWithType: ResultExtensions.IfFail
- uid: Wrap.ResultExtensions.IfFailAsync*
  name: IfFailAsync
  href: api/Wrap.ResultExtensions.IfFailAsync.html
  commentId: Overload:Wrap.ResultExtensions.IfFailAsync
  fullName: Wrap.ResultExtensions.IfFailAsync
  nameWithType: ResultExtensions.IfFailAsync
- uid: Wrap.ResultExtensions.IfFailAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Action{Wrap.FailValue})
  name: IfFailAsync<T>(Task<Result<T>>, Action<FailValue>)
  href: api/Wrap.ResultExtensions.IfFailAsync.html#Wrap_ResultExtensions_IfFailAsync__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Action_Wrap_FailValue__
  commentId: M:Wrap.ResultExtensions.IfFailAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Action{Wrap.FailValue})
  name.vb: IfFailAsync(Of T)(Task(Of Result(Of T)), Action(Of FailValue))
  fullName: Wrap.ResultExtensions.IfFailAsync<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Action<Wrap.FailValue>)
  fullName.vb: Wrap.ResultExtensions.IfFailAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Action(Of Wrap.FailValue))
  nameWithType: ResultExtensions.IfFailAsync<T>(Task<Result<T>>, Action<FailValue>)
  nameWithType.vb: ResultExtensions.IfFailAsync(Of T)(Task(Of Result(Of T)), Action(Of FailValue))
- uid: Wrap.ResultExtensions.IfFailAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task})
  name: IfFailAsync<T>(Task<Result<T>>, Func<FailValue, Task>)
  href: api/Wrap.ResultExtensions.IfFailAsync.html#Wrap_ResultExtensions_IfFailAsync__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Func_Wrap_FailValue_System_Threading_Tasks_Task__
  commentId: M:Wrap.ResultExtensions.IfFailAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task})
  name.vb: IfFailAsync(Of T)(Task(Of Result(Of T)), Func(Of FailValue, Task))
  fullName: Wrap.ResultExtensions.IfFailAsync<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.ResultExtensions.IfFailAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task))
  nameWithType: ResultExtensions.IfFailAsync<T>(Task<Result<T>>, Func<FailValue, Task>)
  nameWithType.vb: ResultExtensions.IfFailAsync(Of T)(Task(Of Result(Of T)), Func(Of FailValue, Task))
- uid: Wrap.ResultExtensions.IfFailAsync``1(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task})
  name: IfFailAsync<T>(Result<T>, Func<FailValue, Task>)
  href: api/Wrap.ResultExtensions.IfFailAsync.html#Wrap_ResultExtensions_IfFailAsync__1_Wrap_Result___0__System_Func_Wrap_FailValue_System_Threading_Tasks_Task__
  commentId: M:Wrap.ResultExtensions.IfFailAsync``1(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task})
  name.vb: IfFailAsync(Of T)(Result(Of T), Func(Of FailValue, Task))
  fullName: Wrap.ResultExtensions.IfFailAsync<T>(Wrap.Result<T>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.ResultExtensions.IfFailAsync(Of T)(Wrap.Result(Of T), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task))
  nameWithType: ResultExtensions.IfFailAsync<T>(Result<T>, Func<FailValue, Task>)
  nameWithType.vb: ResultExtensions.IfFailAsync(Of T)(Result(Of T), Func(Of FailValue, Task))
- uid: Wrap.ResultExtensions.IfFail``1(Wrap.Result{``0},System.Action{Wrap.FailValue})
  name: IfFail<T>(Result<T>, Action<FailValue>)
  href: api/Wrap.ResultExtensions.IfFail.html#Wrap_ResultExtensions_IfFail__1_Wrap_Result___0__System_Action_Wrap_FailValue__
  commentId: M:Wrap.ResultExtensions.IfFail``1(Wrap.Result{``0},System.Action{Wrap.FailValue})
  name.vb: IfFail(Of T)(Result(Of T), Action(Of FailValue))
  fullName: Wrap.ResultExtensions.IfFail<T>(Wrap.Result<T>, System.Action<Wrap.FailValue>)
  fullName.vb: Wrap.ResultExtensions.IfFail(Of T)(Wrap.Result(Of T), System.Action(Of Wrap.FailValue))
  nameWithType: ResultExtensions.IfFail<T>(Result<T>, Action<FailValue>)
  nameWithType.vb: ResultExtensions.IfFail(Of T)(Result(Of T), Action(Of FailValue))
- uid: Wrap.ResultExtensions.IfOk*
  name: IfOk
  href: api/Wrap.ResultExtensions.IfOk.html
  commentId: Overload:Wrap.ResultExtensions.IfOk
  fullName: Wrap.ResultExtensions.IfOk
  nameWithType: ResultExtensions.IfOk
- uid: Wrap.ResultExtensions.IfOkAsync*
  name: IfOkAsync
  href: api/Wrap.ResultExtensions.IfOkAsync.html
  commentId: Overload:Wrap.ResultExtensions.IfOkAsync
  fullName: Wrap.ResultExtensions.IfOkAsync
  nameWithType: ResultExtensions.IfOkAsync
- uid: Wrap.ResultExtensions.IfOkAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Action{``0})
  name: IfOkAsync<T>(Task<Result<T>>, Action<T>)
  href: api/Wrap.ResultExtensions.IfOkAsync.html#Wrap_ResultExtensions_IfOkAsync__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Action___0__
  commentId: M:Wrap.ResultExtensions.IfOkAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Action{``0})
  name.vb: IfOkAsync(Of T)(Task(Of Result(Of T)), Action(Of T))
  fullName: Wrap.ResultExtensions.IfOkAsync<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Action<T>)
  fullName.vb: Wrap.ResultExtensions.IfOkAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Action(Of T))
  nameWithType: ResultExtensions.IfOkAsync<T>(Task<Result<T>>, Action<T>)
  nameWithType.vb: ResultExtensions.IfOkAsync(Of T)(Task(Of Result(Of T)), Action(Of T))
- uid: Wrap.ResultExtensions.IfOkAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task})
  name: IfOkAsync<T>(Task<Result<T>>, Func<T, Task>)
  href: api/Wrap.ResultExtensions.IfOkAsync.html#Wrap_ResultExtensions_IfOkAsync__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.ResultExtensions.IfOkAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: IfOkAsync(Of T)(Task(Of Result(Of T)), Func(Of T, Task))
  fullName: Wrap.ResultExtensions.IfOkAsync<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.ResultExtensions.IfOkAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: ResultExtensions.IfOkAsync<T>(Task<Result<T>>, Func<T, Task>)
  nameWithType.vb: ResultExtensions.IfOkAsync(Of T)(Task(Of Result(Of T)), Func(Of T, Task))
- uid: Wrap.ResultExtensions.IfOkAsync``1(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task})
  name: IfOkAsync<T>(Result<T>, Func<T, Task>)
  href: api/Wrap.ResultExtensions.IfOkAsync.html#Wrap_ResultExtensions_IfOkAsync__1_Wrap_Result___0__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.ResultExtensions.IfOkAsync``1(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: IfOkAsync(Of T)(Result(Of T), Func(Of T, Task))
  fullName: Wrap.ResultExtensions.IfOkAsync<T>(Wrap.Result<T>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.ResultExtensions.IfOkAsync(Of T)(Wrap.Result(Of T), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: ResultExtensions.IfOkAsync<T>(Result<T>, Func<T, Task>)
  nameWithType.vb: ResultExtensions.IfOkAsync(Of T)(Result(Of T), Func(Of T, Task))
- uid: Wrap.ResultExtensions.IfOk``1(Wrap.Result{``0},System.Action{``0})
  name: IfOk<T>(Result<T>, Action<T>)
  href: api/Wrap.ResultExtensions.IfOk.html#Wrap_ResultExtensions_IfOk__1_Wrap_Result___0__System_Action___0__
  commentId: M:Wrap.ResultExtensions.IfOk``1(Wrap.Result{``0},System.Action{``0})
  name.vb: IfOk(Of T)(Result(Of T), Action(Of T))
  fullName: Wrap.ResultExtensions.IfOk<T>(Wrap.Result<T>, System.Action<T>)
  fullName.vb: Wrap.ResultExtensions.IfOk(Of T)(Wrap.Result(Of T), System.Action(Of T))
  nameWithType: ResultExtensions.IfOk<T>(Result<T>, Action<T>)
  nameWithType.vb: ResultExtensions.IfOk(Of T)(Result(Of T), Action(Of T))
- uid: Wrap.ResultExtensions.Map*
  name: Map
  href: api/Wrap.ResultExtensions.Map.html
  commentId: Overload:Wrap.ResultExtensions.Map
  fullName: Wrap.ResultExtensions.Map
  nameWithType: ResultExtensions.Map
- uid: Wrap.ResultExtensions.MapAsync*
  name: MapAsync
  href: api/Wrap.ResultExtensions.MapAsync.html
  commentId: Overload:Wrap.ResultExtensions.MapAsync
  fullName: Wrap.ResultExtensions.MapAsync
  nameWithType: ResultExtensions.MapAsync
- uid: Wrap.ResultExtensions.MapAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MapAsync<T, TReturn>(Task<Result<T>>, Func<T, Task<TReturn>>)
  href: api/Wrap.ResultExtensions.MapAsync.html#Wrap_ResultExtensions_MapAsync__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.ResultExtensions.MapAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MapAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.ResultExtensions.MapAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.ResultExtensions.MapAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: ResultExtensions.MapAsync<T, TReturn>(Task<Result<T>>, Func<T, Task<TReturn>>)
  nameWithType.vb: ResultExtensions.MapAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.ResultExtensions.MapAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}},Wrap.R.ExceptionHandler)
  name: MapAsync<T, TReturn>(Task<Result<T>>, Func<T, Task<TReturn>>, ExceptionHandler)
  href: api/Wrap.ResultExtensions.MapAsync.html#Wrap_ResultExtensions_MapAsync__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func___0_System_Threading_Tasks_Task___1___Wrap_R_ExceptionHandler_
  commentId: M:Wrap.ResultExtensions.MapAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}},Wrap.R.ExceptionHandler)
  name.vb: MapAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of TReturn)), ExceptionHandler)
  fullName: Wrap.ResultExtensions.MapAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, Wrap.R.ExceptionHandler)
  fullName.vb: Wrap.ResultExtensions.MapAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), Wrap.R.ExceptionHandler)
  nameWithType: ResultExtensions.MapAsync<T, TReturn>(Task<Result<T>>, Func<T, Task<TReturn>>, R.ExceptionHandler)
  nameWithType.vb: ResultExtensions.MapAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of TReturn)), R.ExceptionHandler)
- uid: Wrap.ResultExtensions.MapAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,``1})
  name: MapAsync<T, TReturn>(Task<Result<T>>, Func<T, TReturn>)
  href: api/Wrap.ResultExtensions.MapAsync.html#Wrap_ResultExtensions_MapAsync__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func___0___1__
  commentId: M:Wrap.ResultExtensions.MapAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,``1})
  name.vb: MapAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, TReturn))
  fullName: Wrap.ResultExtensions.MapAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.ResultExtensions.MapAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of T, TReturn))
  nameWithType: ResultExtensions.MapAsync<T, TReturn>(Task<Result<T>>, Func<T, TReturn>)
  nameWithType.vb: ResultExtensions.MapAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, TReturn))
- uid: Wrap.ResultExtensions.MapAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,``1},Wrap.R.ExceptionHandler)
  name: MapAsync<T, TReturn>(Task<Result<T>>, Func<T, TReturn>, ExceptionHandler)
  href: api/Wrap.ResultExtensions.MapAsync.html#Wrap_ResultExtensions_MapAsync__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func___0___1__Wrap_R_ExceptionHandler_
  commentId: M:Wrap.ResultExtensions.MapAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{``0,``1},Wrap.R.ExceptionHandler)
  name.vb: MapAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, TReturn), ExceptionHandler)
  fullName: Wrap.ResultExtensions.MapAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<T, TReturn>, Wrap.R.ExceptionHandler)
  fullName.vb: Wrap.ResultExtensions.MapAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of T, TReturn), Wrap.R.ExceptionHandler)
  nameWithType: ResultExtensions.MapAsync<T, TReturn>(Task<Result<T>>, Func<T, TReturn>, R.ExceptionHandler)
  nameWithType.vb: ResultExtensions.MapAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, TReturn), R.ExceptionHandler)
- uid: Wrap.ResultExtensions.MapAsync``2(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MapAsync<T, TReturn>(Result<T>, Func<T, Task<TReturn>>)
  href: api/Wrap.ResultExtensions.MapAsync.html#Wrap_ResultExtensions_MapAsync__2_Wrap_Result___0__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.ResultExtensions.MapAsync``2(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MapAsync(Of T, TReturn)(Result(Of T), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.ResultExtensions.MapAsync<T, TReturn>(Wrap.Result<T>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.ResultExtensions.MapAsync(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: ResultExtensions.MapAsync<T, TReturn>(Result<T>, Func<T, Task<TReturn>>)
  nameWithType.vb: ResultExtensions.MapAsync(Of T, TReturn)(Result(Of T), Func(Of T, Task(Of TReturn)))
- uid: Wrap.ResultExtensions.MapAsync``2(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task{``1}},Wrap.R.ExceptionHandler)
  name: MapAsync<T, TReturn>(Result<T>, Func<T, Task<TReturn>>, ExceptionHandler)
  href: api/Wrap.ResultExtensions.MapAsync.html#Wrap_ResultExtensions_MapAsync__2_Wrap_Result___0__System_Func___0_System_Threading_Tasks_Task___1___Wrap_R_ExceptionHandler_
  commentId: M:Wrap.ResultExtensions.MapAsync``2(Wrap.Result{``0},System.Func{``0,System.Threading.Tasks.Task{``1}},Wrap.R.ExceptionHandler)
  name.vb: MapAsync(Of T, TReturn)(Result(Of T), Func(Of T, Task(Of TReturn)), ExceptionHandler)
  fullName: Wrap.ResultExtensions.MapAsync<T, TReturn>(Wrap.Result<T>, System.Func<T, System.Threading.Tasks.Task<TReturn>>, Wrap.R.ExceptionHandler)
  fullName.vb: Wrap.ResultExtensions.MapAsync(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)), Wrap.R.ExceptionHandler)
  nameWithType: ResultExtensions.MapAsync<T, TReturn>(Result<T>, Func<T, Task<TReturn>>, R.ExceptionHandler)
  nameWithType.vb: ResultExtensions.MapAsync(Of T, TReturn)(Result(Of T), Func(Of T, Task(Of TReturn)), R.ExceptionHandler)
- uid: Wrap.ResultExtensions.Map``2(Wrap.Result{``0},System.Func{``0,``1})
  name: Map<T, TReturn>(Result<T>, Func<T, TReturn>)
  href: api/Wrap.ResultExtensions.Map.html#Wrap_ResultExtensions_Map__2_Wrap_Result___0__System_Func___0___1__
  commentId: M:Wrap.ResultExtensions.Map``2(Wrap.Result{``0},System.Func{``0,``1})
  name.vb: Map(Of T, TReturn)(Result(Of T), Func(Of T, TReturn))
  fullName: Wrap.ResultExtensions.Map<T, TReturn>(Wrap.Result<T>, System.Func<T, TReturn>)
  fullName.vb: Wrap.ResultExtensions.Map(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of T, TReturn))
  nameWithType: ResultExtensions.Map<T, TReturn>(Result<T>, Func<T, TReturn>)
  nameWithType.vb: ResultExtensions.Map(Of T, TReturn)(Result(Of T), Func(Of T, TReturn))
- uid: Wrap.ResultExtensions.Map``2(Wrap.Result{``0},System.Func{``0,``1},Wrap.R.ExceptionHandler)
  name: Map<T, TReturn>(Result<T>, Func<T, TReturn>, ExceptionHandler)
  href: api/Wrap.ResultExtensions.Map.html#Wrap_ResultExtensions_Map__2_Wrap_Result___0__System_Func___0___1__Wrap_R_ExceptionHandler_
  commentId: M:Wrap.ResultExtensions.Map``2(Wrap.Result{``0},System.Func{``0,``1},Wrap.R.ExceptionHandler)
  name.vb: Map(Of T, TReturn)(Result(Of T), Func(Of T, TReturn), ExceptionHandler)
  fullName: Wrap.ResultExtensions.Map<T, TReturn>(Wrap.Result<T>, System.Func<T, TReturn>, Wrap.R.ExceptionHandler)
  fullName.vb: Wrap.ResultExtensions.Map(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of T, TReturn), Wrap.R.ExceptionHandler)
  nameWithType: ResultExtensions.Map<T, TReturn>(Result<T>, Func<T, TReturn>, R.ExceptionHandler)
  nameWithType.vb: ResultExtensions.Map(Of T, TReturn)(Result(Of T), Func(Of T, TReturn), R.ExceptionHandler)
- uid: Wrap.ResultExtensions.Match*
  name: Match
  href: api/Wrap.ResultExtensions.Match.html
  commentId: Overload:Wrap.ResultExtensions.Match
  fullName: Wrap.ResultExtensions.Match
  nameWithType: ResultExtensions.Match
- uid: Wrap.ResultExtensions.MatchAsync*
  name: MatchAsync
  href: api/Wrap.ResultExtensions.MatchAsync.html
  commentId: Overload:Wrap.ResultExtensions.MatchAsync
  fullName: Wrap.ResultExtensions.MatchAsync
  nameWithType: ResultExtensions.MatchAsync
- uid: Wrap.ResultExtensions.MatchAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: MatchAsync<T>(Task<Result<T>>, Func<FailValue, Task>, Func<T, Task>)
  href: api/Wrap.ResultExtensions.MatchAsync.html#Wrap_ResultExtensions_MatchAsync__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Func_Wrap_FailValue_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.ResultExtensions.MatchAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of T)(Task(Of Result(Of T)), Func(Of FailValue, Task), Func(Of T, Task))
  fullName: Wrap.ResultExtensions.MatchAsync<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.ResultExtensions.MatchAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: ResultExtensions.MatchAsync<T>(Task<Result<T>>, Func<FailValue, Task>, Func<T, Task>)
  nameWithType.vb: ResultExtensions.MatchAsync(Of T)(Task(Of Result(Of T)), Func(Of FailValue, Task), Func(Of T, Task))
- uid: Wrap.ResultExtensions.MatchAsync``1(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: MatchAsync<T>(Result<T>, Func<FailValue, Task>, Func<T, Task>)
  href: api/Wrap.ResultExtensions.MatchAsync.html#Wrap_ResultExtensions_MatchAsync__1_Wrap_Result___0__System_Func_Wrap_FailValue_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Wrap.ResultExtensions.MatchAsync``1(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: MatchAsync(Of T)(Result(Of T), Func(Of FailValue, Task), Func(Of T, Task))
  fullName: Wrap.ResultExtensions.MatchAsync<T>(Wrap.Result<T>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Wrap.ResultExtensions.MatchAsync(Of T)(Wrap.Result(Of T), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: ResultExtensions.MatchAsync<T>(Result<T>, Func<FailValue, Task>, Func<T, Task>)
  nameWithType.vb: ResultExtensions.MatchAsync(Of T)(Result(Of T), Func(Of FailValue, Task), Func(Of T, Task))
- uid: Wrap.ResultExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Wrap.ResultExtensions.MatchAsync.html#Wrap_ResultExtensions_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func_Wrap_FailValue_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.ResultExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.ResultExtensions.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.ResultExtensions.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: ResultExtensions.MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: ResultExtensions.MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.ResultExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.ResultExtensions.MatchAsync.html#Wrap_ResultExtensions_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func_Wrap_FailValue_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.ResultExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.ResultExtensions.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.ResultExtensions.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: ResultExtensions.MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: ResultExtensions.MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.ResultExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.ResultExtensions.MatchAsync.html#Wrap_ResultExtensions_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func_Wrap_FailValue___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.ResultExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.ResultExtensions.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<Wrap.FailValue, TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.ResultExtensions.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of Wrap.FailValue, TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: ResultExtensions.MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: ResultExtensions.MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.ResultExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,``1},System.Func{``0,``1})
  name: MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, TReturn>, Func<T, TReturn>)
  href: api/Wrap.ResultExtensions.MatchAsync.html#Wrap_ResultExtensions_MatchAsync__2_System_Threading_Tasks_Task_Wrap_Result___0___System_Func_Wrap_FailValue___1__System_Func___0___1__
  commentId: M:Wrap.ResultExtensions.MatchAsync``2(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,``1},System.Func{``0,``1})
  name.vb: MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, TReturn), Func(Of T, TReturn))
  fullName: Wrap.ResultExtensions.MatchAsync<T, TReturn>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<Wrap.FailValue, TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.ResultExtensions.MatchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of Wrap.FailValue, TReturn), System.Func(Of T, TReturn))
  nameWithType: ResultExtensions.MatchAsync<T, TReturn>(Task<Result<T>>, Func<FailValue, TReturn>, Func<T, TReturn>)
  nameWithType.vb: ResultExtensions.MatchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of FailValue, TReturn), Func(Of T, TReturn))
- uid: Wrap.ResultExtensions.MatchAsync``2(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Result<T>, Func<FailValue, Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Wrap.ResultExtensions.MatchAsync.html#Wrap_ResultExtensions_MatchAsync__2_Wrap_Result___0__System_Func_Wrap_FailValue_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.ResultExtensions.MatchAsync``2(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Result(Of T), Func(Of FailValue, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.ResultExtensions.MatchAsync<T, TReturn>(Wrap.Result<T>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.ResultExtensions.MatchAsync(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: ResultExtensions.MatchAsync<T, TReturn>(Result<T>, Func<FailValue, Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: ResultExtensions.MatchAsync(Of T, TReturn)(Result(Of T), Func(Of FailValue, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Wrap.ResultExtensions.MatchAsync``2(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: MatchAsync<T, TReturn>(Result<T>, Func<FailValue, Task<TReturn>>, Func<T, TReturn>)
  href: api/Wrap.ResultExtensions.MatchAsync.html#Wrap_ResultExtensions_MatchAsync__2_Wrap_Result___0__System_Func_Wrap_FailValue_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Wrap.ResultExtensions.MatchAsync``2(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: MatchAsync(Of T, TReturn)(Result(Of T), Func(Of FailValue, Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Wrap.ResultExtensions.MatchAsync<T, TReturn>(Wrap.Result<T>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Wrap.ResultExtensions.MatchAsync(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: ResultExtensions.MatchAsync<T, TReturn>(Result<T>, Func<FailValue, Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: ResultExtensions.MatchAsync(Of T, TReturn)(Result(Of T), Func(Of FailValue, Task(Of TReturn)), Func(Of T, TReturn))
- uid: Wrap.ResultExtensions.MatchAsync``2(Wrap.Result{``0},System.Func{Wrap.FailValue,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MatchAsync<T, TReturn>(Result<T>, Func<FailValue, TReturn>, Func<T, Task<TReturn>>)
  href: api/Wrap.ResultExtensions.MatchAsync.html#Wrap_ResultExtensions_MatchAsync__2_Wrap_Result___0__System_Func_Wrap_FailValue___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Wrap.ResultExtensions.MatchAsync``2(Wrap.Result{``0},System.Func{Wrap.FailValue,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MatchAsync(Of T, TReturn)(Result(Of T), Func(Of FailValue, TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Wrap.ResultExtensions.MatchAsync<T, TReturn>(Wrap.Result<T>, System.Func<Wrap.FailValue, TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Wrap.ResultExtensions.MatchAsync(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of Wrap.FailValue, TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: ResultExtensions.MatchAsync<T, TReturn>(Result<T>, Func<FailValue, TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: ResultExtensions.MatchAsync(Of T, TReturn)(Result(Of T), Func(Of FailValue, TReturn), Func(Of T, Task(Of TReturn)))
- uid: Wrap.ResultExtensions.Match``1(Wrap.Result{``0},System.Action{Wrap.FailValue},System.Action{``0})
  name: Match<T>(Result<T>, Action<FailValue>, Action<T>)
  href: api/Wrap.ResultExtensions.Match.html#Wrap_ResultExtensions_Match__1_Wrap_Result___0__System_Action_Wrap_FailValue__System_Action___0__
  commentId: M:Wrap.ResultExtensions.Match``1(Wrap.Result{``0},System.Action{Wrap.FailValue},System.Action{``0})
  name.vb: Match(Of T)(Result(Of T), Action(Of FailValue), Action(Of T))
  fullName: Wrap.ResultExtensions.Match<T>(Wrap.Result<T>, System.Action<Wrap.FailValue>, System.Action<T>)
  fullName.vb: Wrap.ResultExtensions.Match(Of T)(Wrap.Result(Of T), System.Action(Of Wrap.FailValue), System.Action(Of T))
  nameWithType: ResultExtensions.Match<T>(Result<T>, Action<FailValue>, Action<T>)
  nameWithType.vb: ResultExtensions.Match(Of T)(Result(Of T), Action(Of FailValue), Action(Of T))
- uid: Wrap.ResultExtensions.Match``2(Wrap.Result{``0},System.Func{Wrap.FailValue,``1},System.Func{``0,``1})
  name: Match<T, TReturn>(Result<T>, Func<FailValue, TReturn>, Func<T, TReturn>)
  href: api/Wrap.ResultExtensions.Match.html#Wrap_ResultExtensions_Match__2_Wrap_Result___0__System_Func_Wrap_FailValue___1__System_Func___0___1__
  commentId: M:Wrap.ResultExtensions.Match``2(Wrap.Result{``0},System.Func{Wrap.FailValue,``1},System.Func{``0,``1})
  name.vb: Match(Of T, TReturn)(Result(Of T), Func(Of FailValue, TReturn), Func(Of T, TReturn))
  fullName: Wrap.ResultExtensions.Match<T, TReturn>(Wrap.Result<T>, System.Func<Wrap.FailValue, TReturn>, System.Func<T, TReturn>)
  fullName.vb: Wrap.ResultExtensions.Match(Of T, TReturn)(Wrap.Result(Of T), System.Func(Of Wrap.FailValue, TReturn), System.Func(Of T, TReturn))
  nameWithType: ResultExtensions.Match<T, TReturn>(Result<T>, Func<FailValue, TReturn>, Func<T, TReturn>)
  nameWithType.vb: ResultExtensions.Match(Of T, TReturn)(Result(Of T), Func(Of FailValue, TReturn), Func(Of T, TReturn))
- uid: Wrap.ResultExtensions.Unsafe*
  name: Unsafe
  href: api/Wrap.ResultExtensions.Unsafe.html
  commentId: Overload:Wrap.ResultExtensions.Unsafe
  fullName: Wrap.ResultExtensions.Unsafe
  nameWithType: ResultExtensions.Unsafe
- uid: Wrap.ResultExtensions.Unsafe``1(System.Threading.Tasks.Task{Wrap.Result{``0}})
  name: Unsafe<T>(Task<Result<T>>)
  href: api/Wrap.ResultExtensions.Unsafe.html#Wrap_ResultExtensions_Unsafe__1_System_Threading_Tasks_Task_Wrap_Result___0___
  commentId: M:Wrap.ResultExtensions.Unsafe``1(System.Threading.Tasks.Task{Wrap.Result{``0}})
  name.vb: Unsafe(Of T)(Task(Of Result(Of T)))
  fullName: Wrap.ResultExtensions.Unsafe<T>(System.Threading.Tasks.Task<Wrap.Result<T>>)
  fullName.vb: Wrap.ResultExtensions.Unsafe(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)))
  nameWithType: ResultExtensions.Unsafe<T>(Task<Result<T>>)
  nameWithType.vb: ResultExtensions.Unsafe(Of T)(Task(Of Result(Of T)))
- uid: Wrap.ResultExtensions.Unsafe``1(Wrap.Result{``0})
  name: Unsafe<T>(Result<T>)
  href: api/Wrap.ResultExtensions.Unsafe.html#Wrap_ResultExtensions_Unsafe__1_Wrap_Result___0__
  commentId: M:Wrap.ResultExtensions.Unsafe``1(Wrap.Result{``0})
  name.vb: Unsafe(Of T)(Result(Of T))
  fullName: Wrap.ResultExtensions.Unsafe<T>(Wrap.Result<T>)
  fullName.vb: Wrap.ResultExtensions.Unsafe(Of T)(Wrap.Result(Of T))
  nameWithType: ResultExtensions.Unsafe<T>(Result<T>)
  nameWithType.vb: ResultExtensions.Unsafe(Of T)(Result(Of T))
- uid: Wrap.ResultExtensions.Unwrap*
  name: Unwrap
  href: api/Wrap.ResultExtensions.Unwrap.html
  commentId: Overload:Wrap.ResultExtensions.Unwrap
  fullName: Wrap.ResultExtensions.Unwrap
  nameWithType: ResultExtensions.Unwrap
- uid: Wrap.ResultExtensions.UnwrapAsync*
  name: UnwrapAsync
  href: api/Wrap.ResultExtensions.UnwrapAsync.html
  commentId: Overload:Wrap.ResultExtensions.UnwrapAsync
  fullName: Wrap.ResultExtensions.UnwrapAsync
  nameWithType: ResultExtensions.UnwrapAsync
- uid: Wrap.ResultExtensions.UnwrapAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``0}})
  name: UnwrapAsync<T>(Task<Result<T>>, Func<FailValue, Task<T>>)
  href: api/Wrap.ResultExtensions.UnwrapAsync.html#Wrap_ResultExtensions_UnwrapAsync__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Func_Wrap_FailValue_System_Threading_Tasks_Task___0___
  commentId: M:Wrap.ResultExtensions.UnwrapAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``0}})
  name.vb: UnwrapAsync(Of T)(Task(Of Result(Of T)), Func(Of FailValue, Task(Of T)))
  fullName: Wrap.ResultExtensions.UnwrapAsync<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task<T>>)
  fullName.vb: Wrap.ResultExtensions.UnwrapAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task(Of T)))
  nameWithType: ResultExtensions.UnwrapAsync<T>(Task<Result<T>>, Func<FailValue, Task<T>>)
  nameWithType.vb: ResultExtensions.UnwrapAsync(Of T)(Task(Of Result(Of T)), Func(Of FailValue, Task(Of T)))
- uid: Wrap.ResultExtensions.UnwrapAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,``0})
  name: UnwrapAsync<T>(Task<Result<T>>, Func<FailValue, T>)
  href: api/Wrap.ResultExtensions.UnwrapAsync.html#Wrap_ResultExtensions_UnwrapAsync__1_System_Threading_Tasks_Task_Wrap_Result___0___System_Func_Wrap_FailValue___0__
  commentId: M:Wrap.ResultExtensions.UnwrapAsync``1(System.Threading.Tasks.Task{Wrap.Result{``0}},System.Func{Wrap.FailValue,``0})
  name.vb: UnwrapAsync(Of T)(Task(Of Result(Of T)), Func(Of FailValue, T))
  fullName: Wrap.ResultExtensions.UnwrapAsync<T>(System.Threading.Tasks.Task<Wrap.Result<T>>, System.Func<Wrap.FailValue, T>)
  fullName.vb: Wrap.ResultExtensions.UnwrapAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Result(Of T)), System.Func(Of Wrap.FailValue, T))
  nameWithType: ResultExtensions.UnwrapAsync<T>(Task<Result<T>>, Func<FailValue, T>)
  nameWithType.vb: ResultExtensions.UnwrapAsync(Of T)(Task(Of Result(Of T)), Func(Of FailValue, T))
- uid: Wrap.ResultExtensions.UnwrapAsync``1(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``0}})
  name: UnwrapAsync<T>(Result<T>, Func<FailValue, Task<T>>)
  href: api/Wrap.ResultExtensions.UnwrapAsync.html#Wrap_ResultExtensions_UnwrapAsync__1_Wrap_Result___0__System_Func_Wrap_FailValue_System_Threading_Tasks_Task___0___
  commentId: M:Wrap.ResultExtensions.UnwrapAsync``1(Wrap.Result{``0},System.Func{Wrap.FailValue,System.Threading.Tasks.Task{``0}})
  name.vb: UnwrapAsync(Of T)(Result(Of T), Func(Of FailValue, Task(Of T)))
  fullName: Wrap.ResultExtensions.UnwrapAsync<T>(Wrap.Result<T>, System.Func<Wrap.FailValue, System.Threading.Tasks.Task<T>>)
  fullName.vb: Wrap.ResultExtensions.UnwrapAsync(Of T)(Wrap.Result(Of T), System.Func(Of Wrap.FailValue, System.Threading.Tasks.Task(Of T)))
  nameWithType: ResultExtensions.UnwrapAsync<T>(Result<T>, Func<FailValue, Task<T>>)
  nameWithType.vb: ResultExtensions.UnwrapAsync(Of T)(Result(Of T), Func(Of FailValue, Task(Of T)))
- uid: Wrap.ResultExtensions.Unwrap``1(Wrap.Result{``0},System.Func{Wrap.FailValue,``0})
  name: Unwrap<T>(Result<T>, Func<FailValue, T>)
  href: api/Wrap.ResultExtensions.Unwrap.html#Wrap_ResultExtensions_Unwrap__1_Wrap_Result___0__System_Func_Wrap_FailValue___0__
  commentId: M:Wrap.ResultExtensions.Unwrap``1(Wrap.Result{``0},System.Func{Wrap.FailValue,``0})
  name.vb: Unwrap(Of T)(Result(Of T), Func(Of FailValue, T))
  fullName: Wrap.ResultExtensions.Unwrap<T>(Wrap.Result<T>, System.Func<Wrap.FailValue, T>)
  fullName.vb: Wrap.ResultExtensions.Unwrap(Of T)(Wrap.Result(Of T), System.Func(Of Wrap.FailValue, T))
  nameWithType: ResultExtensions.Unwrap<T>(Result<T>, Func<FailValue, T>)
  nameWithType.vb: ResultExtensions.Unwrap(Of T)(Result(Of T), Func(Of FailValue, T))
- uid: Wrap.Result`1
  name: Result<T>
  href: api/Wrap.Result-1.html
  commentId: T:Wrap.Result`1
  name.vb: Result(Of T)
  fullName: Wrap.Result<T>
  fullName.vb: Wrap.Result(Of T)
  nameWithType: Result<T>
  nameWithType.vb: Result(Of T)
- uid: Wrap.Result`1.#ctor
  name: Result()
  href: api/Wrap.Result-1.-ctor.html#Wrap_Result_1__ctor
  commentId: M:Wrap.Result`1.#ctor
  name.vb: New()
  fullName: Wrap.Result<T>.Result()
  fullName.vb: Wrap.Result(Of T).New()
  nameWithType: Result<T>.Result()
  nameWithType.vb: Result(Of T).New()
- uid: Wrap.Result`1.#ctor(Wrap.Result{`0})
  name: Result(Result<T>)
  href: api/Wrap.Result-1.-ctor.html#Wrap_Result_1__ctor_Wrap_Result__0__
  commentId: M:Wrap.Result`1.#ctor(Wrap.Result{`0})
  name.vb: New(Result(Of T))
  fullName: Wrap.Result<T>.Result(Wrap.Result<T>)
  fullName.vb: Wrap.Result(Of T).New(Wrap.Result(Of T))
  nameWithType: Result<T>.Result(Result<T>)
  nameWithType.vb: Result(Of T).New(Result(Of T))
- uid: Wrap.Result`1.#ctor*
  name: Result
  href: api/Wrap.Result-1.-ctor.html
  commentId: Overload:Wrap.Result`1.#ctor
  name.vb: New
  fullName: Wrap.Result<T>.Result
  fullName.vb: Wrap.Result(Of T).New
  nameWithType: Result<T>.Result
  nameWithType.vb: Result(Of T).New
- uid: Wrap.Result`1.AsTask
  name: AsTask()
  href: api/Wrap.Result-1.AsTask.html#Wrap_Result_1_AsTask
  commentId: M:Wrap.Result`1.AsTask
  fullName: Wrap.Result<T>.AsTask()
  fullName.vb: Wrap.Result(Of T).AsTask()
  nameWithType: Result<T>.AsTask()
  nameWithType.vb: Result(Of T).AsTask()
- uid: Wrap.Result`1.AsTask*
  name: AsTask
  href: api/Wrap.Result-1.AsTask.html
  commentId: Overload:Wrap.Result`1.AsTask
  fullName: Wrap.Result<T>.AsTask
  fullName.vb: Wrap.Result(Of T).AsTask
  nameWithType: Result<T>.AsTask
  nameWithType.vb: Result(Of T).AsTask
- uid: Wrap.Result`1.EqualityContract
  name: EqualityContract
  href: api/Wrap.Result-1.EqualityContract.html#Wrap_Result_1_EqualityContract
  commentId: P:Wrap.Result`1.EqualityContract
  fullName: Wrap.Result<T>.EqualityContract
  fullName.vb: Wrap.Result(Of T).EqualityContract
  nameWithType: Result<T>.EqualityContract
  nameWithType.vb: Result(Of T).EqualityContract
- uid: Wrap.Result`1.EqualityContract*
  name: EqualityContract
  href: api/Wrap.Result-1.EqualityContract.html
  commentId: Overload:Wrap.Result`1.EqualityContract
  fullName: Wrap.Result<T>.EqualityContract
  fullName.vb: Wrap.Result(Of T).EqualityContract
  nameWithType: Result<T>.EqualityContract
  nameWithType.vb: Result(Of T).EqualityContract
- uid: Wrap.Result`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Wrap.Result-1.Equals.html#Wrap_Result_1_Equals_System_Object_
  commentId: M:Wrap.Result`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.Result<T>.Equals(object?)
  fullName.vb: Wrap.Result(Of T).Equals(Object)
  nameWithType: Result<T>.Equals(object?)
  nameWithType.vb: Result(Of T).Equals(Object)
- uid: Wrap.Result`1.Equals(Wrap.Result{`0})
  name: Equals(Result<T>?)
  href: api/Wrap.Result-1.Equals.html#Wrap_Result_1_Equals_Wrap_Result__0__
  commentId: M:Wrap.Result`1.Equals(Wrap.Result{`0})
  name.vb: Equals(Result(Of T))
  fullName: Wrap.Result<T>.Equals(Wrap.Result<T>?)
  fullName.vb: Wrap.Result(Of T).Equals(Wrap.Result(Of T))
  nameWithType: Result<T>.Equals(Result<T>?)
  nameWithType.vb: Result(Of T).Equals(Result(Of T))
- uid: Wrap.Result`1.Equals*
  name: Equals
  href: api/Wrap.Result-1.Equals.html
  commentId: Overload:Wrap.Result`1.Equals
  fullName: Wrap.Result<T>.Equals
  fullName.vb: Wrap.Result(Of T).Equals
  nameWithType: Result<T>.Equals
  nameWithType.vb: Result(Of T).Equals
- uid: Wrap.Result`1.GetEnumerator
  name: GetEnumerator()
  href: api/Wrap.Result-1.GetEnumerator.html#Wrap_Result_1_GetEnumerator
  commentId: M:Wrap.Result`1.GetEnumerator
  fullName: Wrap.Result<T>.GetEnumerator()
  fullName.vb: Wrap.Result(Of T).GetEnumerator()
  nameWithType: Result<T>.GetEnumerator()
  nameWithType.vb: Result(Of T).GetEnumerator()
- uid: Wrap.Result`1.GetEnumerator*
  name: GetEnumerator
  href: api/Wrap.Result-1.GetEnumerator.html
  commentId: Overload:Wrap.Result`1.GetEnumerator
  fullName: Wrap.Result<T>.GetEnumerator
  fullName.vb: Wrap.Result(Of T).GetEnumerator
  nameWithType: Result<T>.GetEnumerator
  nameWithType.vb: Result(Of T).GetEnumerator
- uid: Wrap.Result`1.GetHashCode
  name: GetHashCode()
  href: api/Wrap.Result-1.GetHashCode.html#Wrap_Result_1_GetHashCode
  commentId: M:Wrap.Result`1.GetHashCode
  fullName: Wrap.Result<T>.GetHashCode()
  fullName.vb: Wrap.Result(Of T).GetHashCode()
  nameWithType: Result<T>.GetHashCode()
  nameWithType.vb: Result(Of T).GetHashCode()
- uid: Wrap.Result`1.GetHashCode*
  name: GetHashCode
  href: api/Wrap.Result-1.GetHashCode.html
  commentId: Overload:Wrap.Result`1.GetHashCode
  fullName: Wrap.Result<T>.GetHashCode
  fullName.vb: Wrap.Result(Of T).GetHashCode
  nameWithType: Result<T>.GetHashCode
  nameWithType.vb: Result(Of T).GetHashCode
- uid: Wrap.Result`1.IsFail
  name: IsFail
  href: api/Wrap.Result-1.IsFail.html#Wrap_Result_1_IsFail
  commentId: P:Wrap.Result`1.IsFail
  fullName: Wrap.Result<T>.IsFail
  fullName.vb: Wrap.Result(Of T).IsFail
  nameWithType: Result<T>.IsFail
  nameWithType.vb: Result(Of T).IsFail
- uid: Wrap.Result`1.IsFail*
  name: IsFail
  href: api/Wrap.Result-1.IsFail.html
  commentId: Overload:Wrap.Result`1.IsFail
  fullName: Wrap.Result<T>.IsFail
  fullName.vb: Wrap.Result(Of T).IsFail
  nameWithType: Result<T>.IsFail
  nameWithType.vb: Result(Of T).IsFail
- uid: Wrap.Result`1.IsOk
  name: IsOk
  href: api/Wrap.Result-1.IsOk.html#Wrap_Result_1_IsOk
  commentId: P:Wrap.Result`1.IsOk
  fullName: Wrap.Result<T>.IsOk
  fullName.vb: Wrap.Result(Of T).IsOk
  nameWithType: Result<T>.IsOk
  nameWithType.vb: Result(Of T).IsOk
- uid: Wrap.Result`1.IsOk*
  name: IsOk
  href: api/Wrap.Result-1.IsOk.html
  commentId: Overload:Wrap.Result`1.IsOk
  fullName: Wrap.Result<T>.IsOk
  fullName.vb: Wrap.Result(Of T).IsOk
  nameWithType: Result<T>.IsOk
  nameWithType.vb: Result(Of T).IsOk
- uid: Wrap.Result`1.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Wrap.Result-1.PrintMembers.html#Wrap_Result_1_PrintMembers_System_Text_StringBuilder_
  commentId: M:Wrap.Result`1.PrintMembers(System.Text.StringBuilder)
  fullName: Wrap.Result<T>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Wrap.Result(Of T).PrintMembers(System.Text.StringBuilder)
  nameWithType: Result<T>.PrintMembers(StringBuilder)
  nameWithType.vb: Result(Of T).PrintMembers(StringBuilder)
- uid: Wrap.Result`1.PrintMembers*
  name: PrintMembers
  href: api/Wrap.Result-1.PrintMembers.html
  commentId: Overload:Wrap.Result`1.PrintMembers
  fullName: Wrap.Result<T>.PrintMembers
  fullName.vb: Wrap.Result(Of T).PrintMembers
  nameWithType: Result<T>.PrintMembers
  nameWithType.vb: Result(Of T).PrintMembers
- uid: Wrap.Result`1.ToString
  name: ToString()
  href: api/Wrap.Result-1.ToString.html#Wrap_Result_1_ToString
  commentId: M:Wrap.Result`1.ToString
  fullName: Wrap.Result<T>.ToString()
  fullName.vb: Wrap.Result(Of T).ToString()
  nameWithType: Result<T>.ToString()
  nameWithType.vb: Result(Of T).ToString()
- uid: Wrap.Result`1.ToString*
  name: ToString
  href: api/Wrap.Result-1.ToString.html
  commentId: Overload:Wrap.Result`1.ToString
  fullName: Wrap.Result<T>.ToString
  fullName.vb: Wrap.Result(Of T).ToString
  nameWithType: Result<T>.ToString
  nameWithType.vb: Result(Of T).ToString
- uid: Wrap.Result`1.op_Equality(Wrap.Result{`0},Wrap.Result{`0})
  name: operator ==(Result<T>?, Result<T>?)
  href: api/Wrap.Result-1.op_Equality.html#Wrap_Result_1_op_Equality_Wrap_Result__0__Wrap_Result__0__
  commentId: M:Wrap.Result`1.op_Equality(Wrap.Result{`0},Wrap.Result{`0})
  name.vb: =(Result(Of T), Result(Of T))
  fullName: Wrap.Result<T>.operator ==(Wrap.Result<T>?, Wrap.Result<T>?)
  fullName.vb: Wrap.Result(Of T).=(Wrap.Result(Of T), Wrap.Result(Of T))
  nameWithType: Result<T>.operator ==(Result<T>?, Result<T>?)
  nameWithType.vb: Result(Of T).=(Result(Of T), Result(Of T))
- uid: Wrap.Result`1.op_Equality*
  name: operator ==
  href: api/Wrap.Result-1.op_Equality.html
  commentId: Overload:Wrap.Result`1.op_Equality
  name.vb: =
  fullName: Wrap.Result<T>.operator ==
  fullName.vb: Wrap.Result(Of T).=
  nameWithType: Result<T>.operator ==
  nameWithType.vb: Result(Of T).=
- uid: Wrap.Result`1.op_Implicit(Wrap.Fail)~Wrap.Result{`0}
  name: implicit operator Result<T>(Fail)
  href: api/Wrap.Result-1.op_Implicit.html#Wrap_Result_1_op_Implicit_Wrap_Fail__Wrap_Result__0_
  commentId: M:Wrap.Result`1.op_Implicit(Wrap.Fail)~Wrap.Result{`0}
  name.vb: CType(Fail)
  fullName: Wrap.Result<T>.implicit operator Wrap.Result<T>(Wrap.Fail)
  fullName.vb: Wrap.Result(Of T).CType(Wrap.Fail)
  nameWithType: Result<T>.implicit operator Result<T>(Fail)
  nameWithType.vb: Result(Of T).CType(Fail)
- uid: Wrap.Result`1.op_Implicit(`0)~Wrap.Result{`0}
  name: implicit operator Result<T>(T)
  href: api/Wrap.Result-1.op_Implicit.html#Wrap_Result_1_op_Implicit__0__Wrap_Result__0_
  commentId: M:Wrap.Result`1.op_Implicit(`0)~Wrap.Result{`0}
  name.vb: CType(T)
  fullName: Wrap.Result<T>.implicit operator Wrap.Result<T>(T)
  fullName.vb: Wrap.Result(Of T).CType(T)
  nameWithType: Result<T>.implicit operator Result<T>(T)
  nameWithType.vb: Result(Of T).CType(T)
- uid: Wrap.Result`1.op_Implicit*
  name: implicit operator
  href: api/Wrap.Result-1.op_Implicit.html
  commentId: Overload:Wrap.Result`1.op_Implicit
  name.vb: CType
  fullName: Wrap.Result<T>.implicit operator
  fullName.vb: Wrap.Result(Of T).CType
  nameWithType: Result<T>.implicit operator
  nameWithType.vb: Result(Of T).CType
- uid: Wrap.Result`1.op_Inequality(Wrap.Result{`0},Wrap.Result{`0})
  name: operator !=(Result<T>?, Result<T>?)
  href: api/Wrap.Result-1.op_Inequality.html#Wrap_Result_1_op_Inequality_Wrap_Result__0__Wrap_Result__0__
  commentId: M:Wrap.Result`1.op_Inequality(Wrap.Result{`0},Wrap.Result{`0})
  name.vb: <>(Result(Of T), Result(Of T))
  fullName: Wrap.Result<T>.operator !=(Wrap.Result<T>?, Wrap.Result<T>?)
  fullName.vb: Wrap.Result(Of T).<>(Wrap.Result(Of T), Wrap.Result(Of T))
  nameWithType: Result<T>.operator !=(Result<T>?, Result<T>?)
  nameWithType.vb: Result(Of T).<>(Result(Of T), Result(Of T))
- uid: Wrap.Result`1.op_Inequality*
  name: operator !=
  href: api/Wrap.Result-1.op_Inequality.html
  commentId: Overload:Wrap.Result`1.op_Inequality
  name.vb: <>
  fullName: Wrap.Result<T>.operator !=
  fullName.vb: Wrap.Result(Of T).<>
  nameWithType: Result<T>.operator !=
  nameWithType.vb: Result(Of T).<>
- uid: Wrap.Right`2
  name: Right<TLeft, TRight>
  href: api/Wrap.Right-2.html
  commentId: T:Wrap.Right`2
  name.vb: Right(Of TLeft, TRight)
  fullName: Wrap.Right<TLeft, TRight>
  fullName.vb: Wrap.Right(Of TLeft, TRight)
  nameWithType: Right<TLeft, TRight>
  nameWithType.vb: Right(Of TLeft, TRight)
- uid: Wrap.Right`2.EqualityContract
  name: EqualityContract
  href: api/Wrap.Right-2.EqualityContract.html#Wrap_Right_2_EqualityContract
  commentId: P:Wrap.Right`2.EqualityContract
  fullName: Wrap.Right<TLeft, TRight>.EqualityContract
  fullName.vb: Wrap.Right(Of TLeft, TRight).EqualityContract
  nameWithType: Right<TLeft, TRight>.EqualityContract
  nameWithType.vb: Right(Of TLeft, TRight).EqualityContract
- uid: Wrap.Right`2.EqualityContract*
  name: EqualityContract
  href: api/Wrap.Right-2.EqualityContract.html
  commentId: Overload:Wrap.Right`2.EqualityContract
  fullName: Wrap.Right<TLeft, TRight>.EqualityContract
  fullName.vb: Wrap.Right(Of TLeft, TRight).EqualityContract
  nameWithType: Right<TLeft, TRight>.EqualityContract
  nameWithType.vb: Right(Of TLeft, TRight).EqualityContract
- uid: Wrap.Right`2.Equals(System.Object)
  name: Equals(object?)
  href: api/Wrap.Right-2.Equals.html#Wrap_Right_2_Equals_System_Object_
  commentId: M:Wrap.Right`2.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.Right<TLeft, TRight>.Equals(object?)
  fullName.vb: Wrap.Right(Of TLeft, TRight).Equals(Object)
  nameWithType: Right<TLeft, TRight>.Equals(object?)
  nameWithType.vb: Right(Of TLeft, TRight).Equals(Object)
- uid: Wrap.Right`2.Equals(Wrap.Either{`0,`1})
  name: Equals(Either<TLeft, TRight>?)
  href: api/Wrap.Right-2.Equals.html#Wrap_Right_2_Equals_Wrap_Either__0__1__
  commentId: M:Wrap.Right`2.Equals(Wrap.Either{`0,`1})
  name.vb: Equals(Either(Of TLeft, TRight))
  fullName: Wrap.Right<TLeft, TRight>.Equals(Wrap.Either<TLeft, TRight>?)
  fullName.vb: Wrap.Right(Of TLeft, TRight).Equals(Wrap.Either(Of TLeft, TRight))
  nameWithType: Right<TLeft, TRight>.Equals(Either<TLeft, TRight>?)
  nameWithType.vb: Right(Of TLeft, TRight).Equals(Either(Of TLeft, TRight))
- uid: Wrap.Right`2.Equals(Wrap.Right{`0,`1})
  name: Equals(Right<TLeft, TRight>?)
  href: api/Wrap.Right-2.Equals.html#Wrap_Right_2_Equals_Wrap_Right__0__1__
  commentId: M:Wrap.Right`2.Equals(Wrap.Right{`0,`1})
  name.vb: Equals(Right(Of TLeft, TRight))
  fullName: Wrap.Right<TLeft, TRight>.Equals(Wrap.Right<TLeft, TRight>?)
  fullName.vb: Wrap.Right(Of TLeft, TRight).Equals(Wrap.Right(Of TLeft, TRight))
  nameWithType: Right<TLeft, TRight>.Equals(Right<TLeft, TRight>?)
  nameWithType.vb: Right(Of TLeft, TRight).Equals(Right(Of TLeft, TRight))
- uid: Wrap.Right`2.Equals*
  name: Equals
  href: api/Wrap.Right-2.Equals.html
  commentId: Overload:Wrap.Right`2.Equals
  fullName: Wrap.Right<TLeft, TRight>.Equals
  fullName.vb: Wrap.Right(Of TLeft, TRight).Equals
  nameWithType: Right<TLeft, TRight>.Equals
  nameWithType.vb: Right(Of TLeft, TRight).Equals
- uid: Wrap.Right`2.GetHashCode
  name: GetHashCode()
  href: api/Wrap.Right-2.GetHashCode.html#Wrap_Right_2_GetHashCode
  commentId: M:Wrap.Right`2.GetHashCode
  fullName: Wrap.Right<TLeft, TRight>.GetHashCode()
  fullName.vb: Wrap.Right(Of TLeft, TRight).GetHashCode()
  nameWithType: Right<TLeft, TRight>.GetHashCode()
  nameWithType.vb: Right(Of TLeft, TRight).GetHashCode()
- uid: Wrap.Right`2.GetHashCode*
  name: GetHashCode
  href: api/Wrap.Right-2.GetHashCode.html
  commentId: Overload:Wrap.Right`2.GetHashCode
  fullName: Wrap.Right<TLeft, TRight>.GetHashCode
  fullName.vb: Wrap.Right(Of TLeft, TRight).GetHashCode
  nameWithType: Right<TLeft, TRight>.GetHashCode
  nameWithType.vb: Right(Of TLeft, TRight).GetHashCode
- uid: Wrap.Right`2.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Wrap.Right-2.PrintMembers.html#Wrap_Right_2_PrintMembers_System_Text_StringBuilder_
  commentId: M:Wrap.Right`2.PrintMembers(System.Text.StringBuilder)
  fullName: Wrap.Right<TLeft, TRight>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Wrap.Right(Of TLeft, TRight).PrintMembers(System.Text.StringBuilder)
  nameWithType: Right<TLeft, TRight>.PrintMembers(StringBuilder)
  nameWithType.vb: Right(Of TLeft, TRight).PrintMembers(StringBuilder)
- uid: Wrap.Right`2.PrintMembers*
  name: PrintMembers
  href: api/Wrap.Right-2.PrintMembers.html
  commentId: Overload:Wrap.Right`2.PrintMembers
  fullName: Wrap.Right<TLeft, TRight>.PrintMembers
  fullName.vb: Wrap.Right(Of TLeft, TRight).PrintMembers
  nameWithType: Right<TLeft, TRight>.PrintMembers
  nameWithType.vb: Right(Of TLeft, TRight).PrintMembers
- uid: Wrap.Right`2.ToString
  name: ToString()
  href: api/Wrap.Right-2.ToString.html#Wrap_Right_2_ToString
  commentId: M:Wrap.Right`2.ToString
  fullName: Wrap.Right<TLeft, TRight>.ToString()
  fullName.vb: Wrap.Right(Of TLeft, TRight).ToString()
  nameWithType: Right<TLeft, TRight>.ToString()
  nameWithType.vb: Right(Of TLeft, TRight).ToString()
- uid: Wrap.Right`2.ToString*
  name: ToString
  href: api/Wrap.Right-2.ToString.html
  commentId: Overload:Wrap.Right`2.ToString
  fullName: Wrap.Right<TLeft, TRight>.ToString
  fullName.vb: Wrap.Right(Of TLeft, TRight).ToString
  nameWithType: Right<TLeft, TRight>.ToString
  nameWithType.vb: Right(Of TLeft, TRight).ToString
- uid: Wrap.Right`2.Value
  name: Value
  href: api/Wrap.Right-2.Value.html#Wrap_Right_2_Value
  commentId: P:Wrap.Right`2.Value
  fullName: Wrap.Right<TLeft, TRight>.Value
  fullName.vb: Wrap.Right(Of TLeft, TRight).Value
  nameWithType: Right<TLeft, TRight>.Value
  nameWithType.vb: Right(Of TLeft, TRight).Value
- uid: Wrap.Right`2.Value*
  name: Value
  href: api/Wrap.Right-2.Value.html
  commentId: Overload:Wrap.Right`2.Value
  fullName: Wrap.Right<TLeft, TRight>.Value
  fullName.vb: Wrap.Right(Of TLeft, TRight).Value
  nameWithType: Right<TLeft, TRight>.Value
  nameWithType.vb: Right(Of TLeft, TRight).Value
- uid: Wrap.Right`2.op_Equality(Wrap.Right{`0,`1},Wrap.Right{`0,`1})
  name: operator ==(Right<TLeft, TRight>?, Right<TLeft, TRight>?)
  href: api/Wrap.Right-2.op_Equality.html#Wrap_Right_2_op_Equality_Wrap_Right__0__1__Wrap_Right__0__1__
  commentId: M:Wrap.Right`2.op_Equality(Wrap.Right{`0,`1},Wrap.Right{`0,`1})
  name.vb: =(Right(Of TLeft, TRight), Right(Of TLeft, TRight))
  fullName: Wrap.Right<TLeft, TRight>.operator ==(Wrap.Right<TLeft, TRight>?, Wrap.Right<TLeft, TRight>?)
  fullName.vb: Wrap.Right(Of TLeft, TRight).=(Wrap.Right(Of TLeft, TRight), Wrap.Right(Of TLeft, TRight))
  nameWithType: Right<TLeft, TRight>.operator ==(Right<TLeft, TRight>?, Right<TLeft, TRight>?)
  nameWithType.vb: Right(Of TLeft, TRight).=(Right(Of TLeft, TRight), Right(Of TLeft, TRight))
- uid: Wrap.Right`2.op_Equality*
  name: operator ==
  href: api/Wrap.Right-2.op_Equality.html
  commentId: Overload:Wrap.Right`2.op_Equality
  name.vb: =
  fullName: Wrap.Right<TLeft, TRight>.operator ==
  fullName.vb: Wrap.Right(Of TLeft, TRight).=
  nameWithType: Right<TLeft, TRight>.operator ==
  nameWithType.vb: Right(Of TLeft, TRight).=
- uid: Wrap.Right`2.op_Inequality(Wrap.Right{`0,`1},Wrap.Right{`0,`1})
  name: operator !=(Right<TLeft, TRight>?, Right<TLeft, TRight>?)
  href: api/Wrap.Right-2.op_Inequality.html#Wrap_Right_2_op_Inequality_Wrap_Right__0__1__Wrap_Right__0__1__
  commentId: M:Wrap.Right`2.op_Inequality(Wrap.Right{`0,`1},Wrap.Right{`0,`1})
  name.vb: <>(Right(Of TLeft, TRight), Right(Of TLeft, TRight))
  fullName: Wrap.Right<TLeft, TRight>.operator !=(Wrap.Right<TLeft, TRight>?, Wrap.Right<TLeft, TRight>?)
  fullName.vb: Wrap.Right(Of TLeft, TRight).<>(Wrap.Right(Of TLeft, TRight), Wrap.Right(Of TLeft, TRight))
  nameWithType: Right<TLeft, TRight>.operator !=(Right<TLeft, TRight>?, Right<TLeft, TRight>?)
  nameWithType.vb: Right(Of TLeft, TRight).<>(Right(Of TLeft, TRight), Right(Of TLeft, TRight))
- uid: Wrap.Right`2.op_Inequality*
  name: operator !=
  href: api/Wrap.Right-2.op_Inequality.html
  commentId: Overload:Wrap.Right`2.op_Inequality
  name.vb: <>
  fullName: Wrap.Right<TLeft, TRight>.operator !=
  fullName.vb: Wrap.Right(Of TLeft, TRight).<>
  nameWithType: Right<TLeft, TRight>.operator !=
  nameWithType.vb: Right(Of TLeft, TRight).<>
- uid: Wrap.Some`1
  name: Some<T>
  href: api/Wrap.Some-1.html
  commentId: T:Wrap.Some`1
  name.vb: Some(Of T)
  fullName: Wrap.Some<T>
  fullName.vb: Wrap.Some(Of T)
  nameWithType: Some<T>
  nameWithType.vb: Some(Of T)
- uid: Wrap.Some`1.EqualityContract
  name: EqualityContract
  href: api/Wrap.Some-1.EqualityContract.html#Wrap_Some_1_EqualityContract
  commentId: P:Wrap.Some`1.EqualityContract
  fullName: Wrap.Some<T>.EqualityContract
  fullName.vb: Wrap.Some(Of T).EqualityContract
  nameWithType: Some<T>.EqualityContract
  nameWithType.vb: Some(Of T).EqualityContract
- uid: Wrap.Some`1.EqualityContract*
  name: EqualityContract
  href: api/Wrap.Some-1.EqualityContract.html
  commentId: Overload:Wrap.Some`1.EqualityContract
  fullName: Wrap.Some<T>.EqualityContract
  fullName.vb: Wrap.Some(Of T).EqualityContract
  nameWithType: Some<T>.EqualityContract
  nameWithType.vb: Some(Of T).EqualityContract
- uid: Wrap.Some`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Wrap.Some-1.Equals.html#Wrap_Some_1_Equals_System_Object_
  commentId: M:Wrap.Some`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.Some<T>.Equals(object?)
  fullName.vb: Wrap.Some(Of T).Equals(Object)
  nameWithType: Some<T>.Equals(object?)
  nameWithType.vb: Some(Of T).Equals(Object)
- uid: Wrap.Some`1.Equals(Wrap.Maybe{`0})
  name: Equals(Maybe<T>?)
  href: api/Wrap.Some-1.Equals.html#Wrap_Some_1_Equals_Wrap_Maybe__0__
  commentId: M:Wrap.Some`1.Equals(Wrap.Maybe{`0})
  name.vb: Equals(Maybe(Of T))
  fullName: Wrap.Some<T>.Equals(Wrap.Maybe<T>?)
  fullName.vb: Wrap.Some(Of T).Equals(Wrap.Maybe(Of T))
  nameWithType: Some<T>.Equals(Maybe<T>?)
  nameWithType.vb: Some(Of T).Equals(Maybe(Of T))
- uid: Wrap.Some`1.Equals(Wrap.Some{`0})
  name: Equals(Some<T>?)
  href: api/Wrap.Some-1.Equals.html#Wrap_Some_1_Equals_Wrap_Some__0__
  commentId: M:Wrap.Some`1.Equals(Wrap.Some{`0})
  name.vb: Equals(Some(Of T))
  fullName: Wrap.Some<T>.Equals(Wrap.Some<T>?)
  fullName.vb: Wrap.Some(Of T).Equals(Wrap.Some(Of T))
  nameWithType: Some<T>.Equals(Some<T>?)
  nameWithType.vb: Some(Of T).Equals(Some(Of T))
- uid: Wrap.Some`1.Equals*
  name: Equals
  href: api/Wrap.Some-1.Equals.html
  commentId: Overload:Wrap.Some`1.Equals
  fullName: Wrap.Some<T>.Equals
  fullName.vb: Wrap.Some(Of T).Equals
  nameWithType: Some<T>.Equals
  nameWithType.vb: Some(Of T).Equals
- uid: Wrap.Some`1.GetHashCode
  name: GetHashCode()
  href: api/Wrap.Some-1.GetHashCode.html#Wrap_Some_1_GetHashCode
  commentId: M:Wrap.Some`1.GetHashCode
  fullName: Wrap.Some<T>.GetHashCode()
  fullName.vb: Wrap.Some(Of T).GetHashCode()
  nameWithType: Some<T>.GetHashCode()
  nameWithType.vb: Some(Of T).GetHashCode()
- uid: Wrap.Some`1.GetHashCode*
  name: GetHashCode
  href: api/Wrap.Some-1.GetHashCode.html
  commentId: Overload:Wrap.Some`1.GetHashCode
  fullName: Wrap.Some<T>.GetHashCode
  fullName.vb: Wrap.Some(Of T).GetHashCode
  nameWithType: Some<T>.GetHashCode
  nameWithType.vb: Some(Of T).GetHashCode
- uid: Wrap.Some`1.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Wrap.Some-1.PrintMembers.html#Wrap_Some_1_PrintMembers_System_Text_StringBuilder_
  commentId: M:Wrap.Some`1.PrintMembers(System.Text.StringBuilder)
  fullName: Wrap.Some<T>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Wrap.Some(Of T).PrintMembers(System.Text.StringBuilder)
  nameWithType: Some<T>.PrintMembers(StringBuilder)
  nameWithType.vb: Some(Of T).PrintMembers(StringBuilder)
- uid: Wrap.Some`1.PrintMembers*
  name: PrintMembers
  href: api/Wrap.Some-1.PrintMembers.html
  commentId: Overload:Wrap.Some`1.PrintMembers
  fullName: Wrap.Some<T>.PrintMembers
  fullName.vb: Wrap.Some(Of T).PrintMembers
  nameWithType: Some<T>.PrintMembers
  nameWithType.vb: Some(Of T).PrintMembers
- uid: Wrap.Some`1.Value
  name: Value
  href: api/Wrap.Some-1.Value.html#Wrap_Some_1_Value
  commentId: P:Wrap.Some`1.Value
  fullName: Wrap.Some<T>.Value
  fullName.vb: Wrap.Some(Of T).Value
  nameWithType: Some<T>.Value
  nameWithType.vb: Some(Of T).Value
- uid: Wrap.Some`1.Value*
  name: Value
  href: api/Wrap.Some-1.Value.html
  commentId: Overload:Wrap.Some`1.Value
  fullName: Wrap.Some<T>.Value
  fullName.vb: Wrap.Some(Of T).Value
  nameWithType: Some<T>.Value
  nameWithType.vb: Some(Of T).Value
- uid: Wrap.Some`1.op_Equality(Wrap.Some{`0},Wrap.Some{`0})
  name: operator ==(Some<T>?, Some<T>?)
  href: api/Wrap.Some-1.op_Equality.html#Wrap_Some_1_op_Equality_Wrap_Some__0__Wrap_Some__0__
  commentId: M:Wrap.Some`1.op_Equality(Wrap.Some{`0},Wrap.Some{`0})
  name.vb: =(Some(Of T), Some(Of T))
  fullName: Wrap.Some<T>.operator ==(Wrap.Some<T>?, Wrap.Some<T>?)
  fullName.vb: Wrap.Some(Of T).=(Wrap.Some(Of T), Wrap.Some(Of T))
  nameWithType: Some<T>.operator ==(Some<T>?, Some<T>?)
  nameWithType.vb: Some(Of T).=(Some(Of T), Some(Of T))
- uid: Wrap.Some`1.op_Equality*
  name: operator ==
  href: api/Wrap.Some-1.op_Equality.html
  commentId: Overload:Wrap.Some`1.op_Equality
  name.vb: =
  fullName: Wrap.Some<T>.operator ==
  fullName.vb: Wrap.Some(Of T).=
  nameWithType: Some<T>.operator ==
  nameWithType.vb: Some(Of T).=
- uid: Wrap.Some`1.op_Inequality(Wrap.Some{`0},Wrap.Some{`0})
  name: operator !=(Some<T>?, Some<T>?)
  href: api/Wrap.Some-1.op_Inequality.html#Wrap_Some_1_op_Inequality_Wrap_Some__0__Wrap_Some__0__
  commentId: M:Wrap.Some`1.op_Inequality(Wrap.Some{`0},Wrap.Some{`0})
  name.vb: <>(Some(Of T), Some(Of T))
  fullName: Wrap.Some<T>.operator !=(Wrap.Some<T>?, Wrap.Some<T>?)
  fullName.vb: Wrap.Some(Of T).<>(Wrap.Some(Of T), Wrap.Some(Of T))
  nameWithType: Some<T>.operator !=(Some<T>?, Some<T>?)
  nameWithType.vb: Some(Of T).<>(Some(Of T), Some(Of T))
- uid: Wrap.Some`1.op_Inequality*
  name: operator !=
  href: api/Wrap.Some-1.op_Inequality.html
  commentId: Overload:Wrap.Some`1.op_Inequality
  name.vb: <>
  fullName: Wrap.Some<T>.operator !=
  fullName.vb: Wrap.Some(Of T).<>
  nameWithType: Some<T>.operator !=
  nameWithType.vb: Some(Of T).<>
- uid: Wrap.UIntExtensions
  name: UIntExtensions
  href: api/Wrap.UIntExtensions.html
  commentId: T:Wrap.UIntExtensions
  fullName: Wrap.UIntExtensions
  nameWithType: UIntExtensions
- uid: Wrap.UIntExtensions.WrapId*
  name: WrapId
  href: api/Wrap.UIntExtensions.WrapId.html
  commentId: Overload:Wrap.UIntExtensions.WrapId
  fullName: Wrap.UIntExtensions.WrapId
  nameWithType: UIntExtensions.WrapId
- uid: Wrap.UIntExtensions.WrapId``1(System.UInt32)
  name: WrapId<TId>(uint)
  href: api/Wrap.UIntExtensions.WrapId.html#Wrap_UIntExtensions_WrapId__1_System_UInt32_
  commentId: M:Wrap.UIntExtensions.WrapId``1(System.UInt32)
  name.vb: WrapId(Of TId)(UInteger)
  fullName: Wrap.UIntExtensions.WrapId<TId>(uint)
  fullName.vb: Wrap.UIntExtensions.WrapId(Of TId)(UInteger)
  nameWithType: UIntExtensions.WrapId<TId>(uint)
  nameWithType.vb: UIntExtensions.WrapId(Of TId)(UInteger)
- uid: Wrap.UIntId`1
  name: UIntId<TId>
  href: api/Wrap.UIntId-1.html
  commentId: T:Wrap.UIntId`1
  name.vb: UIntId(Of TId)
  fullName: Wrap.UIntId<TId>
  fullName.vb: Wrap.UIntId(Of TId)
  nameWithType: UIntId<TId>
  nameWithType.vb: UIntId(Of TId)
- uid: Wrap.UIntId`1.#ctor
  name: UIntId()
  href: api/Wrap.UIntId-1.-ctor.html#Wrap_UIntId_1__ctor
  commentId: M:Wrap.UIntId`1.#ctor
  name.vb: New()
  fullName: Wrap.UIntId<TId>.UIntId()
  fullName.vb: Wrap.UIntId(Of TId).New()
  nameWithType: UIntId<TId>.UIntId()
  nameWithType.vb: UIntId(Of TId).New()
- uid: Wrap.UIntId`1.#ctor(Wrap.UIntId{`0})
  name: UIntId(UIntId<TId>)
  href: api/Wrap.UIntId-1.-ctor.html#Wrap_UIntId_1__ctor_Wrap_UIntId__0__
  commentId: M:Wrap.UIntId`1.#ctor(Wrap.UIntId{`0})
  name.vb: New(UIntId(Of TId))
  fullName: Wrap.UIntId<TId>.UIntId(Wrap.UIntId<TId>)
  fullName.vb: Wrap.UIntId(Of TId).New(Wrap.UIntId(Of TId))
  nameWithType: UIntId<TId>.UIntId(UIntId<TId>)
  nameWithType.vb: UIntId(Of TId).New(UIntId(Of TId))
- uid: Wrap.UIntId`1.#ctor*
  name: UIntId
  href: api/Wrap.UIntId-1.-ctor.html
  commentId: Overload:Wrap.UIntId`1.#ctor
  name.vb: New
  fullName: Wrap.UIntId<TId>.UIntId
  fullName.vb: Wrap.UIntId(Of TId).New
  nameWithType: UIntId<TId>.UIntId
  nameWithType.vb: UIntId(Of TId).New
- uid: Wrap.UIntId`1.EqualityContract
  name: EqualityContract
  href: api/Wrap.UIntId-1.EqualityContract.html#Wrap_UIntId_1_EqualityContract
  commentId: P:Wrap.UIntId`1.EqualityContract
  fullName: Wrap.UIntId<TId>.EqualityContract
  fullName.vb: Wrap.UIntId(Of TId).EqualityContract
  nameWithType: UIntId<TId>.EqualityContract
  nameWithType.vb: UIntId(Of TId).EqualityContract
- uid: Wrap.UIntId`1.EqualityContract*
  name: EqualityContract
  href: api/Wrap.UIntId-1.EqualityContract.html
  commentId: Overload:Wrap.UIntId`1.EqualityContract
  fullName: Wrap.UIntId<TId>.EqualityContract
  fullName.vb: Wrap.UIntId(Of TId).EqualityContract
  nameWithType: UIntId<TId>.EqualityContract
  nameWithType.vb: UIntId(Of TId).EqualityContract
- uid: Wrap.UIntId`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Wrap.UIntId-1.Equals.html#Wrap_UIntId_1_Equals_System_Object_
  commentId: M:Wrap.UIntId`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.UIntId<TId>.Equals(object?)
  fullName.vb: Wrap.UIntId(Of TId).Equals(Object)
  nameWithType: UIntId<TId>.Equals(object?)
  nameWithType.vb: UIntId(Of TId).Equals(Object)
- uid: Wrap.UIntId`1.Equals(Wrap.Id{`0,System.UInt32})
  name: Equals(Id<TId, uint>?)
  href: api/Wrap.UIntId-1.Equals.html#Wrap_UIntId_1_Equals_Wrap_Id__0_System_UInt32__
  commentId: M:Wrap.UIntId`1.Equals(Wrap.Id{`0,System.UInt32})
  name.vb: Equals(Id(Of TId, UInteger))
  fullName: Wrap.UIntId<TId>.Equals(Wrap.Id<TId, uint>?)
  fullName.vb: Wrap.UIntId(Of TId).Equals(Wrap.Id(Of TId, UInteger))
  nameWithType: UIntId<TId>.Equals(Id<TId, uint>?)
  nameWithType.vb: UIntId(Of TId).Equals(Id(Of TId, UInteger))
- uid: Wrap.UIntId`1.Equals(Wrap.UIntId{`0})
  name: Equals(UIntId<TId>?)
  href: api/Wrap.UIntId-1.Equals.html#Wrap_UIntId_1_Equals_Wrap_UIntId__0__
  commentId: M:Wrap.UIntId`1.Equals(Wrap.UIntId{`0})
  name.vb: Equals(UIntId(Of TId))
  fullName: Wrap.UIntId<TId>.Equals(Wrap.UIntId<TId>?)
  fullName.vb: Wrap.UIntId(Of TId).Equals(Wrap.UIntId(Of TId))
  nameWithType: UIntId<TId>.Equals(UIntId<TId>?)
  nameWithType.vb: UIntId(Of TId).Equals(UIntId(Of TId))
- uid: Wrap.UIntId`1.Equals*
  name: Equals
  href: api/Wrap.UIntId-1.Equals.html
  commentId: Overload:Wrap.UIntId`1.Equals
  fullName: Wrap.UIntId<TId>.Equals
  fullName.vb: Wrap.UIntId(Of TId).Equals
  nameWithType: UIntId<TId>.Equals
  nameWithType.vb: UIntId(Of TId).Equals
- uid: Wrap.UIntId`1.GetHashCode
  name: GetHashCode()
  href: api/Wrap.UIntId-1.GetHashCode.html#Wrap_UIntId_1_GetHashCode
  commentId: M:Wrap.UIntId`1.GetHashCode
  fullName: Wrap.UIntId<TId>.GetHashCode()
  fullName.vb: Wrap.UIntId(Of TId).GetHashCode()
  nameWithType: UIntId<TId>.GetHashCode()
  nameWithType.vb: UIntId(Of TId).GetHashCode()
- uid: Wrap.UIntId`1.GetHashCode*
  name: GetHashCode
  href: api/Wrap.UIntId-1.GetHashCode.html
  commentId: Overload:Wrap.UIntId`1.GetHashCode
  fullName: Wrap.UIntId<TId>.GetHashCode
  fullName.vb: Wrap.UIntId(Of TId).GetHashCode
  nameWithType: UIntId<TId>.GetHashCode
  nameWithType.vb: UIntId(Of TId).GetHashCode
- uid: Wrap.UIntId`1.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Wrap.UIntId-1.PrintMembers.html#Wrap_UIntId_1_PrintMembers_System_Text_StringBuilder_
  commentId: M:Wrap.UIntId`1.PrintMembers(System.Text.StringBuilder)
  fullName: Wrap.UIntId<TId>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Wrap.UIntId(Of TId).PrintMembers(System.Text.StringBuilder)
  nameWithType: UIntId<TId>.PrintMembers(StringBuilder)
  nameWithType.vb: UIntId(Of TId).PrintMembers(StringBuilder)
- uid: Wrap.UIntId`1.PrintMembers*
  name: PrintMembers
  href: api/Wrap.UIntId-1.PrintMembers.html
  commentId: Overload:Wrap.UIntId`1.PrintMembers
  fullName: Wrap.UIntId<TId>.PrintMembers
  fullName.vb: Wrap.UIntId(Of TId).PrintMembers
  nameWithType: UIntId<TId>.PrintMembers
  nameWithType.vb: UIntId(Of TId).PrintMembers
- uid: Wrap.UIntId`1.ToString
  name: ToString()
  href: api/Wrap.UIntId-1.ToString.html#Wrap_UIntId_1_ToString
  commentId: M:Wrap.UIntId`1.ToString
  fullName: Wrap.UIntId<TId>.ToString()
  fullName.vb: Wrap.UIntId(Of TId).ToString()
  nameWithType: UIntId<TId>.ToString()
  nameWithType.vb: UIntId(Of TId).ToString()
- uid: Wrap.UIntId`1.ToString*
  name: ToString
  href: api/Wrap.UIntId-1.ToString.html
  commentId: Overload:Wrap.UIntId`1.ToString
  fullName: Wrap.UIntId<TId>.ToString
  fullName.vb: Wrap.UIntId(Of TId).ToString
  nameWithType: UIntId<TId>.ToString
  nameWithType.vb: UIntId(Of TId).ToString
- uid: Wrap.UIntId`1.op_Equality(Wrap.UIntId{`0},Wrap.UIntId{`0})
  name: operator ==(UIntId<TId>?, UIntId<TId>?)
  href: api/Wrap.UIntId-1.op_Equality.html#Wrap_UIntId_1_op_Equality_Wrap_UIntId__0__Wrap_UIntId__0__
  commentId: M:Wrap.UIntId`1.op_Equality(Wrap.UIntId{`0},Wrap.UIntId{`0})
  name.vb: =(UIntId(Of TId), UIntId(Of TId))
  fullName: Wrap.UIntId<TId>.operator ==(Wrap.UIntId<TId>?, Wrap.UIntId<TId>?)
  fullName.vb: Wrap.UIntId(Of TId).=(Wrap.UIntId(Of TId), Wrap.UIntId(Of TId))
  nameWithType: UIntId<TId>.operator ==(UIntId<TId>?, UIntId<TId>?)
  nameWithType.vb: UIntId(Of TId).=(UIntId(Of TId), UIntId(Of TId))
- uid: Wrap.UIntId`1.op_Equality*
  name: operator ==
  href: api/Wrap.UIntId-1.op_Equality.html
  commentId: Overload:Wrap.UIntId`1.op_Equality
  name.vb: =
  fullName: Wrap.UIntId<TId>.operator ==
  fullName.vb: Wrap.UIntId(Of TId).=
  nameWithType: UIntId<TId>.operator ==
  nameWithType.vb: UIntId(Of TId).=
- uid: Wrap.UIntId`1.op_Inequality(Wrap.UIntId{`0},Wrap.UIntId{`0})
  name: operator !=(UIntId<TId>?, UIntId<TId>?)
  href: api/Wrap.UIntId-1.op_Inequality.html#Wrap_UIntId_1_op_Inequality_Wrap_UIntId__0__Wrap_UIntId__0__
  commentId: M:Wrap.UIntId`1.op_Inequality(Wrap.UIntId{`0},Wrap.UIntId{`0})
  name.vb: <>(UIntId(Of TId), UIntId(Of TId))
  fullName: Wrap.UIntId<TId>.operator !=(Wrap.UIntId<TId>?, Wrap.UIntId<TId>?)
  fullName.vb: Wrap.UIntId(Of TId).<>(Wrap.UIntId(Of TId), Wrap.UIntId(Of TId))
  nameWithType: UIntId<TId>.operator !=(UIntId<TId>?, UIntId<TId>?)
  nameWithType.vb: UIntId(Of TId).<>(UIntId(Of TId), UIntId(Of TId))
- uid: Wrap.UIntId`1.op_Inequality*
  name: operator !=
  href: api/Wrap.UIntId-1.op_Inequality.html
  commentId: Overload:Wrap.UIntId`1.op_Inequality
  name.vb: <>
  fullName: Wrap.UIntId<TId>.operator !=
  fullName.vb: Wrap.UIntId(Of TId).<>
  nameWithType: UIntId<TId>.operator !=
  nameWithType.vb: UIntId(Of TId).<>
- uid: Wrap.ULongExtensions
  name: ULongExtensions
  href: api/Wrap.ULongExtensions.html
  commentId: T:Wrap.ULongExtensions
  fullName: Wrap.ULongExtensions
  nameWithType: ULongExtensions
- uid: Wrap.ULongExtensions.WrapId*
  name: WrapId
  href: api/Wrap.ULongExtensions.WrapId.html
  commentId: Overload:Wrap.ULongExtensions.WrapId
  fullName: Wrap.ULongExtensions.WrapId
  nameWithType: ULongExtensions.WrapId
- uid: Wrap.ULongExtensions.WrapId``1(System.UInt64)
  name: WrapId<TId>(ulong)
  href: api/Wrap.ULongExtensions.WrapId.html#Wrap_ULongExtensions_WrapId__1_System_UInt64_
  commentId: M:Wrap.ULongExtensions.WrapId``1(System.UInt64)
  name.vb: WrapId(Of TId)(ULong)
  fullName: Wrap.ULongExtensions.WrapId<TId>(ulong)
  fullName.vb: Wrap.ULongExtensions.WrapId(Of TId)(ULong)
  nameWithType: ULongExtensions.WrapId<TId>(ulong)
  nameWithType.vb: ULongExtensions.WrapId(Of TId)(ULong)
- uid: Wrap.ULongId`1
  name: ULongId<TId>
  href: api/Wrap.ULongId-1.html
  commentId: T:Wrap.ULongId`1
  name.vb: ULongId(Of TId)
  fullName: Wrap.ULongId<TId>
  fullName.vb: Wrap.ULongId(Of TId)
  nameWithType: ULongId<TId>
  nameWithType.vb: ULongId(Of TId)
- uid: Wrap.ULongId`1.#ctor
  name: ULongId()
  href: api/Wrap.ULongId-1.-ctor.html#Wrap_ULongId_1__ctor
  commentId: M:Wrap.ULongId`1.#ctor
  name.vb: New()
  fullName: Wrap.ULongId<TId>.ULongId()
  fullName.vb: Wrap.ULongId(Of TId).New()
  nameWithType: ULongId<TId>.ULongId()
  nameWithType.vb: ULongId(Of TId).New()
- uid: Wrap.ULongId`1.#ctor(Wrap.ULongId{`0})
  name: ULongId(ULongId<TId>)
  href: api/Wrap.ULongId-1.-ctor.html#Wrap_ULongId_1__ctor_Wrap_ULongId__0__
  commentId: M:Wrap.ULongId`1.#ctor(Wrap.ULongId{`0})
  name.vb: New(ULongId(Of TId))
  fullName: Wrap.ULongId<TId>.ULongId(Wrap.ULongId<TId>)
  fullName.vb: Wrap.ULongId(Of TId).New(Wrap.ULongId(Of TId))
  nameWithType: ULongId<TId>.ULongId(ULongId<TId>)
  nameWithType.vb: ULongId(Of TId).New(ULongId(Of TId))
- uid: Wrap.ULongId`1.#ctor*
  name: ULongId
  href: api/Wrap.ULongId-1.-ctor.html
  commentId: Overload:Wrap.ULongId`1.#ctor
  name.vb: New
  fullName: Wrap.ULongId<TId>.ULongId
  fullName.vb: Wrap.ULongId(Of TId).New
  nameWithType: ULongId<TId>.ULongId
  nameWithType.vb: ULongId(Of TId).New
- uid: Wrap.ULongId`1.EqualityContract
  name: EqualityContract
  href: api/Wrap.ULongId-1.EqualityContract.html#Wrap_ULongId_1_EqualityContract
  commentId: P:Wrap.ULongId`1.EqualityContract
  fullName: Wrap.ULongId<TId>.EqualityContract
  fullName.vb: Wrap.ULongId(Of TId).EqualityContract
  nameWithType: ULongId<TId>.EqualityContract
  nameWithType.vb: ULongId(Of TId).EqualityContract
- uid: Wrap.ULongId`1.EqualityContract*
  name: EqualityContract
  href: api/Wrap.ULongId-1.EqualityContract.html
  commentId: Overload:Wrap.ULongId`1.EqualityContract
  fullName: Wrap.ULongId<TId>.EqualityContract
  fullName.vb: Wrap.ULongId(Of TId).EqualityContract
  nameWithType: ULongId<TId>.EqualityContract
  nameWithType.vb: ULongId(Of TId).EqualityContract
- uid: Wrap.ULongId`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Wrap.ULongId-1.Equals.html#Wrap_ULongId_1_Equals_System_Object_
  commentId: M:Wrap.ULongId`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.ULongId<TId>.Equals(object?)
  fullName.vb: Wrap.ULongId(Of TId).Equals(Object)
  nameWithType: ULongId<TId>.Equals(object?)
  nameWithType.vb: ULongId(Of TId).Equals(Object)
- uid: Wrap.ULongId`1.Equals(Wrap.Id{`0,System.UInt64})
  name: Equals(Id<TId, ulong>?)
  href: api/Wrap.ULongId-1.Equals.html#Wrap_ULongId_1_Equals_Wrap_Id__0_System_UInt64__
  commentId: M:Wrap.ULongId`1.Equals(Wrap.Id{`0,System.UInt64})
  name.vb: Equals(Id(Of TId, ULong))
  fullName: Wrap.ULongId<TId>.Equals(Wrap.Id<TId, ulong>?)
  fullName.vb: Wrap.ULongId(Of TId).Equals(Wrap.Id(Of TId, ULong))
  nameWithType: ULongId<TId>.Equals(Id<TId, ulong>?)
  nameWithType.vb: ULongId(Of TId).Equals(Id(Of TId, ULong))
- uid: Wrap.ULongId`1.Equals(Wrap.ULongId{`0})
  name: Equals(ULongId<TId>?)
  href: api/Wrap.ULongId-1.Equals.html#Wrap_ULongId_1_Equals_Wrap_ULongId__0__
  commentId: M:Wrap.ULongId`1.Equals(Wrap.ULongId{`0})
  name.vb: Equals(ULongId(Of TId))
  fullName: Wrap.ULongId<TId>.Equals(Wrap.ULongId<TId>?)
  fullName.vb: Wrap.ULongId(Of TId).Equals(Wrap.ULongId(Of TId))
  nameWithType: ULongId<TId>.Equals(ULongId<TId>?)
  nameWithType.vb: ULongId(Of TId).Equals(ULongId(Of TId))
- uid: Wrap.ULongId`1.Equals*
  name: Equals
  href: api/Wrap.ULongId-1.Equals.html
  commentId: Overload:Wrap.ULongId`1.Equals
  fullName: Wrap.ULongId<TId>.Equals
  fullName.vb: Wrap.ULongId(Of TId).Equals
  nameWithType: ULongId<TId>.Equals
  nameWithType.vb: ULongId(Of TId).Equals
- uid: Wrap.ULongId`1.GetHashCode
  name: GetHashCode()
  href: api/Wrap.ULongId-1.GetHashCode.html#Wrap_ULongId_1_GetHashCode
  commentId: M:Wrap.ULongId`1.GetHashCode
  fullName: Wrap.ULongId<TId>.GetHashCode()
  fullName.vb: Wrap.ULongId(Of TId).GetHashCode()
  nameWithType: ULongId<TId>.GetHashCode()
  nameWithType.vb: ULongId(Of TId).GetHashCode()
- uid: Wrap.ULongId`1.GetHashCode*
  name: GetHashCode
  href: api/Wrap.ULongId-1.GetHashCode.html
  commentId: Overload:Wrap.ULongId`1.GetHashCode
  fullName: Wrap.ULongId<TId>.GetHashCode
  fullName.vb: Wrap.ULongId(Of TId).GetHashCode
  nameWithType: ULongId<TId>.GetHashCode
  nameWithType.vb: ULongId(Of TId).GetHashCode
- uid: Wrap.ULongId`1.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Wrap.ULongId-1.PrintMembers.html#Wrap_ULongId_1_PrintMembers_System_Text_StringBuilder_
  commentId: M:Wrap.ULongId`1.PrintMembers(System.Text.StringBuilder)
  fullName: Wrap.ULongId<TId>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Wrap.ULongId(Of TId).PrintMembers(System.Text.StringBuilder)
  nameWithType: ULongId<TId>.PrintMembers(StringBuilder)
  nameWithType.vb: ULongId(Of TId).PrintMembers(StringBuilder)
- uid: Wrap.ULongId`1.PrintMembers*
  name: PrintMembers
  href: api/Wrap.ULongId-1.PrintMembers.html
  commentId: Overload:Wrap.ULongId`1.PrintMembers
  fullName: Wrap.ULongId<TId>.PrintMembers
  fullName.vb: Wrap.ULongId(Of TId).PrintMembers
  nameWithType: ULongId<TId>.PrintMembers
  nameWithType.vb: ULongId(Of TId).PrintMembers
- uid: Wrap.ULongId`1.ToString
  name: ToString()
  href: api/Wrap.ULongId-1.ToString.html#Wrap_ULongId_1_ToString
  commentId: M:Wrap.ULongId`1.ToString
  fullName: Wrap.ULongId<TId>.ToString()
  fullName.vb: Wrap.ULongId(Of TId).ToString()
  nameWithType: ULongId<TId>.ToString()
  nameWithType.vb: ULongId(Of TId).ToString()
- uid: Wrap.ULongId`1.ToString*
  name: ToString
  href: api/Wrap.ULongId-1.ToString.html
  commentId: Overload:Wrap.ULongId`1.ToString
  fullName: Wrap.ULongId<TId>.ToString
  fullName.vb: Wrap.ULongId(Of TId).ToString
  nameWithType: ULongId<TId>.ToString
  nameWithType.vb: ULongId(Of TId).ToString
- uid: Wrap.ULongId`1.op_Equality(Wrap.ULongId{`0},Wrap.ULongId{`0})
  name: operator ==(ULongId<TId>?, ULongId<TId>?)
  href: api/Wrap.ULongId-1.op_Equality.html#Wrap_ULongId_1_op_Equality_Wrap_ULongId__0__Wrap_ULongId__0__
  commentId: M:Wrap.ULongId`1.op_Equality(Wrap.ULongId{`0},Wrap.ULongId{`0})
  name.vb: =(ULongId(Of TId), ULongId(Of TId))
  fullName: Wrap.ULongId<TId>.operator ==(Wrap.ULongId<TId>?, Wrap.ULongId<TId>?)
  fullName.vb: Wrap.ULongId(Of TId).=(Wrap.ULongId(Of TId), Wrap.ULongId(Of TId))
  nameWithType: ULongId<TId>.operator ==(ULongId<TId>?, ULongId<TId>?)
  nameWithType.vb: ULongId(Of TId).=(ULongId(Of TId), ULongId(Of TId))
- uid: Wrap.ULongId`1.op_Equality*
  name: operator ==
  href: api/Wrap.ULongId-1.op_Equality.html
  commentId: Overload:Wrap.ULongId`1.op_Equality
  name.vb: =
  fullName: Wrap.ULongId<TId>.operator ==
  fullName.vb: Wrap.ULongId(Of TId).=
  nameWithType: ULongId<TId>.operator ==
  nameWithType.vb: ULongId(Of TId).=
- uid: Wrap.ULongId`1.op_Inequality(Wrap.ULongId{`0},Wrap.ULongId{`0})
  name: operator !=(ULongId<TId>?, ULongId<TId>?)
  href: api/Wrap.ULongId-1.op_Inequality.html#Wrap_ULongId_1_op_Inequality_Wrap_ULongId__0__Wrap_ULongId__0__
  commentId: M:Wrap.ULongId`1.op_Inequality(Wrap.ULongId{`0},Wrap.ULongId{`0})
  name.vb: <>(ULongId(Of TId), ULongId(Of TId))
  fullName: Wrap.ULongId<TId>.operator !=(Wrap.ULongId<TId>?, Wrap.ULongId<TId>?)
  fullName.vb: Wrap.ULongId(Of TId).<>(Wrap.ULongId(Of TId), Wrap.ULongId(Of TId))
  nameWithType: ULongId<TId>.operator !=(ULongId<TId>?, ULongId<TId>?)
  nameWithType.vb: ULongId(Of TId).<>(ULongId(Of TId), ULongId(Of TId))
- uid: Wrap.ULongId`1.op_Inequality*
  name: operator !=
  href: api/Wrap.ULongId-1.op_Inequality.html
  commentId: Overload:Wrap.ULongId`1.op_Inequality
  name.vb: <>
  fullName: Wrap.ULongId<TId>.operator !=
  fullName.vb: Wrap.ULongId(Of TId).<>
  nameWithType: ULongId<TId>.operator !=
  nameWithType.vb: ULongId(Of TId).<>
- uid: Wrap.Union`2
  name: Union<TUnion, TValue>
  href: api/Wrap.Union-2.html
  commentId: T:Wrap.Union`2
  name.vb: Union(Of TUnion, TValue)
  fullName: Wrap.Union<TUnion, TValue>
  fullName.vb: Wrap.Union(Of TUnion, TValue)
  nameWithType: Union<TUnion, TValue>
  nameWithType.vb: Union(Of TUnion, TValue)
- uid: Wrap.Union`2.#ctor
  name: Union()
  href: api/Wrap.Union-2.-ctor.html#Wrap_Union_2__ctor
  commentId: M:Wrap.Union`2.#ctor
  name.vb: New()
  fullName: Wrap.Union<TUnion, TValue>.Union()
  fullName.vb: Wrap.Union(Of TUnion, TValue).New()
  nameWithType: Union<TUnion, TValue>.Union()
  nameWithType.vb: Union(Of TUnion, TValue).New()
- uid: Wrap.Union`2.#ctor(Wrap.Union{`0,`1})
  name: Union(Union<TUnion, TValue>)
  href: api/Wrap.Union-2.-ctor.html#Wrap_Union_2__ctor_Wrap_Union__0__1__
  commentId: M:Wrap.Union`2.#ctor(Wrap.Union{`0,`1})
  name.vb: New(Union(Of TUnion, TValue))
  fullName: Wrap.Union<TUnion, TValue>.Union(Wrap.Union<TUnion, TValue>)
  fullName.vb: Wrap.Union(Of TUnion, TValue).New(Wrap.Union(Of TUnion, TValue))
  nameWithType: Union<TUnion, TValue>.Union(Union<TUnion, TValue>)
  nameWithType.vb: Union(Of TUnion, TValue).New(Union(Of TUnion, TValue))
- uid: Wrap.Union`2.#ctor(`1)
  name: Union(TValue)
  href: api/Wrap.Union-2.-ctor.html#Wrap_Union_2__ctor__1_
  commentId: M:Wrap.Union`2.#ctor(`1)
  name.vb: New(TValue)
  fullName: Wrap.Union<TUnion, TValue>.Union(TValue)
  fullName.vb: Wrap.Union(Of TUnion, TValue).New(TValue)
  nameWithType: Union<TUnion, TValue>.Union(TValue)
  nameWithType.vb: Union(Of TUnion, TValue).New(TValue)
- uid: Wrap.Union`2.#ctor*
  name: Union
  href: api/Wrap.Union-2.-ctor.html
  commentId: Overload:Wrap.Union`2.#ctor
  name.vb: New
  fullName: Wrap.Union<TUnion, TValue>.Union
  fullName.vb: Wrap.Union(Of TUnion, TValue).New
  nameWithType: Union<TUnion, TValue>.Union
  nameWithType.vb: Union(Of TUnion, TValue).New
- uid: Wrap.Union`2.EqualityContract
  name: EqualityContract
  href: api/Wrap.Union-2.EqualityContract.html#Wrap_Union_2_EqualityContract
  commentId: P:Wrap.Union`2.EqualityContract
  fullName: Wrap.Union<TUnion, TValue>.EqualityContract
  fullName.vb: Wrap.Union(Of TUnion, TValue).EqualityContract
  nameWithType: Union<TUnion, TValue>.EqualityContract
  nameWithType.vb: Union(Of TUnion, TValue).EqualityContract
- uid: Wrap.Union`2.EqualityContract*
  name: EqualityContract
  href: api/Wrap.Union-2.EqualityContract.html
  commentId: Overload:Wrap.Union`2.EqualityContract
  fullName: Wrap.Union<TUnion, TValue>.EqualityContract
  fullName.vb: Wrap.Union(Of TUnion, TValue).EqualityContract
  nameWithType: Union<TUnion, TValue>.EqualityContract
  nameWithType.vb: Union(Of TUnion, TValue).EqualityContract
- uid: Wrap.Union`2.Equals(System.Object)
  name: Equals(object?)
  href: api/Wrap.Union-2.Equals.html#Wrap_Union_2_Equals_System_Object_
  commentId: M:Wrap.Union`2.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.Union<TUnion, TValue>.Equals(object?)
  fullName.vb: Wrap.Union(Of TUnion, TValue).Equals(Object)
  nameWithType: Union<TUnion, TValue>.Equals(object?)
  nameWithType.vb: Union(Of TUnion, TValue).Equals(Object)
- uid: Wrap.Union`2.Equals(Wrap.Union{`0,`1})
  name: Equals(Union<TUnion, TValue>?)
  href: api/Wrap.Union-2.Equals.html#Wrap_Union_2_Equals_Wrap_Union__0__1__
  commentId: M:Wrap.Union`2.Equals(Wrap.Union{`0,`1})
  name.vb: Equals(Union(Of TUnion, TValue))
  fullName: Wrap.Union<TUnion, TValue>.Equals(Wrap.Union<TUnion, TValue>?)
  fullName.vb: Wrap.Union(Of TUnion, TValue).Equals(Wrap.Union(Of TUnion, TValue))
  nameWithType: Union<TUnion, TValue>.Equals(Union<TUnion, TValue>?)
  nameWithType.vb: Union(Of TUnion, TValue).Equals(Union(Of TUnion, TValue))
- uid: Wrap.Union`2.Equals*
  name: Equals
  href: api/Wrap.Union-2.Equals.html
  commentId: Overload:Wrap.Union`2.Equals
  fullName: Wrap.Union<TUnion, TValue>.Equals
  fullName.vb: Wrap.Union(Of TUnion, TValue).Equals
  nameWithType: Union<TUnion, TValue>.Equals
  nameWithType.vb: Union(Of TUnion, TValue).Equals
- uid: Wrap.Union`2.GetHashCode
  name: GetHashCode()
  href: api/Wrap.Union-2.GetHashCode.html#Wrap_Union_2_GetHashCode
  commentId: M:Wrap.Union`2.GetHashCode
  fullName: Wrap.Union<TUnion, TValue>.GetHashCode()
  fullName.vb: Wrap.Union(Of TUnion, TValue).GetHashCode()
  nameWithType: Union<TUnion, TValue>.GetHashCode()
  nameWithType.vb: Union(Of TUnion, TValue).GetHashCode()
- uid: Wrap.Union`2.GetHashCode*
  name: GetHashCode
  href: api/Wrap.Union-2.GetHashCode.html
  commentId: Overload:Wrap.Union`2.GetHashCode
  fullName: Wrap.Union<TUnion, TValue>.GetHashCode
  fullName.vb: Wrap.Union(Of TUnion, TValue).GetHashCode
  nameWithType: Union<TUnion, TValue>.GetHashCode
  nameWithType.vb: Union(Of TUnion, TValue).GetHashCode
- uid: Wrap.Union`2.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Wrap.Union-2.PrintMembers.html#Wrap_Union_2_PrintMembers_System_Text_StringBuilder_
  commentId: M:Wrap.Union`2.PrintMembers(System.Text.StringBuilder)
  fullName: Wrap.Union<TUnion, TValue>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Wrap.Union(Of TUnion, TValue).PrintMembers(System.Text.StringBuilder)
  nameWithType: Union<TUnion, TValue>.PrintMembers(StringBuilder)
  nameWithType.vb: Union(Of TUnion, TValue).PrintMembers(StringBuilder)
- uid: Wrap.Union`2.PrintMembers*
  name: PrintMembers
  href: api/Wrap.Union-2.PrintMembers.html
  commentId: Overload:Wrap.Union`2.PrintMembers
  fullName: Wrap.Union<TUnion, TValue>.PrintMembers
  fullName.vb: Wrap.Union(Of TUnion, TValue).PrintMembers
  nameWithType: Union<TUnion, TValue>.PrintMembers
  nameWithType.vb: Union(Of TUnion, TValue).PrintMembers
- uid: Wrap.Union`2.ToString
  name: ToString()
  href: api/Wrap.Union-2.ToString.html#Wrap_Union_2_ToString
  commentId: M:Wrap.Union`2.ToString
  fullName: Wrap.Union<TUnion, TValue>.ToString()
  fullName.vb: Wrap.Union(Of TUnion, TValue).ToString()
  nameWithType: Union<TUnion, TValue>.ToString()
  nameWithType.vb: Union(Of TUnion, TValue).ToString()
- uid: Wrap.Union`2.ToString*
  name: ToString
  href: api/Wrap.Union-2.ToString.html
  commentId: Overload:Wrap.Union`2.ToString
  fullName: Wrap.Union<TUnion, TValue>.ToString
  fullName.vb: Wrap.Union(Of TUnion, TValue).ToString
  nameWithType: Union<TUnion, TValue>.ToString
  nameWithType.vb: Union(Of TUnion, TValue).ToString
- uid: Wrap.Union`2.Value
  name: Value
  href: api/Wrap.Union-2.Value.html#Wrap_Union_2_Value
  commentId: P:Wrap.Union`2.Value
  fullName: Wrap.Union<TUnion, TValue>.Value
  fullName.vb: Wrap.Union(Of TUnion, TValue).Value
  nameWithType: Union<TUnion, TValue>.Value
  nameWithType.vb: Union(Of TUnion, TValue).Value
- uid: Wrap.Union`2.Value*
  name: Value
  href: api/Wrap.Union-2.Value.html
  commentId: Overload:Wrap.Union`2.Value
  fullName: Wrap.Union<TUnion, TValue>.Value
  fullName.vb: Wrap.Union(Of TUnion, TValue).Value
  nameWithType: Union<TUnion, TValue>.Value
  nameWithType.vb: Union(Of TUnion, TValue).Value
- uid: Wrap.Union`2.Wrap(`1)
  name: Wrap(TValue)
  href: api/Wrap.Union-2.Wrap.html#Wrap_Union_2_Wrap__1_
  commentId: M:Wrap.Union`2.Wrap(`1)
  fullName: Wrap.Union<TUnion, TValue>.Wrap(TValue)
  fullName.vb: Wrap.Union(Of TUnion, TValue).Wrap(TValue)
  nameWithType: Union<TUnion, TValue>.Wrap(TValue)
  nameWithType.vb: Union(Of TUnion, TValue).Wrap(TValue)
- uid: Wrap.Union`2.Wrap*
  name: Wrap
  href: api/Wrap.Union-2.Wrap.html
  commentId: Overload:Wrap.Union`2.Wrap
  fullName: Wrap.Union<TUnion, TValue>.Wrap
  fullName.vb: Wrap.Union(Of TUnion, TValue).Wrap
  nameWithType: Union<TUnion, TValue>.Wrap
  nameWithType.vb: Union(Of TUnion, TValue).Wrap
- uid: Wrap.Union`2.op_Equality(Wrap.Union{`0,`1},Wrap.Union{`0,`1})
  name: operator ==(Union<TUnion, TValue>?, Union<TUnion, TValue>?)
  href: api/Wrap.Union-2.op_Equality.html#Wrap_Union_2_op_Equality_Wrap_Union__0__1__Wrap_Union__0__1__
  commentId: M:Wrap.Union`2.op_Equality(Wrap.Union{`0,`1},Wrap.Union{`0,`1})
  name.vb: =(Union(Of TUnion, TValue), Union(Of TUnion, TValue))
  fullName: Wrap.Union<TUnion, TValue>.operator ==(Wrap.Union<TUnion, TValue>?, Wrap.Union<TUnion, TValue>?)
  fullName.vb: Wrap.Union(Of TUnion, TValue).=(Wrap.Union(Of TUnion, TValue), Wrap.Union(Of TUnion, TValue))
  nameWithType: Union<TUnion, TValue>.operator ==(Union<TUnion, TValue>?, Union<TUnion, TValue>?)
  nameWithType.vb: Union(Of TUnion, TValue).=(Union(Of TUnion, TValue), Union(Of TUnion, TValue))
- uid: Wrap.Union`2.op_Equality*
  name: operator ==
  href: api/Wrap.Union-2.op_Equality.html
  commentId: Overload:Wrap.Union`2.op_Equality
  name.vb: =
  fullName: Wrap.Union<TUnion, TValue>.operator ==
  fullName.vb: Wrap.Union(Of TUnion, TValue).=
  nameWithType: Union<TUnion, TValue>.operator ==
  nameWithType.vb: Union(Of TUnion, TValue).=
- uid: Wrap.Union`2.op_Inequality(Wrap.Union{`0,`1},Wrap.Union{`0,`1})
  name: operator !=(Union<TUnion, TValue>?, Union<TUnion, TValue>?)
  href: api/Wrap.Union-2.op_Inequality.html#Wrap_Union_2_op_Inequality_Wrap_Union__0__1__Wrap_Union__0__1__
  commentId: M:Wrap.Union`2.op_Inequality(Wrap.Union{`0,`1},Wrap.Union{`0,`1})
  name.vb: <>(Union(Of TUnion, TValue), Union(Of TUnion, TValue))
  fullName: Wrap.Union<TUnion, TValue>.operator !=(Wrap.Union<TUnion, TValue>?, Wrap.Union<TUnion, TValue>?)
  fullName.vb: Wrap.Union(Of TUnion, TValue).<>(Wrap.Union(Of TUnion, TValue), Wrap.Union(Of TUnion, TValue))
  nameWithType: Union<TUnion, TValue>.operator !=(Union<TUnion, TValue>?, Union<TUnion, TValue>?)
  nameWithType.vb: Union(Of TUnion, TValue).<>(Union(Of TUnion, TValue), Union(Of TUnion, TValue))
- uid: Wrap.Union`2.op_Inequality*
  name: operator !=
  href: api/Wrap.Union-2.op_Inequality.html
  commentId: Overload:Wrap.Union`2.op_Inequality
  name.vb: <>
  fullName: Wrap.Union<TUnion, TValue>.operator !=
  fullName.vb: Wrap.Union(Of TUnion, TValue).<>
  nameWithType: Union<TUnion, TValue>.operator !=
  nameWithType.vb: Union(Of TUnion, TValue).<>
- uid: Wrap.UnsafeExtensions
  name: UnsafeExtensions
  href: api/Wrap.UnsafeExtensions.html
  commentId: T:Wrap.UnsafeExtensions
  fullName: Wrap.UnsafeExtensions
  nameWithType: UnsafeExtensions
- uid: Wrap.UnsafeExtensions.IsOk*
  name: IsOk
  href: api/Wrap.UnsafeExtensions.IsOk.html
  commentId: Overload:Wrap.UnsafeExtensions.IsOk
  fullName: Wrap.UnsafeExtensions.IsOk
  nameWithType: UnsafeExtensions.IsOk
- uid: Wrap.UnsafeExtensions.IsOk``1(Wrap.Unsafe{``0},``0@)
  name: IsOk<T>(Unsafe<T>, out T)
  href: api/Wrap.UnsafeExtensions.IsOk.html#Wrap_UnsafeExtensions_IsOk__1_Wrap_Unsafe___0____0__
  commentId: M:Wrap.UnsafeExtensions.IsOk``1(Wrap.Unsafe{``0},``0@)
  name.vb: IsOk(Of T)(Unsafe(Of T), T)
  fullName: Wrap.UnsafeExtensions.IsOk<T>(Wrap.Unsafe<T>, out T)
  fullName.vb: Wrap.UnsafeExtensions.IsOk(Of T)(Wrap.Unsafe(Of T), T)
  nameWithType: UnsafeExtensions.IsOk<T>(Unsafe<T>, out T)
  nameWithType.vb: UnsafeExtensions.IsOk(Of T)(Unsafe(Of T), T)
- uid: Wrap.UnsafeExtensions.IsSome*
  name: IsSome
  href: api/Wrap.UnsafeExtensions.IsSome.html
  commentId: Overload:Wrap.UnsafeExtensions.IsSome
  fullName: Wrap.UnsafeExtensions.IsSome
  nameWithType: UnsafeExtensions.IsSome
- uid: Wrap.UnsafeExtensions.IsSome``1(Wrap.Unsafe{``0},``0@)
  name: IsSome<T>(Unsafe<T>, out T)
  href: api/Wrap.UnsafeExtensions.IsSome.html#Wrap_UnsafeExtensions_IsSome__1_Wrap_Unsafe___0____0__
  commentId: M:Wrap.UnsafeExtensions.IsSome``1(Wrap.Unsafe{``0},``0@)
  name.vb: IsSome(Of T)(Unsafe(Of T), T)
  fullName: Wrap.UnsafeExtensions.IsSome<T>(Wrap.Unsafe<T>, out T)
  fullName.vb: Wrap.UnsafeExtensions.IsSome(Of T)(Wrap.Unsafe(Of T), T)
  nameWithType: UnsafeExtensions.IsSome<T>(Unsafe<T>, out T)
  nameWithType.vb: UnsafeExtensions.IsSome(Of T)(Unsafe(Of T), T)
- uid: Wrap.UnsafeExtensions.Unwrap*
  name: Unwrap
  href: api/Wrap.UnsafeExtensions.Unwrap.html
  commentId: Overload:Wrap.UnsafeExtensions.Unwrap
  fullName: Wrap.UnsafeExtensions.Unwrap
  nameWithType: UnsafeExtensions.Unwrap
- uid: Wrap.UnsafeExtensions.UnwrapAsync*
  name: UnwrapAsync
  href: api/Wrap.UnsafeExtensions.UnwrapAsync.html
  commentId: Overload:Wrap.UnsafeExtensions.UnwrapAsync
  fullName: Wrap.UnsafeExtensions.UnwrapAsync
  nameWithType: UnsafeExtensions.UnwrapAsync
- uid: Wrap.UnsafeExtensions.UnwrapAsync``1(System.Threading.Tasks.Task{Wrap.Unsafe{``0}})
  name: UnwrapAsync<T>(Task<Unsafe<T>>)
  href: api/Wrap.UnsafeExtensions.UnwrapAsync.html#Wrap_UnsafeExtensions_UnwrapAsync__1_System_Threading_Tasks_Task_Wrap_Unsafe___0___
  commentId: M:Wrap.UnsafeExtensions.UnwrapAsync``1(System.Threading.Tasks.Task{Wrap.Unsafe{``0}})
  name.vb: UnwrapAsync(Of T)(Task(Of Unsafe(Of T)))
  fullName: Wrap.UnsafeExtensions.UnwrapAsync<T>(System.Threading.Tasks.Task<Wrap.Unsafe<T>>)
  fullName.vb: Wrap.UnsafeExtensions.UnwrapAsync(Of T)(System.Threading.Tasks.Task(Of Wrap.Unsafe(Of T)))
  nameWithType: UnsafeExtensions.UnwrapAsync<T>(Task<Unsafe<T>>)
  nameWithType.vb: UnsafeExtensions.UnwrapAsync(Of T)(Task(Of Unsafe(Of T)))
- uid: Wrap.UnsafeExtensions.Unwrap``1(Wrap.Unsafe{``0})
  name: Unwrap<T>(Unsafe<T>)
  href: api/Wrap.UnsafeExtensions.Unwrap.html#Wrap_UnsafeExtensions_Unwrap__1_Wrap_Unsafe___0__
  commentId: M:Wrap.UnsafeExtensions.Unwrap``1(Wrap.Unsafe{``0})
  name.vb: Unwrap(Of T)(Unsafe(Of T))
  fullName: Wrap.UnsafeExtensions.Unwrap<T>(Wrap.Unsafe<T>)
  fullName.vb: Wrap.UnsafeExtensions.Unwrap(Of T)(Wrap.Unsafe(Of T))
  nameWithType: UnsafeExtensions.Unwrap<T>(Unsafe<T>)
  nameWithType.vb: UnsafeExtensions.Unwrap(Of T)(Unsafe(Of T))
- uid: Wrap.Unsafe`1
  name: Unsafe<T>
  href: api/Wrap.Unsafe-1.html
  commentId: T:Wrap.Unsafe`1
  name.vb: Unsafe(Of T)
  fullName: Wrap.Unsafe<T>
  fullName.vb: Wrap.Unsafe(Of T)
  nameWithType: Unsafe<T>
  nameWithType.vb: Unsafe(Of T)
- uid: Wrap.Unsafe`1.Equals(System.Object)
  name: Equals(object)
  href: api/Wrap.Unsafe-1.Equals.html#Wrap_Unsafe_1_Equals_System_Object_
  commentId: M:Wrap.Unsafe`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.Unsafe<T>.Equals(object)
  fullName.vb: Wrap.Unsafe(Of T).Equals(Object)
  nameWithType: Unsafe<T>.Equals(object)
  nameWithType.vb: Unsafe(Of T).Equals(Object)
- uid: Wrap.Unsafe`1.Equals(Wrap.Unsafe{`0})
  name: Equals(Unsafe<T>)
  href: api/Wrap.Unsafe-1.Equals.html#Wrap_Unsafe_1_Equals_Wrap_Unsafe__0__
  commentId: M:Wrap.Unsafe`1.Equals(Wrap.Unsafe{`0})
  name.vb: Equals(Unsafe(Of T))
  fullName: Wrap.Unsafe<T>.Equals(Wrap.Unsafe<T>)
  fullName.vb: Wrap.Unsafe(Of T).Equals(Wrap.Unsafe(Of T))
  nameWithType: Unsafe<T>.Equals(Unsafe<T>)
  nameWithType.vb: Unsafe(Of T).Equals(Unsafe(Of T))
- uid: Wrap.Unsafe`1.Equals*
  name: Equals
  href: api/Wrap.Unsafe-1.Equals.html
  commentId: Overload:Wrap.Unsafe`1.Equals
  fullName: Wrap.Unsafe<T>.Equals
  fullName.vb: Wrap.Unsafe(Of T).Equals
  nameWithType: Unsafe<T>.Equals
  nameWithType.vb: Unsafe(Of T).Equals
- uid: Wrap.Unsafe`1.GetHashCode
  name: GetHashCode()
  href: api/Wrap.Unsafe-1.GetHashCode.html#Wrap_Unsafe_1_GetHashCode
  commentId: M:Wrap.Unsafe`1.GetHashCode
  fullName: Wrap.Unsafe<T>.GetHashCode()
  fullName.vb: Wrap.Unsafe(Of T).GetHashCode()
  nameWithType: Unsafe<T>.GetHashCode()
  nameWithType.vb: Unsafe(Of T).GetHashCode()
- uid: Wrap.Unsafe`1.GetHashCode*
  name: GetHashCode
  href: api/Wrap.Unsafe-1.GetHashCode.html
  commentId: Overload:Wrap.Unsafe`1.GetHashCode
  fullName: Wrap.Unsafe<T>.GetHashCode
  fullName.vb: Wrap.Unsafe(Of T).GetHashCode
  nameWithType: Unsafe<T>.GetHashCode
  nameWithType.vb: Unsafe(Of T).GetHashCode
- uid: Wrap.Unsafe`1.ToString
  name: ToString()
  href: api/Wrap.Unsafe-1.ToString.html#Wrap_Unsafe_1_ToString
  commentId: M:Wrap.Unsafe`1.ToString
  fullName: Wrap.Unsafe<T>.ToString()
  fullName.vb: Wrap.Unsafe(Of T).ToString()
  nameWithType: Unsafe<T>.ToString()
  nameWithType.vb: Unsafe(Of T).ToString()
- uid: Wrap.Unsafe`1.ToString*
  name: ToString
  href: api/Wrap.Unsafe-1.ToString.html
  commentId: Overload:Wrap.Unsafe`1.ToString
  fullName: Wrap.Unsafe<T>.ToString
  fullName.vb: Wrap.Unsafe(Of T).ToString
  nameWithType: Unsafe<T>.ToString
  nameWithType.vb: Unsafe(Of T).ToString
- uid: Wrap.Unsafe`1.op_Equality(Wrap.Unsafe{`0},Wrap.Unsafe{`0})
  name: operator ==(Unsafe<T>, Unsafe<T>)
  href: api/Wrap.Unsafe-1.op_Equality.html#Wrap_Unsafe_1_op_Equality_Wrap_Unsafe__0__Wrap_Unsafe__0__
  commentId: M:Wrap.Unsafe`1.op_Equality(Wrap.Unsafe{`0},Wrap.Unsafe{`0})
  name.vb: =(Unsafe(Of T), Unsafe(Of T))
  fullName: Wrap.Unsafe<T>.operator ==(Wrap.Unsafe<T>, Wrap.Unsafe<T>)
  fullName.vb: Wrap.Unsafe(Of T).=(Wrap.Unsafe(Of T), Wrap.Unsafe(Of T))
  nameWithType: Unsafe<T>.operator ==(Unsafe<T>, Unsafe<T>)
  nameWithType.vb: Unsafe(Of T).=(Unsafe(Of T), Unsafe(Of T))
- uid: Wrap.Unsafe`1.op_Equality*
  name: operator ==
  href: api/Wrap.Unsafe-1.op_Equality.html
  commentId: Overload:Wrap.Unsafe`1.op_Equality
  name.vb: =
  fullName: Wrap.Unsafe<T>.operator ==
  fullName.vb: Wrap.Unsafe(Of T).=
  nameWithType: Unsafe<T>.operator ==
  nameWithType.vb: Unsafe(Of T).=
- uid: Wrap.Unsafe`1.op_Inequality(Wrap.Unsafe{`0},Wrap.Unsafe{`0})
  name: operator !=(Unsafe<T>, Unsafe<T>)
  href: api/Wrap.Unsafe-1.op_Inequality.html#Wrap_Unsafe_1_op_Inequality_Wrap_Unsafe__0__Wrap_Unsafe__0__
  commentId: M:Wrap.Unsafe`1.op_Inequality(Wrap.Unsafe{`0},Wrap.Unsafe{`0})
  name.vb: <>(Unsafe(Of T), Unsafe(Of T))
  fullName: Wrap.Unsafe<T>.operator !=(Wrap.Unsafe<T>, Wrap.Unsafe<T>)
  fullName.vb: Wrap.Unsafe(Of T).<>(Wrap.Unsafe(Of T), Wrap.Unsafe(Of T))
  nameWithType: Unsafe<T>.operator !=(Unsafe<T>, Unsafe<T>)
  nameWithType.vb: Unsafe(Of T).<>(Unsafe(Of T), Unsafe(Of T))
- uid: Wrap.Unsafe`1.op_Inequality*
  name: operator !=
  href: api/Wrap.Unsafe-1.op_Inequality.html
  commentId: Overload:Wrap.Unsafe`1.op_Inequality
  name.vb: <>
  fullName: Wrap.Unsafe<T>.operator !=
  fullName.vb: Wrap.Unsafe(Of T).<>
  nameWithType: Unsafe<T>.operator !=
  nameWithType.vb: Unsafe(Of T).<>
- uid: Wrap.WithId`2
  name: WithId<TId, TValue>
  href: api/Wrap.WithId-2.html
  commentId: T:Wrap.WithId`2
  name.vb: WithId(Of TId, TValue)
  fullName: Wrap.WithId<TId, TValue>
  fullName.vb: Wrap.WithId(Of TId, TValue)
  nameWithType: WithId<TId, TValue>
  nameWithType.vb: WithId(Of TId, TValue)
- uid: Wrap.WithId`2.#ctor
  name: WithId()
  href: api/Wrap.WithId-2.-ctor.html#Wrap_WithId_2__ctor
  commentId: M:Wrap.WithId`2.#ctor
  name.vb: New()
  fullName: Wrap.WithId<TId, TValue>.WithId()
  fullName.vb: Wrap.WithId(Of TId, TValue).New()
  nameWithType: WithId<TId, TValue>.WithId()
  nameWithType.vb: WithId(Of TId, TValue).New()
- uid: Wrap.WithId`2.#ctor(Wrap.WithId{`0,`1})
  name: WithId(WithId<TId, TValue>)
  href: api/Wrap.WithId-2.-ctor.html#Wrap_WithId_2__ctor_Wrap_WithId__0__1__
  commentId: M:Wrap.WithId`2.#ctor(Wrap.WithId{`0,`1})
  name.vb: New(WithId(Of TId, TValue))
  fullName: Wrap.WithId<TId, TValue>.WithId(Wrap.WithId<TId, TValue>)
  fullName.vb: Wrap.WithId(Of TId, TValue).New(Wrap.WithId(Of TId, TValue))
  nameWithType: WithId<TId, TValue>.WithId(WithId<TId, TValue>)
  nameWithType.vb: WithId(Of TId, TValue).New(WithId(Of TId, TValue))
- uid: Wrap.WithId`2.#ctor*
  name: WithId
  href: api/Wrap.WithId-2.-ctor.html
  commentId: Overload:Wrap.WithId`2.#ctor
  name.vb: New
  fullName: Wrap.WithId<TId, TValue>.WithId
  fullName.vb: Wrap.WithId(Of TId, TValue).New
  nameWithType: WithId<TId, TValue>.WithId
  nameWithType.vb: WithId(Of TId, TValue).New
- uid: Wrap.WithId`2.EqualityContract
  name: EqualityContract
  href: api/Wrap.WithId-2.EqualityContract.html#Wrap_WithId_2_EqualityContract
  commentId: P:Wrap.WithId`2.EqualityContract
  fullName: Wrap.WithId<TId, TValue>.EqualityContract
  fullName.vb: Wrap.WithId(Of TId, TValue).EqualityContract
  nameWithType: WithId<TId, TValue>.EqualityContract
  nameWithType.vb: WithId(Of TId, TValue).EqualityContract
- uid: Wrap.WithId`2.EqualityContract*
  name: EqualityContract
  href: api/Wrap.WithId-2.EqualityContract.html
  commentId: Overload:Wrap.WithId`2.EqualityContract
  fullName: Wrap.WithId<TId, TValue>.EqualityContract
  fullName.vb: Wrap.WithId(Of TId, TValue).EqualityContract
  nameWithType: WithId<TId, TValue>.EqualityContract
  nameWithType.vb: WithId(Of TId, TValue).EqualityContract
- uid: Wrap.WithId`2.Equals(System.Object)
  name: Equals(object?)
  href: api/Wrap.WithId-2.Equals.html#Wrap_WithId_2_Equals_System_Object_
  commentId: M:Wrap.WithId`2.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Wrap.WithId<TId, TValue>.Equals(object?)
  fullName.vb: Wrap.WithId(Of TId, TValue).Equals(Object)
  nameWithType: WithId<TId, TValue>.Equals(object?)
  nameWithType.vb: WithId(Of TId, TValue).Equals(Object)
- uid: Wrap.WithId`2.Equals(Wrap.WithId{`0,`1})
  name: Equals(WithId<TId, TValue>?)
  href: api/Wrap.WithId-2.Equals.html#Wrap_WithId_2_Equals_Wrap_WithId__0__1__
  commentId: M:Wrap.WithId`2.Equals(Wrap.WithId{`0,`1})
  name.vb: Equals(WithId(Of TId, TValue))
  fullName: Wrap.WithId<TId, TValue>.Equals(Wrap.WithId<TId, TValue>?)
  fullName.vb: Wrap.WithId(Of TId, TValue).Equals(Wrap.WithId(Of TId, TValue))
  nameWithType: WithId<TId, TValue>.Equals(WithId<TId, TValue>?)
  nameWithType.vb: WithId(Of TId, TValue).Equals(WithId(Of TId, TValue))
- uid: Wrap.WithId`2.Equals*
  name: Equals
  href: api/Wrap.WithId-2.Equals.html
  commentId: Overload:Wrap.WithId`2.Equals
  fullName: Wrap.WithId<TId, TValue>.Equals
  fullName.vb: Wrap.WithId(Of TId, TValue).Equals
  nameWithType: WithId<TId, TValue>.Equals
  nameWithType.vb: WithId(Of TId, TValue).Equals
- uid: Wrap.WithId`2.GetHashCode
  name: GetHashCode()
  href: api/Wrap.WithId-2.GetHashCode.html#Wrap_WithId_2_GetHashCode
  commentId: M:Wrap.WithId`2.GetHashCode
  fullName: Wrap.WithId<TId, TValue>.GetHashCode()
  fullName.vb: Wrap.WithId(Of TId, TValue).GetHashCode()
  nameWithType: WithId<TId, TValue>.GetHashCode()
  nameWithType.vb: WithId(Of TId, TValue).GetHashCode()
- uid: Wrap.WithId`2.GetHashCode*
  name: GetHashCode
  href: api/Wrap.WithId-2.GetHashCode.html
  commentId: Overload:Wrap.WithId`2.GetHashCode
  fullName: Wrap.WithId<TId, TValue>.GetHashCode
  fullName.vb: Wrap.WithId(Of TId, TValue).GetHashCode
  nameWithType: WithId<TId, TValue>.GetHashCode
  nameWithType.vb: WithId(Of TId, TValue).GetHashCode
- uid: Wrap.WithId`2.Id
  name: Id
  href: api/Wrap.WithId-2.Id.html#Wrap_WithId_2_Id
  commentId: P:Wrap.WithId`2.Id
  fullName: Wrap.WithId<TId, TValue>.Id
  fullName.vb: Wrap.WithId(Of TId, TValue).Id
  nameWithType: WithId<TId, TValue>.Id
  nameWithType.vb: WithId(Of TId, TValue).Id
- uid: Wrap.WithId`2.Id*
  name: Id
  href: api/Wrap.WithId-2.Id.html
  commentId: Overload:Wrap.WithId`2.Id
  fullName: Wrap.WithId<TId, TValue>.Id
  fullName.vb: Wrap.WithId(Of TId, TValue).Id
  nameWithType: WithId<TId, TValue>.Id
  nameWithType.vb: WithId(Of TId, TValue).Id
- uid: Wrap.WithId`2.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Wrap.WithId-2.PrintMembers.html#Wrap_WithId_2_PrintMembers_System_Text_StringBuilder_
  commentId: M:Wrap.WithId`2.PrintMembers(System.Text.StringBuilder)
  fullName: Wrap.WithId<TId, TValue>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Wrap.WithId(Of TId, TValue).PrintMembers(System.Text.StringBuilder)
  nameWithType: WithId<TId, TValue>.PrintMembers(StringBuilder)
  nameWithType.vb: WithId(Of TId, TValue).PrintMembers(StringBuilder)
- uid: Wrap.WithId`2.PrintMembers*
  name: PrintMembers
  href: api/Wrap.WithId-2.PrintMembers.html
  commentId: Overload:Wrap.WithId`2.PrintMembers
  fullName: Wrap.WithId<TId, TValue>.PrintMembers
  fullName.vb: Wrap.WithId(Of TId, TValue).PrintMembers
  nameWithType: WithId<TId, TValue>.PrintMembers
  nameWithType.vb: WithId(Of TId, TValue).PrintMembers
- uid: Wrap.WithId`2.ToString
  name: ToString()
  href: api/Wrap.WithId-2.ToString.html#Wrap_WithId_2_ToString
  commentId: M:Wrap.WithId`2.ToString
  fullName: Wrap.WithId<TId, TValue>.ToString()
  fullName.vb: Wrap.WithId(Of TId, TValue).ToString()
  nameWithType: WithId<TId, TValue>.ToString()
  nameWithType.vb: WithId(Of TId, TValue).ToString()
- uid: Wrap.WithId`2.ToString*
  name: ToString
  href: api/Wrap.WithId-2.ToString.html
  commentId: Overload:Wrap.WithId`2.ToString
  fullName: Wrap.WithId<TId, TValue>.ToString
  fullName.vb: Wrap.WithId(Of TId, TValue).ToString
  nameWithType: WithId<TId, TValue>.ToString
  nameWithType.vb: WithId(Of TId, TValue).ToString
- uid: Wrap.WithId`2.op_Equality(Wrap.WithId{`0,`1},Wrap.WithId{`0,`1})
  name: operator ==(WithId<TId, TValue>?, WithId<TId, TValue>?)
  href: api/Wrap.WithId-2.op_Equality.html#Wrap_WithId_2_op_Equality_Wrap_WithId__0__1__Wrap_WithId__0__1__
  commentId: M:Wrap.WithId`2.op_Equality(Wrap.WithId{`0,`1},Wrap.WithId{`0,`1})
  name.vb: =(WithId(Of TId, TValue), WithId(Of TId, TValue))
  fullName: Wrap.WithId<TId, TValue>.operator ==(Wrap.WithId<TId, TValue>?, Wrap.WithId<TId, TValue>?)
  fullName.vb: Wrap.WithId(Of TId, TValue).=(Wrap.WithId(Of TId, TValue), Wrap.WithId(Of TId, TValue))
  nameWithType: WithId<TId, TValue>.operator ==(WithId<TId, TValue>?, WithId<TId, TValue>?)
  nameWithType.vb: WithId(Of TId, TValue).=(WithId(Of TId, TValue), WithId(Of TId, TValue))
- uid: Wrap.WithId`2.op_Equality*
  name: operator ==
  href: api/Wrap.WithId-2.op_Equality.html
  commentId: Overload:Wrap.WithId`2.op_Equality
  name.vb: =
  fullName: Wrap.WithId<TId, TValue>.operator ==
  fullName.vb: Wrap.WithId(Of TId, TValue).=
  nameWithType: WithId<TId, TValue>.operator ==
  nameWithType.vb: WithId(Of TId, TValue).=
- uid: Wrap.WithId`2.op_Inequality(Wrap.WithId{`0,`1},Wrap.WithId{`0,`1})
  name: operator !=(WithId<TId, TValue>?, WithId<TId, TValue>?)
  href: api/Wrap.WithId-2.op_Inequality.html#Wrap_WithId_2_op_Inequality_Wrap_WithId__0__1__Wrap_WithId__0__1__
  commentId: M:Wrap.WithId`2.op_Inequality(Wrap.WithId{`0,`1},Wrap.WithId{`0,`1})
  name.vb: <>(WithId(Of TId, TValue), WithId(Of TId, TValue))
  fullName: Wrap.WithId<TId, TValue>.operator !=(Wrap.WithId<TId, TValue>?, Wrap.WithId<TId, TValue>?)
  fullName.vb: Wrap.WithId(Of TId, TValue).<>(Wrap.WithId(Of TId, TValue), Wrap.WithId(Of TId, TValue))
  nameWithType: WithId<TId, TValue>.operator !=(WithId<TId, TValue>?, WithId<TId, TValue>?)
  nameWithType.vb: WithId(Of TId, TValue).<>(WithId(Of TId, TValue), WithId(Of TId, TValue))
- uid: Wrap.WithId`2.op_Inequality*
  name: operator !=
  href: api/Wrap.WithId-2.op_Inequality.html
  commentId: Overload:Wrap.WithId`2.op_Inequality
  name.vb: <>
  fullName: Wrap.WithId<TId, TValue>.operator !=
  fullName.vb: Wrap.WithId(Of TId, TValue).<>
  nameWithType: WithId<TId, TValue>.operator !=
  nameWithType.vb: WithId(Of TId, TValue).<>
